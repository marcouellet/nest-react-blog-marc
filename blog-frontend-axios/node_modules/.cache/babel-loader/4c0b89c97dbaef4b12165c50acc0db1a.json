{"ast":null,"code":"import { statusCodeToReasonPhrase, reasonPhraseToStatusCode } from './utils';\n/**\r\n * Returns the reason phrase for the given status code.\r\n * If the given status code does not exist, an error is thrown.\r\n *\r\n * @param {number|string} statusCode The HTTP status code\r\n * @returns {string} The associated reason phrase (e.g. \"Bad Request\", \"OK\")\r\n * */\n\nexport function getReasonPhrase(statusCode) {\n  var result = statusCodeToReasonPhrase[statusCode.toString()];\n\n  if (!result) {\n    throw new Error(\"Status code does not exist: \" + statusCode);\n  }\n\n  return result;\n}\n/**\r\n * Returns the status code for the given reason phrase.\r\n * If the given reason phrase does not exist, undefined is returned.\r\n *\r\n * @param {string} reasonPhrase The HTTP reason phrase (e.g. \"Bad Request\", \"OK\")\r\n * @returns {string} The associated status code\r\n * */\n\nexport function getStatusCode(reasonPhrase) {\n  var result = reasonPhraseToStatusCode[reasonPhrase];\n\n  if (!result) {\n    throw new Error(\"Reason phrase does not exist: \" + reasonPhrase);\n  }\n\n  return result;\n}\n/**\r\n * @deprecated\r\n *\r\n * Returns the reason phrase for the given status code.\r\n * If the given status code does not exist, undefined is returned.\r\n *\r\n * Deprecated in favor of getReasonPhrase\r\n *\r\n * @param {number|string} statusCode The HTTP status code\r\n * @returns {string|undefined} The associated reason phrase (e.g. \"Bad Request\", \"OK\")\r\n * */\n\nexport var getStatusText = getReasonPhrase;","map":null,"metadata":{},"sourceType":"module"}
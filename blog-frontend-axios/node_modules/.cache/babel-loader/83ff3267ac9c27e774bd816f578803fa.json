{"ast":null,"code":"import _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\post\\\\ViewPost.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport { UserRole } from \"../../types\";\nimport { toast } from \"react-toastify\";\nimport { PostApiService } from \"../../services/api/PostApiService\";\nimport { createActionLoading, createActionSessionExpired } from '../../reducers/auth';\nimport useAuth from '../../contexts/auth';\nimport ListErrors from '../common/ListErrors';\nimport { toLocalDateString } from '../../utils/local.storage.utils';\nimport { checkUnauthorized, checkSessionExpired, checkTimeout } from '../../utils/html.response.utils';\nimport DeleteButton from '../common/deleteConfirmation';\nimport Image from '../common/Image';\nimport ImageResize from '../common/ImageResize';\nimport { resizeImage } from '../../utils/image.utils';\n\nconst ViewPost = () => {\n  const _useParams = useParams(),\n        postId = _useParams.postId;\n\n  const _useAuth = useAuth(),\n        _useAuth$state = _useAuth.state,\n        isLoading = _useAuth$state.isLoading,\n        isAuthenticated = _useAuth$state.isAuthenticated,\n        user = _useAuth$state.user,\n        dispatch = _useAuth.dispatch;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        post = _useState2[0],\n        setPost = _useState2[1];\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        errorList = _React$useState2[0],\n        setErrorList = _React$useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        postDefaultImage = _useState4[0],\n        setpostDefaultImage = _useState4[1];\n\n  const navigate = useNavigate();\n\n  const isAdministrator = () => isAuthenticated && (user === null || user === void 0 ? void 0 : user.role) === UserRole.ADMIN;\n\n  const deletePostMessage = post => `${post.title} post`;\n\n  useEffect(() => {\n    if (!post) {\n      const fetchData = async () => {\n        dispatch(createActionLoading(true));\n        await getDefaultPostImage().then(imageData => {\n          setpostDefaultImage(imageData);\n        }).catch(error => {\n          throw new Error(error);\n        }).finally(() => dispatch(createActionLoading(false)));\n        await PostApiService.getPostById(postId).then(post => setPost(post)).catch(apiErrors => handleFetchPostError(apiErrors)).finally(() => dispatch(createActionLoading(false)));\n      };\n\n      fetchData();\n    } // eslint-disable-next-line\n\n  }, []);\n\n  const getDefaultPostImage = () => {\n    return resizeImage('/default-post-image.jpg', 'image/jpg', imageMaxSize.maxWidth, imageMaxSize.maxHeight);\n  };\n\n  const PostImage = post => {\n    if (post.image) {\n      return React.createElement(ImageResize, {\n        imageData: post.image,\n        resize: imageMaxSize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      });\n    } else {\n      return postDefaultImage && React.createElement(Image, {\n        imageData: postDefaultImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n    }\n  };\n\n  const parseHtml = html => {\n    return ReactHtmlParser(html);\n  };\n\n  const goBack = () => {\n    navigate(-1);\n  };\n\n  const imageMaxSize = {\n    maxWidth: 200,\n    maxHeight: 200\n  };\n\n  const handleApiErrors = (apiErrors, process) => {\n    if (checkSessionExpired(apiErrors)) {\n      toast.error(`${process} failed, session expired`);\n      dispatch(createActionSessionExpired());\n    } else if (checkUnauthorized(apiErrors)) {\n      toast.error(`Access denied`);\n    } else if (checkTimeout(apiErrors)) {\n      toast.error(`Request timeout`);\n    } else {\n      toast.error(`${process} failed, see error list`);\n      setErrorList(apiErrors);\n    }\n  };\n\n  const handleDeletePost = async id => {\n    dispatch(createActionLoading(true));\n    await PostApiService.deletePost(id).then(() => handleDeletePostSucess()).catch(apiErrors => handleDeletePostError(apiErrors));\n    dispatch(createActionLoading(false));\n    goBack();\n  };\n\n  const handleDeletePostSucess = () => {\n    toast.success(`Post deleted successfully...`);\n  };\n\n  const handleDeletePostError = apiErrors => {\n    handleApiErrors(apiErrors, 'Post delete');\n  };\n\n  const handleFetchPostError = apiErrors => {\n    handleApiErrors(apiErrors, 'Post reading');\n  };\n\n  const handleReturn = () => {\n    goBack();\n  };\n\n  const getDateString = date => {\n    if (date) {\n      return toLocalDateString(date);\n    } else {\n      return \"no date provided\";\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, post && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, PostImage(post)), React.createElement(\"div\", {\n    className: \"col-md-7\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    className: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Date posted:\\xA0\", getDateString(post.publishDate))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(\"h6\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Title:\\xA0\", post.title)), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(\"h6\", {\n    className: \"category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Category:\\xA0\", post.category ? post.category.title : 'No category assigned')), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), React.createElement(\"h6\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Description:\\xA0\", post.description)), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"para\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, parseHtml(post.body))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-lg-10 col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group row-md-6 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn ml-2 btn-secondary\",\n    onClick: () => handleReturn(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Return\"), isAuthenticated && !isLoading && (isAdministrator() || user.email === post.user.email) && React.createElement(Link, {\n    to: `/post/edit/${post.id}`,\n    className: \"btn ml-2 btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Edit Post\"), isAuthenticated && !isLoading && (isAdministrator() || user.email === post.user.email) && React.createElement(DeleteButton, {\n    message: deletePostMessage(post),\n    onClick: () => handleDeletePost(post.id),\n    className: \"btn ml-2 btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Delete Post\")))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, errorList && React.createElement(ListErrors, {\n    errors: errorList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }))));\n};\n\nexport default ViewPost;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/post/ViewPost.tsx"],"names":["React","useState","useEffect","ReactHtmlParser","Link","useParams","useNavigate","UserRole","toast","PostApiService","createActionLoading","createActionSessionExpired","useAuth","ListErrors","toLocalDateString","checkUnauthorized","checkSessionExpired","checkTimeout","DeleteButton","Image","ImageResize","resizeImage","ViewPost","postId","state","isLoading","isAuthenticated","user","dispatch","post","setPost","errorList","setErrorList","postDefaultImage","setpostDefaultImage","navigate","isAdministrator","role","ADMIN","deletePostMessage","title","fetchData","getDefaultPostImage","then","imageData","catch","error","Error","finally","getPostById","apiErrors","handleFetchPostError","imageMaxSize","maxWidth","maxHeight","PostImage","image","parseHtml","html","goBack","handleApiErrors","process","handleDeletePost","id","deletePost","handleDeletePostSucess","handleDeletePostError","success","handleReturn","getDateString","date","publishDate","category","description","body","email"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport { IPost, UserRole } from \"../../types\";\r\nimport { toast } from \"react-toastify\";\r\nimport { PostApiService } from \"../../services/api/PostApiService\";\r\nimport { createActionLoading, createActionSessionExpired } from '../../reducers/auth';\r\nimport useAuth from '../../contexts/auth';\r\nimport ListErrors from '../common/ListErrors';\r\nimport { IErrors, ImageData, ImageSizeProps } from '../../types';\r\nimport { toLocalDateString } from '../../utils/local.storage.utils';\r\nimport { checkUnauthorized, checkSessionExpired, checkTimeout } from '../../utils/html.response.utils';\r\nimport DeleteButton from '../common/deleteConfirmation';\r\nimport Image from '../common/Image';\r\nimport ImageResize from '../common/ImageResize';\r\nimport { resizeImage } from '../../utils/image.utils';\r\n\r\nconst ViewPost = () => {\r\n\r\n  const { postId } = useParams<{ postId: string }>();\r\n  const { state: { isLoading, isAuthenticated, user }, dispatch } = useAuth();\r\n  const [post, setPost] = useState<IPost>();\r\n  const [errorList, setErrorList] = React.useState<IErrors | null>();\r\n  const [postDefaultImage, setpostDefaultImage] = useState<ImageData>();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const isAdministrator = () => isAuthenticated && user?.role === UserRole.ADMIN;\r\n  const deletePostMessage = (post: IPost) => `${post.title} post`;\r\n\r\n  useEffect(() => {\r\n    if (!post) {\r\n      const fetchData = async (): Promise<void> => {\r\n        dispatch(createActionLoading(true));\r\n        await getDefaultPostImage()\r\n        .then(imageData => { setpostDefaultImage(imageData);})\r\n        .catch(error => {\r\n          throw new Error(error);\r\n        })\r\n        .finally(() => dispatch(createActionLoading(false))); \r\n        await PostApiService.getPostById(postId!)\r\n        .then((post) => setPost(post))\r\n        .catch((apiErrors: IErrors) => handleFetchPostError(apiErrors))\r\n        .finally(() => dispatch(createActionLoading(false)));\r\n      }\r\n      fetchData();  \r\n    }\r\n  // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const getDefaultPostImage = (): Promise<ImageData> => {\r\n    return resizeImage('/default-post-image.jpg', 'image/jpg', imageMaxSize.maxWidth, imageMaxSize.maxHeight);\r\n  }\r\n\r\n  const PostImage = (post: IPost) => {\r\n    if(post.image) {\r\n      return <ImageResize imageData={post.image} resize={imageMaxSize}/>;\r\n    }  else {\r\n      return  postDefaultImage && <Image imageData={postDefaultImage}/> \r\n    }\r\n  }\r\n\r\n  const parseHtml = (html: string) => {\r\n    return ReactHtmlParser(html);\r\n  }\r\n\r\n  const goBack = () => {\r\n    navigate(-1);\r\n  }\r\n\r\n  const imageMaxSize: ImageSizeProps = {maxWidth:200, maxHeight:200}\r\n  \r\n  const handleApiErrors = (apiErrors: IErrors, process: string) => {\r\n    if (checkSessionExpired(apiErrors)) {\r\n      toast.error(`${process} failed, session expired`);\r\n      dispatch(createActionSessionExpired());\r\n    } else if (checkUnauthorized(apiErrors)) {\r\n      toast.error(`Access denied`);\r\n    } else if (checkTimeout(apiErrors)) {\r\n      toast.error(`Request timeout`);\r\n    } else {\r\n      toast.error(`${process} failed, see error list`);\r\n      setErrorList(apiErrors);      \r\n    }\r\n  }\r\n\r\n  const handleDeletePost = async (id: string) => {\r\n    dispatch(createActionLoading(true));\r\n    await PostApiService.deletePost(id)\r\n     .then(() => handleDeletePostSucess())\r\n     .catch((apiErrors: IErrors) => handleDeletePostError(apiErrors))\r\n    dispatch(createActionLoading(false));\r\n    goBack();\r\n  }\r\n  const handleDeletePostSucess = () => {\r\n    toast.success(`Post deleted successfully...`);\r\n  }\r\n\r\n  const handleDeletePostError = (apiErrors: IErrors) => {\r\n    handleApiErrors(apiErrors,'Post delete');\r\n  }\r\n\r\n  const handleFetchPostError = (apiErrors: IErrors) => {\r\n    handleApiErrors(apiErrors,'Post reading');\r\n  }\r\n\r\n  const handleReturn = () => {\r\n    goBack();  \r\n  }\r\n\r\n  const getDateString = (date: Date): string => {\r\n    if (date) {\r\n      return toLocalDateString(date)!;\r\n    } else {\r\n      return \"no date provided\"\r\n    }\r\n  }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {post && \r\n        (\r\n          <div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                {PostImage(post)}\r\n              </div>\r\n              <div className=\"col-md-7\">\r\n                <h6 className=\"date\">\r\n                  <span>\r\n                    Date posted:&nbsp;{getDateString(post.publishDate!)}\r\n                  </span>\r\n                </h6>\r\n                <br/>\r\n                <h6 className=\"title\">\r\n                  <span>\r\n                    Title:&nbsp;{post.title}\r\n                  </span>\r\n                </h6>\r\n                <br/>\r\n                <h6 className=\"category\">\r\n                  <span>\r\n                    Category:&nbsp;{post.category ? post.category.title : 'No category assigned'}\r\n                  </span>\r\n                </h6>\r\n                <br/>\r\n                <h6 className=\"description\">\r\n                  <span>\r\n                    Description:&nbsp;{post.description}\r\n                  </span>\r\n                </h6>\r\n                <br/>\r\n              </div>\r\n            </div>\r\n            <br/>\r\n            <div className=\"row\">\r\n              <p className=\"para\">\r\n                {parseHtml(post.body)}\r\n              </p>                \r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-10 col-md-12\">\r\n                <div className=\"form-group row-md-6 pull-right\">\r\n                  <button className=\"btn ml-2 btn-secondary\"  onClick={ () => handleReturn() } >\r\n                    Return\r\n                  </button>\r\n                  {isAuthenticated && !isLoading && (isAdministrator() || user!.email === post.user!.email) &&\r\n                    (\r\n                      <Link to={`/post/edit/${post.id}`} className=\"btn ml-2 btn-primary\">Edit Post</Link>                  \r\n                    )\r\n                  }\r\n                  {isAuthenticated && !isLoading && (isAdministrator() || user!.email === post.user!.email) && \r\n                    (               \r\n                      <DeleteButton message={deletePostMessage(post)} onClick={() => handleDeletePost(post.id!)} className=\"btn ml-2 btn-danger\">Delete Post</DeleteButton>\r\n                    )\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {errorList && <ListErrors errors={errorList} />}\r\n            </div>\r\n          </div>\r\n        )\r\n        }\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ViewPost;"]},"metadata":{},"sourceType":"module"}
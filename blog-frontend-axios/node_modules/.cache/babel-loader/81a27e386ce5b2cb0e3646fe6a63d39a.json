{"ast":null,"code":"import { setLocalStorageValue, removeLocalStorageValue, getLocalStorageValue } from '../../utils/local.storage.utils';\nimport { HTTP_RESPONSE_HEADER_TIMESTAMP } from \"../../config/api.config\";\nexport const USER_KEY = 'user';\n\nconst getLocalAccessToken = () => {\n  const user = getLocalStorageValue(USER_KEY);\n  return user === null || user === void 0 ? void 0 : user.authtoken;\n};\n\nconst updateLocalAccessToken = token => {\n  const user = getLocalStorageValue(USER_KEY);\n\n  if (user === null || user === void 0 ? void 0 : user.authtoken) {\n    user.authtoken.accessToken = token.accessToken;\n    setLocalStorageValue(USER_KEY, user);\n  }\n};\n\nconst getUser = () => {\n  return getLocalStorageValue(USER_KEY);\n};\n\nconst setUser = user => {\n  setLocalStorageValue(USER_KEY, user);\n};\n\nconst removeUser = () => {\n  removeLocalStorageValue(USER_KEY);\n};\n\nconst getHttpResponseTimeStamp = () => {\n  return getLocalStorageValue(HTTP_RESPONSE_HEADER_TIMESTAMP);\n};\n\nconst setHttpResponseTimeStamp = timestamp => {\n  setLocalStorageValue(HTTP_RESPONSE_HEADER_TIMESTAMP, timestamp);\n};\n\nconst TokenService = {\n  getLocalAccessToken,\n  updateLocalAccessToken,\n  getUser,\n  setUser,\n  removeUser,\n  getHttpResponseTimeStamp,\n  setHttpResponseTimeStamp\n};\nexport default TokenService;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/services/api/TokenService.ts"],"names":["setLocalStorageValue","removeLocalStorageValue","getLocalStorageValue","HTTP_RESPONSE_HEADER_TIMESTAMP","USER_KEY","getLocalAccessToken","user","authtoken","updateLocalAccessToken","token","accessToken","getUser","setUser","removeUser","getHttpResponseTimeStamp","setHttpResponseTimeStamp","timestamp","TokenService"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,uBAA/B,EAAwDC,oBAAxD,QAAoF,iCAApF;AACA,SAASC,8BAAT,QAA+C,yBAA/C;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAjB;;AAEL,MAAMC,mBAAmB,GAAG,MAAyB;AACnD,QAAMC,IAAI,GAAGJ,oBAAoB,CAACE,QAAD,CAAjC;AACA,SAAOE,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAEC,SAAb;AACD,CAHD;;AAKA,MAAMC,sBAAsB,GAAIC,KAAD,IAAuB;AACpD,QAAMH,IAAI,GAAGJ,oBAAoB,CAACE,QAAD,CAAjC;;AACA,MAAIE,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEC,SAAV,EAAqB;AACjBD,IAAAA,IAAI,CAAEC,SAAN,CAAiBG,WAAjB,GAA+BD,KAAK,CAACC,WAArC;AACAV,IAAAA,oBAAoB,CAACI,QAAD,EAAWE,IAAX,CAApB;AACH;AACF,CAND;;AAQA,MAAMK,OAAO,GAAG,MAAY;AAC1B,SAAOT,oBAAoB,CAACE,QAAD,CAA3B;AACD,CAFD;;AAIA,MAAMQ,OAAO,GAAIN,IAAD,IAAgB;AAC9BN,EAAAA,oBAAoB,CAACI,QAAD,EAAWE,IAAX,CAApB;AACD,CAFD;;AAIA,MAAMO,UAAU,GAAG,MAAM;AACvBZ,EAAAA,uBAAuB,CAACG,QAAD,CAAvB;AACD,CAFD;;AAIA,MAAMU,wBAAwB,GAAG,MAAc;AAC7C,SAAOZ,oBAAoB,CAACC,8BAAD,CAA3B;AACD,CAFD;;AAIA,MAAMY,wBAAwB,GAAIC,SAAD,IAAuB;AACtDhB,EAAAA,oBAAoB,CAACG,8BAAD,EAAiCa,SAAjC,CAApB;AACD,CAFD;;AAIA,MAAMC,YAAY,GAAG;AACnBZ,EAAAA,mBADmB;AAEnBG,EAAAA,sBAFmB;AAGnBG,EAAAA,OAHmB;AAInBC,EAAAA,OAJmB;AAKnBC,EAAAA,UALmB;AAMnBC,EAAAA,wBANmB;AAOnBC,EAAAA;AAPmB,CAArB;AAUA,eAAeE,YAAf","sourcesContent":["import { setLocalStorageValue, removeLocalStorageValue, getLocalStorageValue } from '../../utils/local.storage.utils';\r\nimport { HTTP_RESPONSE_HEADER_TIMESTAMP } from \"../../config/api.config\";\r\nimport { IAuthToken, User } from '../../types';\r\n  \r\nexport const USER_KEY = 'user';\r\n\r\n  const getLocalAccessToken = (): IAuthToken | null => {\r\n    const user = getLocalStorageValue(USER_KEY) as User;\r\n    return user?.authtoken!;\r\n  };\r\n  \r\n  const updateLocalAccessToken = (token: IAuthToken) => {\r\n    const user = getLocalStorageValue(USER_KEY) as User;\r\n    if (user?.authtoken) {\r\n        user!.authtoken!.accessToken = token.accessToken;\r\n        setLocalStorageValue(USER_KEY, user);\r\n    }\r\n  };\r\n \r\n  const getUser = (): User => {\r\n    return getLocalStorageValue(USER_KEY) as User;\r\n  };\r\n  \r\n  const setUser = (user: User) => {\r\n    setLocalStorageValue(USER_KEY, user);\r\n  };\r\n  \r\n  const removeUser = () => {\r\n    removeLocalStorageValue(USER_KEY);\r\n  };\r\n\r\n  const getHttpResponseTimeStamp = (): number => {\r\n    return getLocalStorageValue(HTTP_RESPONSE_HEADER_TIMESTAMP) as number;\r\n  };\r\n  \r\n  const setHttpResponseTimeStamp = (timestamp: number) => {\r\n    setLocalStorageValue(HTTP_RESPONSE_HEADER_TIMESTAMP, timestamp);\r\n  };\r\n  \r\n  const TokenService = {\r\n    getLocalAccessToken,\r\n    updateLocalAccessToken,\r\n    getUser,\r\n    setUser,\r\n    removeUser,\r\n    getHttpResponseTimeStamp,\r\n    setHttpResponseTimeStamp\r\n  };\r\n  \r\n  export default TokenService;"]},"metadata":{},"sourceType":"module"}
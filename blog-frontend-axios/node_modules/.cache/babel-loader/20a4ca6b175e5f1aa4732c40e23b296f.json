{"ast":null,"code":"export let UserRole;\n\n(function (UserRole) {\n  UserRole[\"ADMIN\"] = \"admin\";\n  UserRole[\"USER\"] = \"user\";\n})(UserRole || (UserRole = {}));\n\nexport class IAuthToken {\n  constructor() {\n    this.accessToken = void 0;\n  }\n\n}\nexport function createUserForUpdate(user) {\n  const updateUser = {\n    username: user.username,\n    email: user.email,\n    password: user.password,\n    role: user.role,\n    image: user.image\n  };\n\n  if (!updateUser.password) {\n    delete updateUser.password;\n  }\n\n  return updateUser;\n}\nexport function createPostForUpdate(post) {\n  const updatePost = {\n    category: post.category,\n    title: post.title,\n    description: post.description,\n    body: post.body,\n    image: post.image\n  };\n  return updatePost;\n}\nexport function createCategoryForUpdate(category) {\n  const updateCategory = {\n    title: category.title,\n    description: category.description\n  };\n  return updateCategory;\n}\nexport const minimumPasswordLength = 3;\nexport const minimumEmailLength = 10;\nexport const minimumUserNameLength = 2;\nexport const minimumPostTitleLength = 3;\nexport const minimumPostDescriptionLength = 10;\nexport const minimumPostBodyLength = 10;\nexport const minimumCategoryTitleLength = 3;\nexport const minimumCategoryDescriptionLength = 10;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/types/index.ts"],"names":["UserRole","IAuthToken","accessToken","createUserForUpdate","user","updateUser","username","email","password","role","image","createPostForUpdate","post","updatePost","category","title","description","body","createCategoryForUpdate","updateCategory","minimumPasswordLength","minimumEmailLength","minimumUserNameLength","minimumPostTitleLength","minimumPostDescriptionLength","minimumPostBodyLength","minimumCategoryTitleLength","minimumCategoryDescriptionLength"],"mappings":"AAAA,WAAYA,QAAZ;;WAAYA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;GAAAA,Q,KAAAA,Q;;AAcZ,OAAO,MAAMC,UAAN,CAAiB;AAAA;AAAA,SACtBC,WADsB;AAAA;;AAAA;AAiExB,OAAO,SAASC,mBAAT,CAA6BC,IAA7B,EAAuD;AAC5D,QAAMC,UAAuB,GAAG;AAACC,IAAAA,QAAQ,EAACF,IAAI,CAACE,QAAf;AAAyBC,IAAAA,KAAK,EAAEH,IAAI,CAACG,KAArC;AAA4CC,IAAAA,QAAQ,EAAEJ,IAAI,CAACI,QAA3D;AAC9BC,IAAAA,IAAI,EAAEL,IAAI,CAACK,IADmB;AACbC,IAAAA,KAAK,EAAEN,IAAI,CAACM;AADC,GAAhC;;AAEA,MAAI,CAACL,UAAU,CAACG,QAAhB,EAA0B;AACxB,WAAOH,UAAU,CAACG,QAAlB;AACD;;AACD,SAAOH,UAAP;AACD;AA8CD,OAAO,SAASM,mBAAT,CAA6BC,IAA7B,EAAuD;AAC5D,QAAMC,UAAuB,GAAG;AAACC,IAAAA,QAAQ,EAAEF,IAAI,CAACE,QAAhB;AAA0BC,IAAAA,KAAK,EAACH,IAAI,CAACG,KAArC;AAA4CC,IAAAA,WAAW,EAAEJ,IAAI,CAACI,WAA9D;AAA2EC,IAAAA,IAAI,EAAEL,IAAI,CAACK,IAAtF;AACEP,IAAAA,KAAK,EAAEE,IAAI,CAACF;AADd,GAAhC;AAEA,SAAOG,UAAP;AACD;AAED,OAAO,SAASK,uBAAT,CAAiCJ,QAAjC,EAAuE;AAC5E,QAAMK,cAA+B,GAAG;AAACJ,IAAAA,KAAK,EAACD,QAAQ,CAACC,KAAhB;AAAuBC,IAAAA,WAAW,EAAEF,QAAQ,CAACE;AAA7C,GAAxC;AACA,SAAOG,cAAP;AACD;AAED,OAAO,MAAMC,qBAAqB,GAAG,CAA9B;AACP,OAAO,MAAMC,kBAAkB,GAAG,EAA3B;AACP,OAAO,MAAMC,qBAAqB,GAAG,CAA9B;AAEP,OAAO,MAAMC,sBAAsB,GAAG,CAA/B;AACP,OAAO,MAAMC,4BAA4B,GAAG,EAArC;AACP,OAAO,MAAMC,qBAAqB,GAAG,EAA9B;AAEP,OAAO,MAAMC,0BAA0B,GAAG,CAAnC;AACP,OAAO,MAAMC,gCAAgC,GAAG,EAAzC","sourcesContent":["export enum UserRole {\r\n  ADMIN = 'admin',\r\n  USER = 'user'\r\n}\r\n\r\nexport interface IUser {\r\n  id?: string; // Identifier uniq\r\n  username: string;\r\n  password?: string;\r\n  email: string;\r\n  role: string;\r\n  image?: ImageData;\r\n}\r\n\r\nexport class IAuthToken {\r\n  accessToken: any;\r\n}\r\n\r\nexport type JWTPayload = {\r\n  sub: string;\r\n  exp: number;\r\n  sessionDuration: number;\r\n};\r\n\r\nexport type User = IUser & { authtoken?: IAuthToken, authrefreshtoken?: IAuthToken };\r\n\r\nexport interface IPost {\r\n  id?: string; // Identifier uniq\r\n  title: string;\r\n  description: string;\r\n  body: string;\r\n  user?: User;\r\n  category?: ICategory;\r\n  image?: ImageData;\r\n  publishDate?: Date;\r\n}\r\nexport interface ICategory {\r\n  id?: string; // Identifier uniq\r\n  title: string;\r\n  description: string;\r\n}\r\nexport interface ImageData {\r\n  base64: string;\r\n  contentType: string;\r\n}\r\nexport interface ILogin {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport interface IRegister {\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport interface IRefresh {\r\n  authtoken?: IAuthToken;\r\n  authrefreshtoken?: IAuthToken;\r\n}\r\n\r\nexport interface ISessionExtension {\r\n  authtoken?: IAuthToken;\r\n  authrefreshtoken?: IAuthToken;\r\n  extension: number;\r\n}\r\n\r\nexport interface IErrors {\r\n  [key: string]: string | string[];\r\n}\r\n\r\nexport interface IUpdateUser {\r\n  username: string;\r\n  email: string;\r\n  password?: string;\r\n  role: string;\r\n  image?: ImageData;\r\n}\r\n\r\nexport function createUserForUpdate(user: IUser): IUpdateUser {\r\n  const updateUser: IUpdateUser = {username:user.username, email: user.email, password: user.password, \r\n    role: user.role, image: user.image};\r\n  if (!updateUser.password) {\r\n    delete updateUser.password;\r\n  }\r\n  return updateUser;\r\n}\r\nexport interface IUpdatePost {\r\n  title: string;\r\n  description: string;\r\n  body: string;\r\n  category?: ICategory;\r\n  image?: ImageData;\r\n}\r\nexport interface IFilterFindContainsCriterias {\r\n  property: string;\r\n  value: string;\r\n}\r\nexport interface IFilterFindExistCriterias {\r\n  property: string;\r\n  exist: boolean;\r\n}\r\nexport interface IUpdateCategory {\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\nexport interface IFilterFindCriterias {\r\n  contains?: IFilterFindContainsCriterias;\r\n  exist?: IFilterFindExistCriterias;\r\n}\r\nexport interface ImageSizeProps {\r\n  maxWidth:number,  \r\n  maxHeight:number,\r\n}\r\n\r\nexport type PostEditingFormState = {\r\n  categoryTitle: string;\r\n  title: string;\r\n  description: string;\r\n  body: string;\r\n  imageChanged: boolean;\r\n}\r\nexport interface IPostEditingState {\r\n  content?: string;\r\n  formState: PostEditingFormState,\r\n  category?: ICategory,\r\n  postImage?: ImageData,\r\n  postUrl: string,\r\n  isDirty: boolean\r\n}\r\n\r\nexport function createPostForUpdate(post: IPost): IUpdatePost {\r\n  const updatePost: IUpdatePost = {category: post.category, title:post.title, description: post.description, body: post.body,\r\n                                    image: post.image};\r\n  return updatePost;\r\n}\r\n\r\nexport function createCategoryForUpdate(category: ICategory): IUpdateCategory {\r\n  const updateCategory: IUpdateCategory = {title:category.title, description: category.description};\r\n  return updateCategory;\r\n}\r\n\r\nexport const minimumPasswordLength = 3;\r\nexport const minimumEmailLength = 10;\r\nexport const minimumUserNameLength = 2;\r\n\r\nexport const minimumPostTitleLength = 3;\r\nexport const minimumPostDescriptionLength = 10;\r\nexport const minimumPostBodyLength = 10;\r\n\r\nexport const minimumCategoryTitleLength = 3;\r\nexport const minimumCategoryDescriptionLength = 10;\r\n\r\n"]},"metadata":{},"sourceType":"module"}
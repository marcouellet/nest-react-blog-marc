{"ast":null,"code":"import _objectSpread from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nexport let AuthActionType;\n\n(function (AuthActionType) {\n  AuthActionType[\"LoadUser\"] = \"LOAD_USER\";\n  AuthActionType[\"Logout\"] = \"LOGOUT\";\n  AuthActionType[\"Loading\"] = \"LOADING\";\n})(AuthActionType || (AuthActionType = {}));\n\nexport const createActionLogout = () => {\n  return {\n    type: AuthActionType.Logout\n  };\n};\nexport const createActionLoadUser = user => {\n  return {\n    type: AuthActionType.LoadUser,\n    user: user\n  };\n};\nexport const createActionLoading = isLoading => {\n  return {\n    type: AuthActionType.Loading,\n    isLoading: isLoading\n  };\n};\nexport const initialState = {\n  isLoading: false,\n  isAuthenticated: false,\n  user: null\n};\nexport function authReducer(state, action) {\n  switch (action.type) {\n    case AuthActionType.LoadUser:\n      {\n        return _objectSpread({}, state, {\n          isAuthenticated: true,\n          user: action.user\n        });\n      }\n\n    case AuthActionType.Logout:\n      {\n        return _objectSpread({}, state, {\n          isAuthenticated: false,\n          user: null\n        });\n      }\n\n    case AuthActionType.Loading:\n      {\n        return _objectSpread({}, state, {\n          isLoading: action.isLoading\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/reducers/auth.tsx"],"names":["AuthActionType","createActionLogout","type","Logout","createActionLoadUser","user","LoadUser","createActionLoading","isLoading","Loading","initialState","isAuthenticated","authReducer","state","action"],"mappings":";AAEA,WAAYA,cAAZ;;WAAYA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,KAAAA,c;;AAKZ,OAAO,MAAMC,kBAAkB,GAAG,MAAmB;AAAE,SAAO;AAACC,IAAAA,IAAI,EAAGF,cAAc,CAACG;AAAvB,GAAP;AAAsC,CAAtF;AACP,OAAO,MAAMC,oBAAoB,GAAIC,IAAD,IAA6B;AAAE,SAAO;AAACH,IAAAA,IAAI,EAAGF,cAAc,CAACM,QAAvB;AAAiCD,IAAAA,IAAI,EAAEA;AAAvC,GAAP;AAAoD,CAAhH;AACP,OAAO,MAAME,mBAAmB,GAAIC,SAAD,IAAqC;AAAE,SAAO;AAACN,IAAAA,IAAI,EAAGF,cAAc,CAACS,OAAvB;AAAgCD,IAAAA,SAAS,EAAEA;AAA3C,GAAP;AAA6D,CAAhI;AAmBP,OAAO,MAAME,YAAuB,GAAG;AACrCF,EAAAA,SAAS,EAAE,KAD0B;AAErCG,EAAAA,eAAe,EAAE,KAFoB;AAGrCN,EAAAA,IAAI,EAAE;AAH+B,CAAhC;AAMP,OAAO,SAASO,WAAT,CAAqBC,KAArB,EAAuCC,MAAvC,EAAsE;AAC3E,UAAQA,MAAM,CAACZ,IAAf;AACE,SAAKF,cAAc,CAACM,QAApB;AACA;AACE,iCAAYO,KAAZ;AAAmBF,UAAAA,eAAe,EAAE,IAApC;AAA0CN,UAAAA,IAAI,EAAES,MAAM,CAACT;AAAvD;AACD;;AACD,SAAKL,cAAc,CAACG,MAApB;AAA4B;AAC1B,iCAAYU,KAAZ;AAAmBF,UAAAA,eAAe,EAAE,KAApC;AAA2CN,UAAAA,IAAI,EAAE;AAAjD;AACD;;AACD,SAAKL,cAAc,CAACS,OAApB;AAA6B;AAC3B,iCAAYI,KAAZ;AAAmBL,UAAAA,SAAS,EAAEM,MAAM,CAACN;AAArC;AACD;;AACD;AACE,aAAOK,KAAP;AAZJ;AAcD","sourcesContent":["import { User } from '../types';\r\n\r\nexport enum AuthActionType {\r\n  LoadUser = 'LOAD_USER',\r\n  Logout = 'LOGOUT',\r\n  Loading = 'LOADING'\r\n}\r\nexport const createActionLogout = () : AuthAction => { return {type:  AuthActionType.Logout}}\r\nexport const createActionLoadUser = (user: User) : AuthAction => { return {type:  AuthActionType.LoadUser, user: user}}\r\nexport const createActionLoading = (isLoading: boolean) : AuthAction => { return {type:  AuthActionType.Loading, isLoading: isLoading}}\r\n\r\nexport type AuthAction =\r\n  | {\r\n      type: AuthActionType.LoadUser;\r\n      user: User;\r\n    }\r\n  | { type: AuthActionType.Logout }\r\n  | { \r\n      type: AuthActionType.Loading;\r\n      isLoading: boolean;\r\n    }\r\n;\r\nexport interface AuthState {\r\n  isLoading: boolean;\r\n  isAuthenticated: boolean;\r\n  user: User | null;\r\n}\r\n\r\nexport const initialState: AuthState = {\r\n  isLoading: false,\r\n  isAuthenticated: false,\r\n  user: null,\r\n};\r\n\r\nexport function authReducer(state: AuthState, action: AuthAction): AuthState {\r\n  switch (action.type) {\r\n    case AuthActionType.LoadUser:\r\n    {\r\n      return { ...state, isAuthenticated: true, user: action.user! };\r\n    }\r\n    case AuthActionType.Logout: {\r\n      return { ...state, isAuthenticated: false, user: null };\r\n    }\r\n    case AuthActionType.Loading: {\r\n      return { ...state, isLoading: action.isLoading!};\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
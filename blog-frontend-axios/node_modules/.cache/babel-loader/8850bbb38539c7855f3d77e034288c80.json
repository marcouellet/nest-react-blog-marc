{"ast":null,"code":"import _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\category\\\\ListCategories.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport { Link } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport { CategoryApiService } from \"../../services/api/CategoryApiService\";\nimport { UserRole } from \"../../types\";\nimport useAuth from '../../contexts/auth';\nimport { createActionLoading } from '../../reducers/auth';\nimport ListErrors from '../common/ListErrors';\n\nconst ListCategories = () => {\n  const _useAuth = useAuth(),\n        _useAuth$state = _useAuth.state,\n        user = _useAuth$state.user,\n        isAuthenticated = _useAuth$state.isAuthenticated,\n        isLoading = _useAuth$state.isLoading,\n        dispatch = _useAuth.dispatch;\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        errors = _React$useState2[0],\n        setErrors = _React$useState2[1];\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        categories = _useState2[0],\n        setCategorys = _useState2[1];\n\n  const isAdministrator = () => isAuthenticated && (user === null || user === void 0 ? void 0 : user.role) === UserRole.ADMIN;\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      dispatch(createActionLoading(true));\n      CategoryApiService.getAllCategories().then(users => setCategorys(users)).catch(apiErrors => handleFetchCategoriesError(apiErrors));\n      dispatch(createActionLoading(false));\n    };\n\n    fetchCategories();\n  }, [dispatch]);\n\n  const handleFetchCategoriesError = apiErrors => {\n    toast.error(`Categories reading failed, see error list`);\n    setErrors(apiErrors);\n  };\n\n  return React.createElement(\"section\", {\n    className: \"blog-area section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, errors && React.createElement(ListErrors, {\n    errors: errors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, isAdministrator() && !isLoading && React.createElement(Link, {\n    to: `/category/create`,\n    className: \"btn btn-sm btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Create Category\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    className: \"col-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    className: \"col-md-15\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Description\"), React.createElement(\"th\", {\n    className: \"col-md-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Actions\")), categories && categories.map(category => React.createElement(\"tr\", {\n    key: category.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, category.title), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, category.description), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/category/${category.id}`,\n    className: \"btn btn-sm btn-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"View\"))))))));\n};\n\nexport default ListCategories;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/category/ListCategories.tsx"],"names":["React","useState","useEffect","Table","Link","toast","CategoryApiService","UserRole","useAuth","createActionLoading","ListErrors","ListCategories","state","user","isAuthenticated","isLoading","dispatch","errors","setErrors","categories","setCategorys","isAdministrator","role","ADMIN","fetchCategories","getAllCategories","then","users","catch","apiErrors","handleFetchCategoriesError","error","map","category","id","title","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from \"react-toastify\";\r\nimport { CategoryApiService } from \"../../services/api/CategoryApiService\";\r\nimport { ICategory, UserRole } from \"../../types\";\r\nimport useAuth from '../../contexts/auth';\r\nimport { createActionLoading } from '../../reducers/auth';\r\nimport ListErrors from '../common/ListErrors';\r\nimport { IErrors } from '../../types';\r\n\r\nconst ListCategories = () => {\r\n  \r\n  const { state: { user, isAuthenticated, isLoading}, dispatch } = useAuth();\r\n\r\n  const [errors, setErrors] = React.useState<IErrors | null>();\r\n\r\n  const [categories, setCategorys] = useState<ICategory[]>([]);\r\n\r\n  const isAdministrator = () => isAuthenticated && user?.role === UserRole.ADMIN;\r\n\r\n  useEffect(() => {\r\n    const fetchCategories = async (): Promise<void> => {\r\n      dispatch(createActionLoading(true));\r\n      CategoryApiService.getAllCategories()\r\n        .then(users => setCategorys(users))\r\n        .catch((apiErrors: IErrors) => handleFetchCategoriesError(apiErrors))\r\n      dispatch(createActionLoading(false));\r\n    }\r\n    fetchCategories();\r\n  }, [dispatch])\r\n\r\n  const handleFetchCategoriesError = (apiErrors: IErrors) => {\r\n    toast.error(`Categories reading failed, see error list`);\r\n    setErrors(apiErrors);\r\n  }\r\n\r\n  return (\r\n    <section className=\"blog-area section\">\r\n      {errors && <ListErrors errors={errors} />}\r\n      <div className=\"container\">\r\n        <div>\r\n          {\r\n            isAdministrator() && !isLoading && \r\n            (\r\n                <Link to={`/category/create`} className=\"btn btn-sm btn-primary\">Create Category</Link>\r\n            )\r\n          }\r\n        </div>\r\n        <br/>\r\n        <div>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <th className=\"col-md-2\">\r\n                Name\r\n              </th>\r\n              <th className=\"col-md-15\">\r\n                Description\r\n              </th>\r\n              <th className=\"col-md-1\">\r\n                Actions\r\n              </th>\r\n            </thead>\r\n            {\r\n              categories && categories.map((category: ICategory) => \r\n              (\r\n                <tr key={category.id}>\r\n                  <td>\r\n                    {category.title}\r\n                  </td>\r\n                  <td>\r\n                    {category.description}\r\n                  </td>\r\n                  <td>\r\n                    <Link to={`/category/${category.id}`} className=\"btn btn-sm btn-info\">View</Link>                  \r\n                  </td>\r\n                </tr>\r\n              ))\r\n            }\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    );\r\n}\r\n\r\nexport default ListCategories;\r\n"]},"metadata":{},"sourceType":"module"}
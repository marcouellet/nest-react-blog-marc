{"ast":null,"code":"var _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\user\\\\ViewUserInfo.tsx\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport { Container, Card } from 'react-bootstrap';\nimport { UserRole } from \"../../types\";\nimport ImageResize from '../common/ImageResize';\nimport useAuth from '../../contexts/auth';\n\nconst ViewUserInfo = ({\n  userToDisplay\n}) => {\n  const imageMaxSize = {\n    maxWidth: 260,\n    maxHeight: 260\n  };\n\n  const _useAuth = useAuth(),\n        _useAuth$state = _useAuth.state,\n        user = _useAuth$state.user,\n        isAuthenticated = _useAuth$state.isAuthenticated,\n        dispatch = _useAuth.dispatch;\n\n  const isAdministrator = () => isAuthenticated && (user === null || user === void 0 ? void 0 : user.role) === UserRole.ADMIN;\n\n  return React.createElement(React.Fragment, null, user && React.createElement(\"div\", {\n    className: \"ViewCard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Container, {\n    className: \"p-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    className: \"image-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, user === null || user === void 0 ? void 0 : user.username, \"\\xA0\", isAdministrator() && '(admin)')), user.image && React.createElement(ImageResize, {\n    imageData: user.image,\n    resize: imageMaxSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Card.Subtitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Email:\")), React.createElement(Card.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), user.email))))));\n};\n\nexport default ViewUserInfo;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/user/ViewUserInfo.tsx"],"names":["React","Container","Card","UserRole","ImageResize","useAuth","ViewUserInfo","userToDisplay","imageMaxSize","maxWidth","maxHeight","state","user","isAuthenticated","dispatch","isAdministrator","role","ADMIN","username","image","email"],"mappings":";AAAA,OAAO,sCAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,IAAnB,QAA+B,iBAA/B;AACA,SAAgCC,QAAhC,QAAgD,aAAhD;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAMA,MAAMC,YAAqC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAEnE,QAAMC,YAA4B,GAAG;AAACC,IAAAA,QAAQ,EAAC,GAAV;AAAeC,IAAAA,SAAS,EAAC;AAAzB,GAArC;;AAFmE,mBAIbL,OAAO,EAJM;AAAA,kCAI3DM,KAJ2D;AAAA,QAIlDC,IAJkD,kBAIlDA,IAJkD;AAAA,QAI5CC,eAJ4C,kBAI5CA,eAJ4C;AAAA,QAI1BC,QAJ0B,YAI1BA,QAJ0B;;AAMnE,QAAMC,eAAe,GAAG,MAAMF,eAAe,IAAI,CAAAD,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEI,IAAN,MAAeb,QAAQ,CAACc,KAAzE;;AAEA,SACE,0CAEIL,IAAI,IACJ;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAL,aAAKA,IAAL,uBAAKA,IAAI,CAAEM,QAAX,UAA2BH,eAAe,MAAM,SAAhD,CADA,CADJ,EAIMH,IAAI,CAACO,KAAL,IAAc,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEP,IAAI,CAACO,KAA7B;AAAoC,IAAA,MAAM,EAAEX,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJpB,EAKI,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,CALJ,EASI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAECI,IAAI,CAACQ,KAFN,CATJ,CADA,CADJ,CADJ,CAHJ,CADF;AA4BD,CApCD;;AAsCA,eAAed,YAAf","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';  \r\nimport React from 'react';\r\nimport {Container ,Card } from 'react-bootstrap';\r\nimport { IUser, ImageSizeProps, UserRole } from \"../../types\";\r\nimport ImageResize from '../common/ImageResize';\r\nimport useAuth from '../../contexts/auth';\r\n\r\ntype ViewCardProps = React.HTMLProps<HTMLElement> & {\r\n  userToDisplay: IUser,\r\n}\r\n\r\nconst ViewUserInfo: React.FC<ViewCardProps> = ({ userToDisplay }) => {\r\n\r\n  const imageMaxSize: ImageSizeProps = {maxWidth:260, maxHeight:260};\r\n\r\n  const { state: { user, isAuthenticated}, dispatch } = useAuth();\r\n\r\n  const isAdministrator = () => isAuthenticated && user?.role === UserRole.ADMIN;\r\n\r\n  return (  \r\n    <>\r\n    {  \r\n        user && \r\n        <div className=\"ViewCard\">  \r\n            <Container className='p-4'>  \r\n                <Card>  \r\n                <Card.Body className=\"image-container\">\r\n                    <Card.Header>\r\n                    <h5>{user?.username}&nbsp;{isAdministrator() && '(admin)'}</h5>\r\n                    </Card.Header> \r\n                    { user.image && <ImageResize imageData={user.image} resize={imageMaxSize}/> }\r\n                    <Card.Subtitle>\r\n                    <br/>\r\n                    <span>Email:</span> \r\n                    </Card.Subtitle>    \r\n                    <Card.Text>\r\n                    <br/>\r\n                    {user.email}\r\n                    </Card.Text>    \r\n                </Card.Body>  \r\n                </Card>  \r\n            </Container>  \r\n        </div>  \r\n    }\r\n    </>\r\n    );\r\n\r\n};\r\n\r\nexport default ViewUserInfo;"]},"metadata":{},"sourceType":"module"}
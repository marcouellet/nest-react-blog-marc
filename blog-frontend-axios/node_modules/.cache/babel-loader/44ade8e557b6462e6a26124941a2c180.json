{"ast":null,"code":"import _objectSpread from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\post\\\\Create.tsx\";\nimport React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport * as Yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { PostApiService } from \"../../services/api/PostApiService\";\nimport { createActionLoading } from '../../reducers/auth';\nimport useAuth from '../../contexts/auth';\nimport ListErrors from '../common/ListErrors';\nimport { checkSessionExpired } from '../../utils/response';\nimport { createActionSessionExpired } from '../../reducers/auth';\n\nconst Create = () => {\n  var _errors$title, _errors$description, _errors$body;\n\n  const navigate = useNavigate();\n\n  const _useAuth = useAuth(),\n        _useAuth$state = _useAuth.state,\n        isLoading = _useAuth$state.isLoading,\n        user = _useAuth$state.user,\n        dispatch = _useAuth.dispatch;\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        errorList = _React$useState2[0],\n        setErrorList = _React$useState2[1];\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required('Title is required'),\n    description: Yup.string().required('Description is required'),\n    body: Yup.string().required('Body is required')\n  });\n\n  const _useForm = useForm({\n    resolver: yupResolver(validationSchema)\n  }),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        errors = _useForm.formState.errors;\n\n  const onSubmit = async data => {\n    dispatch(createActionLoading(true));\n\n    const postData = _objectSpread({}, data, {\n      user\n    });\n\n    await PostApiService.createPost(postData).then(() => {\n      handleSubmitFormSucess();\n    }).catch(apiErrors => {\n      handleSubmitFormError(apiErrors);\n    });\n    dispatch(createActionLoading(false));\n  };\n\n  const handleSubmitFormSucess = () => {\n    toast.success(`Post created successfully...`);\n    navigate('/');\n  };\n\n  const handleSubmitFormError = apiErrors => {\n    if (checkSessionExpired(apiErrors)) {\n      toast.error(`Post creation failed, session expired`);\n      dispatch(createActionSessionExpired());\n    } else {\n      toast.error(`Post creation failed, see error list`);\n      setErrorList(apiErrors);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-12 form-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \" Create Post \"), errorList && React.createElement(ListErrors, {\n    errors: errorList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    id: \"create-post-form\",\n    onSubmit: handleSubmit(onSubmit),\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \" Title \"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter title\"\n  }, register('title'), {\n    className: `form-control ${errors.title ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \" Description \"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter description\"\n  }, register('description'), {\n    className: `form-control ${errors.description ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \" Write Content \"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter body\"\n  }, register('body'), {\n    className: `form-control ${errors.body ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, (_errors$body = errors.body) === null || _errors$body === void 0 ? void 0 : _errors$body.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-4 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Create Post\"), isLoading && React.createElement(\"span\", {\n    className: \"fa fa-circle-o-notch fa-spin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })))));\n};\n\nexport default Create;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/post/Create.tsx"],"names":["React","useForm","useNavigate","toast","Yup","yupResolver","PostApiService","createActionLoading","useAuth","ListErrors","checkSessionExpired","createActionSessionExpired","Create","navigate","state","isLoading","user","dispatch","useState","errorList","setErrorList","validationSchema","object","shape","title","string","required","description","body","resolver","register","handleSubmit","errors","formState","onSubmit","data","postData","createPost","then","handleSubmitFormSucess","catch","apiErrors","handleSubmitFormError","success","error","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,cAAT,QAA+B,mCAA/B;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AAEA,SAASC,mBAAT,QAAoC,sBAApC;AACA,SAASC,0BAAT,QAA2C,qBAA3C;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEnB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;;AAFmB,mBAG8BM,OAAO,EAHrC;AAAA,kCAGXM,KAHW;AAAA,QAGFC,SAHE,kBAGFA,SAHE;AAAA,QAGSC,IAHT,kBAGSA,IAHT;AAAA,QAGiBC,QAHjB,YAGiBA,QAHjB;;AAAA,0BAIejB,KAAK,CAACkB,QAAN,EAJf;AAAA;AAAA,QAIZC,SAJY;AAAA,QAIDC,YAJC;;AAMnB,QAAMC,gBAAgB,GAAGjB,GAAG,CAACkB,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,IAAAA,KAAK,EAAEpB,GAAG,CAACqB,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,CADmC;AAE1CC,IAAAA,WAAW,EAAEvB,GAAG,CAACqB,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB,CAF6B;AAG1CE,IAAAA,IAAI,EAAExB,GAAG,CAACqB,MAAJ,GAAaC,QAAb,CAAsB,kBAAtB;AAHoC,GAAnB,CAAzB;;AANmB,mBAsBfzB,OAAO,CAAmB;AAC5B4B,IAAAA,QAAQ,EAAExB,WAAW,CAACgB,gBAAD;AADO,GAAnB,CAtBQ;AAAA,QAmBjBS,QAnBiB,YAmBjBA,QAnBiB;AAAA,QAoBjBC,YApBiB,YAoBjBA,YApBiB;AAAA,QAqBJC,MArBI,YAqBjBC,SArBiB,CAqBJD,MArBI;;AA0BnB,QAAME,QAAQ,GAAG,MAAOC,IAAP,IAAkC;AACjDlB,IAAAA,QAAQ,CAACV,mBAAmB,CAAC,IAAD,CAApB,CAAR;;AACA,UAAM6B,QAAQ,qBAAOD,IAAP;AAAanB,MAAAA;AAAb,MAAd;;AACA,UAAMV,cAAc,CAAC+B,UAAf,CAA0BD,QAA1B,EACLE,IADK,CACA,MAAM;AAAEC,MAAAA,sBAAsB;AAAK,KADnC,EAELC,KAFK,CAEEC,SAAD,IAAyB;AAAEC,MAAAA,qBAAqB,CAACD,SAAD,CAArB;AAAmC,KAF/D,CAAN;AAGAxB,IAAAA,QAAQ,CAACV,mBAAmB,CAAC,KAAD,CAApB,CAAR;AACD,GAPD;;AASA,QAAMgC,sBAAsB,GAAG,MAAM;AACnCpC,IAAAA,KAAK,CAACwC,OAAN,CAAe,8BAAf;AACA9B,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GAHD;;AAKA,QAAM6B,qBAAqB,GAAID,SAAD,IAAwB;AACpD,QAAI/B,mBAAmB,CAAC+B,SAAD,CAAvB,EAAoC;AAClCtC,MAAAA,KAAK,CAACyC,KAAN,CAAa,uCAAb;AACA3B,MAAAA,QAAQ,CAACN,0BAA0B,EAA3B,CAAR;AACD,KAHD,MAGO;AACLR,MAAAA,KAAK,CAACyC,KAAN,CAAa,sCAAb;AACAxB,MAAAA,YAAY,CAACqB,SAAD,CAAZ;AACD;AACF,GARD;;AAUA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAE,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEGtB,SAAS,IAAI,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEA,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFhB,EAGE;AAAM,IAAA,EAAE,EAAE,kBAAV;AAA8B,IAAA,QAAQ,EAAEY,YAAY,CAACG,QAAD,CAApD;AAAgE,IAAA,UAAU,EAAE,IAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC;AAFd,KAGMJ,QAAQ,CAAC,OAAD,CAHd;AAIE,IAAA,SAAS,EAAG,gBAAeE,MAAM,CAACR,KAAP,GAAe,YAAf,GAA8B,EAAG,EAJ9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAQE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmCQ,MAAM,CAACR,KAA1C,kDAAmC,cAAcqB,OAAjD,CARF,CADF,EAYE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC;AAFd,KAGMf,QAAQ,CAAC,aAAD,CAHd;AAIE,IAAA,SAAS,EAAG,gBAAeE,MAAM,CAACL,WAAP,GAAqB,YAArB,GAAoC,EAAG,EAJpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAQE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAmCK,MAAM,CAACL,WAA1C,wDAAmC,oBAAoBkB,OAAvD,CARF,CAZF,EAuBE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC;AAFd,KAGMf,QAAQ,CAAC,MAAD,CAHd;AAIE,IAAA,SAAS,EAAG,gBAAeE,MAAM,CAACJ,IAAP,GAAc,YAAd,GAA6B,EAAG,EAJ7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAQE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAmCI,MAAM,CAACJ,IAA1C,iDAAmC,aAAaiB,OAAhD,CARF,CAvBF,EAkCE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAIG9B,SAAS,IACR;AAAM,IAAA,SAAS,EAAC,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAlCF,CAHF,CADA,CADF;AAoDD,CAtGD;;AAuGA,eAAeH,MAAf","sourcesContent":["import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from \"react-toastify\";\r\nimport * as Yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { PostApiService } from \"../../services/api/PostApiService\";\r\nimport { createActionLoading } from '../../reducers/auth';\r\nimport useAuth from '../../contexts/auth';\r\nimport ListErrors from '../common/ListErrors';\r\nimport { IErrors } from '../../types';\r\nimport { checkSessionExpired } from '../../utils/response';\r\nimport { createActionSessionExpired } from '../../reducers/auth';\r\n\r\nconst Create = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const { state: { isLoading, user }, dispatch } = useAuth();\r\n  const [errorList, setErrorList] = React.useState<IErrors | null>();\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    title: Yup.string().required('Title is required'),\r\n    description: Yup.string().required('Description is required'),\r\n    body: Yup.string().required('Body is required'),\r\n  });\r\n\r\n  type CreateSubmitForm = {\r\n    title: string;\r\n    description: string;\r\n    body: string;\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm<CreateSubmitForm>({\r\n    resolver: yupResolver(validationSchema)\r\n  });\r\n\r\n  const onSubmit = async (data: CreateSubmitForm) => {\r\n    dispatch(createActionLoading(true));\r\n    const postData = {...data, user}\r\n    await PostApiService.createPost(postData)\r\n    .then(() => { handleSubmitFormSucess(); })\r\n    .catch((apiErrors: IErrors) =>  { handleSubmitFormError(apiErrors); });\r\n    dispatch(createActionLoading(false));\r\n  } \r\n\r\n  const handleSubmitFormSucess = () => {\r\n    toast.success(`Post created successfully...`);\r\n    navigate('/'); \r\n  }\r\n\r\n  const handleSubmitFormError = (apiErrors: IErrors) => {\r\n    if (checkSessionExpired(apiErrors)) {\r\n      toast.error(`Post creation failed, session expired`);\r\n      dispatch(createActionSessionExpired());\r\n    } else {\r\n      toast.error(`Post creation failed, see error list`);\r\n      setErrorList(apiErrors);      \r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <div className={\"col-md-12 form-wrapper\"}>\r\n      <h2> Create Post </h2>\r\n      {errorList && <ListErrors errors={errorList} />}\r\n      <form id={\"create-post-form\"} onSubmit={handleSubmit(onSubmit)} noValidate={true}>\r\n        <div className=\"form-group col-md-12\">\r\n          <label htmlFor=\"title\"> Title </label>\r\n          <input \r\n            type=\"text\"\r\n            placeholder=\"Enter title\"\r\n            {...register('title')}\r\n            className={`form-control ${errors.title ? 'is-invalid' : ''}`} \r\n          />\r\n          <div className=\"invalid-feedback\">{errors.title?.message}</div>\r\n        </div>\r\n\r\n        <div className=\"form-group col-md-12\">\r\n          <label htmlFor=\"description\"> Description </label>\r\n          <input \r\n            type=\"text\" \r\n            placeholder=\"Enter description\"\r\n            {...register('description')}\r\n            className={`form-control ${errors.description ? 'is-invalid' : ''}`} \r\n          />\r\n          <div className=\"invalid-feedback\">{errors.description?.message}</div>\r\n        </div>\r\n\r\n        <div className=\"form-group col-md-12\">\r\n          <label htmlFor=\"body\"> Write Content </label>\r\n          <input \r\n            type=\"text\" \r\n            placeholder=\"Enter body\" \r\n            {...register('body')}\r\n            className={`form-control ${errors.body ? 'is-invalid' : ''}`}           \r\n          />\r\n          <div className=\"invalid-feedback\">{errors.body?.message}</div>\r\n        </div>\r\n\r\n        <div className=\"form-group col-md-4 pull-right\">\r\n          <button className=\"btn btn-success\" type=\"submit\">\r\n            Create Post\r\n          </button>\r\n          {isLoading &&\r\n            <span className=\"fa fa-circle-o-notch fa-spin\" />\r\n          }\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  );\r\n\r\n}\r\nexport default Create\r\n"]},"metadata":{},"sourceType":"module"}
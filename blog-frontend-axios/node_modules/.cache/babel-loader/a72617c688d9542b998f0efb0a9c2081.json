{"ast":null,"code":"import _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\contexts\\\\modalContext.tsx\";\nimport React, { useContext, useState, useRef } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useModalShow } from './useModalShow';\nconst ModalContext = React.createContext({});\n\nconst ModalContextProvider = props => {\n  const _useModalShow = useModalShow(),\n        setShow = _useModalShow.setShow,\n        show = _useModalShow.show,\n        onHide = _useModalShow.onHide;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        content = _useState2[0],\n        setContent = _useState2[1];\n\n  const resolver = useRef();\n\n  const handleShow = content => {\n    setShow(true);\n    return new Promise(function (resolve) {\n      resolver.current = resolve;\n    });\n  };\n\n  const modalContext = {\n    showModal: handleShow\n  };\n\n  const handleClose = () => {\n    resolver.current && resolver.current(true);\n    onHide();\n  };\n\n  return React.createElement(ModalContext.Provider, {\n    value: modalContext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    show: show,\n    onHide: onHide,\n    centered: true,\n    dialogClassName: `modal-md`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, props.children)), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-default\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Close\"))));\n};\n\nconst useModalContext = () => useContext(ModalContext);\n\nexport { useModalShow, useModalContext };\nexport default ModalContextProvider;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/contexts/modalContext.tsx"],"names":["React","useContext","useState","useRef","Modal","useModalShow","ModalContext","createContext","ModalContextProvider","props","setShow","show","onHide","content","setContent","resolver","handleShow","Promise","resolve","current","modalContext","showModal","handleClose","children","useModalContext"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAUA,MAAMC,YAAY,GAAGN,KAAK,CAACO,aAAN,CAAsC,EAAtC,CAArB;;AAEA,MAAMC,oBAAyD,GAAIC,KAAD,IAAW;AAAA,wBACzCJ,YAAY,EAD6B;AAAA,QAClEK,OADkE,iBAClEA,OADkE;AAAA,QACzDC,IADyD,iBACzDA,IADyD;AAAA,QACnDC,MADmD,iBACnDA,MADmD;;AAAA,oBAE3CV,QAAQ,EAFmC;AAAA;AAAA,QAElEW,OAFkE;AAAA,QAEzDC,UAFyD;;AAGzE,QAAMC,QAAQ,GAAGZ,MAAM,EAAvB;;AAEA,QAAMa,UAAU,GAAIH,OAAD,IAA4C;AAC3DH,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA,WAAO,IAAIO,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AAClCH,MAAAA,QAAQ,CAACI,OAAT,GAAmBD,OAAnB;AACH,KAFM,CAAP;AAGH,GALD;;AAOA,QAAME,YAA8B,GAAG;AACnCC,IAAAA,SAAS,EAAEL;AADwB,GAAvC;;AAIA,QAAMM,WAAW,GAAG,MAAM;AACtBP,IAAAA,QAAQ,CAACI,OAAT,IAAoBJ,QAAQ,CAACI,OAAT,CAAiB,IAAjB,CAApB;AACAP,IAAAA,MAAM;AACT,GAHD;;AAKA,SACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEQ,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAET,IAAb;AAAmB,IAAA,MAAM,EAAEC,MAA3B;AAAmC,IAAA,QAAQ,MAA3C;AAA4C,IAAA,eAAe,EAAG,UAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACc,QADX,CADJ,CADJ,EAMQ,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,OAAO,EAAED,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,CANR,CADJ,CADJ;AAcH,CAnCD;;AAqCA,MAAME,eAAe,GAAG,MAAwBvB,UAAU,CAACK,YAAD,CAA1D;;AAEA,SACID,YADJ,EAEImB,eAFJ;AAKA,eAAehB,oBAAf","sourcesContent":["import React, {useContext, useState, useRef } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useModalShow } from './useModalShow';\r\n\r\ntype ModalContextType = {\r\n    showModal: (content: JSX.Element) => Promise<boolean>;\r\n};\r\n\r\ntype ModalContextProviderProps = {\r\n    children: React.ReactNode\r\n}\r\n\r\nconst ModalContext = React.createContext<ModalContextType>({} as ModalContextType);\r\n\r\nconst ModalContextProvider: React.FC<ModalContextProviderProps> = (props) => {\r\n    const {setShow, show, onHide} = useModalShow();\r\n    const [content, setContent] = useState<{content: string | JSX.Element} | null>();\r\n    const resolver = useRef<Function>();\r\n\r\n    const handleShow = (content: JSX.Element): Promise<boolean> => {\r\n        setShow(true);\r\n        return new Promise(function (resolve) {\r\n            resolver.current = resolve;\r\n        });\r\n    };\r\n\r\n    const modalContext: ModalContextType = {\r\n        showModal: handleShow\r\n    };\r\n\r\n    const handleClose = () => {\r\n        resolver.current && resolver.current(true);\r\n        onHide();\r\n    };\r\n\r\n    return (\r\n        <ModalContext.Provider value={modalContext}>\r\n            <Modal show={show} onHide={onHide} centered dialogClassName={`modal-md`}>\r\n                <Modal.Body>\r\n                    <div>\r\n                        {props.children} \r\n                    </div>                  \r\n                </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <button className=\"btn btn-default\" onClick={handleClose}>Close</button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </ModalContext.Provider>      \r\n    )\r\n};\r\n\r\nconst useModalContext = (): ModalContextType => useContext(ModalContext);\r\n\r\nexport {\r\n    useModalShow,\r\n    useModalContext,\r\n}\r\n\r\nexport default ModalContextProvider;"]},"metadata":{},"sourceType":"module"}
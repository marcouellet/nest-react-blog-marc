{"ast":null,"code":"var _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\common\\\\cancelConfirmation.tsx\";\nimport React from 'react';\nimport { useConfirmationModalContext } from \"../../contexts/modalConfirmationContext\";\n\nconst CancelButton = ({\n  children,\n  className,\n  message,\n  prompt,\n  onClick\n}) => {\n  const modalContext = useConfirmationModalContext();\n\n  const handleOnClick = async event => {\n    if (prompt) {\n      const result = await modalContext.showConfirmation('Cancel Confirmation!', React.createElement(\"div\", {\n        style: {\n          border: \"2px solid blue\",\n          padding: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Are you sure you want to cancel\", React.createElement(\"span\", {\n        style: {\n          fontSize: \"18px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \" \", message)), \" ?\")));\n      result && onClick && onClick(event);\n    } else {\n      onClick && onClick(event);\n    }\n  };\n\n  return React.createElement(\"button\", {\n    className: className,\n    onClick: handleOnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, children);\n};\n\nexport default CancelButton;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/common/cancelConfirmation.tsx"],"names":["React","useConfirmationModalContext","CancelButton","children","className","message","prompt","onClick","modalContext","handleOnClick","event","result","showConfirmation","border","padding","fontSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,2BAAR,QAA0C,yCAA1C;;AAOA,MAAMC,YAAyC,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,SAAX;AAAsBC,EAAAA,OAAtB;AAA+BC,EAAAA,MAA/B;AAAuCC,EAAAA;AAAvC,CAAD,KAAqD;AAEnG,QAAMC,YAAY,GAAGP,2BAA2B,EAAhD;;AAEA,QAAMQ,aAAa,GAAG,MAAOC,KAAP,IAAsD;AACxE,QAAIJ,MAAJ,EAAY;AACJ,YAAMK,MAAM,GAAG,MAAMH,YAAY,CAACI,gBAAb,CACrB,sBADqB,EAGjB;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,gBAAT;AAA2BC,UAAAA,OAAO,EAAE;AAApC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAEI;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAKV,OAAL,CAAjC,CAFJ,OADJ,CAHiB,CAArB;AAWJM,MAAAA,MAAM,IAAIJ,OAAV,IAAqBA,OAAO,CAACG,KAAD,CAA5B;AACH,KAbD,MAcK;AACDH,MAAAA,OAAO,IAAIA,OAAO,CAACG,KAAD,CAAlB;AACH;AACJ,GAlBD;;AAoBA,SACI;AAAQ,IAAA,SAAS,EAAEN,SAAnB;AAA8B,IAAA,OAAO,EAAEK,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,QADL,CADJ;AAKH,CA7BD;;AA+BA,eAAeD,YAAf","sourcesContent":["import React from 'react';\r\nimport {useConfirmationModalContext} from \"../../contexts/modalConfirmationContext\";\r\n\r\ntype CancelButtonProps = React.HTMLProps<HTMLButtonElement> & {\r\n    prompt: boolean\r\n    message: string\r\n}\r\n\r\nconst CancelButton: React.FC<CancelButtonProps> = ({children, className, message, prompt, onClick}) => {\r\n\r\n    const modalContext = useConfirmationModalContext();\r\n\r\n    const handleOnClick = async (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        if (prompt) {\r\n                const result = await modalContext.showConfirmation(\r\n                'Cancel Confirmation!',\r\n                ( \r\n                    <div style={{border: \"2px solid blue\", padding: \"10px\"}}>\r\n                        <p>\r\n                            Are you sure you want to cancel\r\n                            <span style={{fontSize: \"18px\"}}><i> {message}</i></span> ?\r\n                        </p>\r\n                    </div>\r\n                )\r\n            );\r\n            result && onClick && onClick(event);\r\n        }\r\n        else {\r\n            onClick && onClick(event);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <button className={className} onClick={handleOnClick}>\r\n            {children}\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default CancelButton;"]},"metadata":{},"sourceType":"module"}
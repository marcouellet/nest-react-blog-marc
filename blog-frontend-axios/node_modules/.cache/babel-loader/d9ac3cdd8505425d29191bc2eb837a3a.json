{"ast":null,"code":"import _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\Home.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport { PostApiService } from \"../services/api/PostApiService\";\nimport { CategoryApiService } from \"../services/api/CategoryApiService\";\nimport { UserRole } from \"../types\";\nimport useAuth from '../contexts/auth';\nimport { createActionLoading } from '../reducers/auth';\nimport ListErrors from './common/ListErrors';\nimport ViewCard from './post/ViewCard';\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\nimport { checkUnauthorized, checkForbidden } from '../utils/response';\nimport { createActionSessionExpired, createActionSetCategoryFilter, createActionSetPostTitleFilter } from '../reducers/auth';\n\nconst Home = () => {\n  const navigate = useNavigate();\n\n  const _useAuth = useAuth(),\n        state = _useAuth.state,\n        dispatch = _useAuth.dispatch;\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        errors = _React$useState2[0],\n        setErrors = _React$useState2[1];\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        posts = _useState2[0],\n        setPosts = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        categories = _useState4[0],\n        setCategories = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        category = _useState6[0],\n        setCategory = _useState6[1];\n\n  const _useState7 = useState('All'),\n        _useState8 = _slicedToArray(_useState7, 2),\n        categoryTitle = _useState8[0],\n        setCategoryTitle = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        postTitleFilter = _useState10[0],\n        setPostTitleFilter = _useState10[1];\n\n  const _removePostFromView = id => {\n    const index = posts.findIndex(post => post.id === id);\n    posts.splice(index, 1);\n  };\n\n  const isAdministrator = () => {\n    var _state$user;\n\n    return state.isAuthenticated && ((_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.role) === UserRole.ADMIN;\n  };\n\n  const deletePostMessage = post => `${post.title} post`;\n\n  const handleDeletePost = async id => {\n    dispatch(createActionLoading(true));\n    await PostApiService.deletePost(id).then(() => handleDeletePostSucess()).catch(apiErrors => handleDeletePostError(apiErrors));\n    dispatch(createActionLoading(false));\n\n    _removePostFromView(id);\n\n    navigate('/');\n  };\n\n  const handleDeletePostSucess = () => {\n    toast.success(`Post deleted successfully...`);\n  };\n\n  const handleDeletePostError = apiErrors => {\n    if (checkForbidden(apiErrors)) {\n      toast.error(`Post delete failed, session expired`);\n      dispatch(createActionSessionExpired());\n      navigate('/');\n    } else if (checkUnauthorized(apiErrors)) {\n      toast.error(`Access denied`);\n    } else {\n      toast.error(`Post delete failed, see error list`);\n      setErrors(apiErrors);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      dispatch(createActionLoading(true));\n\n      if (!categories) {\n        const fetchCategories = async () => {\n          CategoryApiService.getAllCategories().then(categories => {\n            const all = {\n              id: 'all',\n              title: 'All',\n              description: ''\n            };\n            const noCategory = {\n              id: 'no_category',\n              title: 'No category',\n              description: ''\n            };\n            const allCategories = [all, noCategory].concat(categories);\n            setCategories(allCategories);\n\n            if (state.categoryFilter) {\n              selectCategory(allCategories, state.categoryFilter.id, false);\n            } else {\n              selectCategory(allCategories, 'all', false);\n            }\n          }).catch(apiErrors => handleFetchCategoriesError(apiErrors));\n        };\n\n        await fetchCategories();\n      }\n\n      setPostTitleFilter(state.postTitleFilter);\n      dispatch(createActionLoading(false));\n    })(); // eslint-disable-next-line\n\n  }, []);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      if (category) {\n        if (category.id === 'all') {\n          PostApiService.findManyPosts(postTitleFilter).then(posts => setPosts(posts)).catch(apiErrors => handleFetchPostError(apiErrors));\n        } else if (category.id === 'no_category') {\n          PostApiService.findManyPostsWithoutCategory(postTitleFilter).then(posts => setPosts(posts)).catch(apiErrors => handleFetchPostError(apiErrors));\n        } else {\n          PostApiService.findManyPostsForCategory(category.id, postTitleFilter).then(posts => setPosts(posts)).catch(apiErrors => handleFetchPostError(apiErrors));\n        }\n      }\n    };\n\n    fetchPosts();\n  }, [category, postTitleFilter]);\n\n  const handleFetchCategoriesError = apiErrors => {\n    toast.error(`Categories reading failed, see error list`);\n  };\n\n  const handleFetchPostError = apiErrors => {\n    toast.error(`Post reading failed, see error list`);\n  };\n\n  const handleCategorySelect = e => {\n    selectCategory(categories, e, true);\n  };\n\n  const selectCategory = (categories, categoryId, setDirty) => {\n    const category = categories === null || categories === void 0 ? void 0 : categories.find(category => category.id === categoryId);\n    setCategoryTitle(category.title);\n    setCategory(category);\n    dispatch(createActionSetCategoryFilter(category));\n  };\n\n  const handlePostTitleFilterChange = filter => {\n    setPostTitleFilter(filter);\n    dispatch(createActionSetPostTitleFilter(filter));\n  };\n\n  const handleViewCardDetail = postId => {\n    navigate(`/post/${postId}`);\n  };\n\n  return React.createElement(\"section\", {\n    className: \"blog-area section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, errors && React.createElement(ListErrors, {\n    errors: errors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form-group \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(DropdownButton, {\n    title: \"Select Category\",\n    onSelect: handleCategorySelect,\n    className: \"col-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, categories && categories.map(category => React.createElement(Dropdown.Item, {\n    eventKey: category.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, category.title))), React.createElement(\"input\", {\n    style: {\n      float: 'right'\n    },\n    className: \"col-md-2\",\n    type: \"text\",\n    disabled: true,\n    placeholder: \"no category selected\",\n    value: categoryTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    className: \"col-md-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Filter:\")), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"postTitleFilter\",\n    value: postTitleFilter,\n    placeholder: \"enter some part of post title text\",\n    className: \"col-md-2\",\n    onChange: e => handlePostTitleFilterChange(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, posts && posts.map(post => React.createElement(\"div\", {\n    className: \"col-lg-4 col-md-6\",\n    key: post.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(ViewCard, {\n    post: post,\n    onViewPostDetail: handleViewCardDetail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }))))));\n};\n\nexport default Home;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/Home.tsx"],"names":["React","useState","useEffect","useNavigate","toast","PostApiService","CategoryApiService","UserRole","useAuth","createActionLoading","ListErrors","ViewCard","DropdownButton","Dropdown","checkUnauthorized","checkForbidden","createActionSessionExpired","createActionSetCategoryFilter","createActionSetPostTitleFilter","Home","navigate","state","dispatch","errors","setErrors","posts","setPosts","categories","setCategories","category","setCategory","categoryTitle","setCategoryTitle","postTitleFilter","setPostTitleFilter","_removePostFromView","id","index","findIndex","post","splice","isAdministrator","isAuthenticated","user","role","ADMIN","deletePostMessage","title","handleDeletePost","deletePost","then","handleDeletePostSucess","catch","apiErrors","handleDeletePostError","success","error","fetchCategories","getAllCategories","all","description","noCategory","allCategories","concat","categoryFilter","selectCategory","handleFetchCategoriesError","fetchPosts","findManyPosts","handleFetchPostError","findManyPostsWithoutCategory","findManyPostsForCategory","handleCategorySelect","e","categoryId","setDirty","find","handlePostTitleFilterChange","filter","handleViewCardDetail","postId","map","float","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { toast } from \"react-toastify\";\r\nimport { PostApiService } from \"../services/api/PostApiService\";\r\nimport { CategoryApiService } from \"../services/api/CategoryApiService\";\r\nimport { IPost, UserRole } from \"../types\";\r\nimport useAuth from '../contexts/auth';\r\nimport { createActionLoading } from '../reducers/auth';\r\nimport ListErrors from './common/ListErrors';\r\nimport { ICategory, IErrors } from '../types';\r\nimport ViewCard, { onViewPostDetail } from './post/ViewCard';\r\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport { checkUnauthorized, checkForbidden } from '../utils/response';\r\nimport { createActionSessionExpired, createActionSetCategoryFilter, createActionSetPostTitleFilter } from '../reducers/auth';\r\n\r\nconst Home = () => {\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  const { state, dispatch } = useAuth();\r\n  const [errors, setErrors] = React.useState<IErrors | null>();\r\n  const [posts, setPosts] = useState<IPost[]>([]);\r\n  const [categories, setCategories] = useState<ICategory[]>();\r\n  const [category, setCategory] = useState<ICategory>();\r\n  const [categoryTitle, setCategoryTitle] = useState<string>('All');\r\n  const [postTitleFilter, setPostTitleFilter] = useState<string>('');\r\n\r\n  const _removePostFromView = (id: string) => {\r\n    const index = posts.findIndex((post: IPost) => post.id! === id);\r\n    posts.splice(index, 1);\r\n  }\r\n\r\n  const isAdministrator = () => state.isAuthenticated && state.user?.role === UserRole.ADMIN;\r\n\r\n  const deletePostMessage = (post: IPost) => `${post.title} post`;\r\n\r\n  const handleDeletePost = async (id: string) => {\r\n    dispatch(createActionLoading(true));\r\n    await PostApiService.deletePost(id)\r\n     .then(() => handleDeletePostSucess())\r\n     .catch((apiErrors: IErrors) => handleDeletePostError(apiErrors))\r\n    dispatch(createActionLoading(false));\r\n    _removePostFromView(id);\r\n    navigate('/');\r\n  }\r\n\r\n  const handleDeletePostSucess = () => {\r\n    toast.success(`Post deleted successfully...`);\r\n  }\r\n\r\n  const handleDeletePostError = (apiErrors: IErrors) => {\r\n    if (checkForbidden(apiErrors)) {\r\n      toast.error(`Post delete failed, session expired`);\r\n      dispatch(createActionSessionExpired());\r\n      navigate('/'); \r\n    } else if (checkUnauthorized(apiErrors)) {\r\n      toast.error(`Access denied`);\r\n    } else {\r\n      toast.error(`Post delete failed, see error list`);\r\n      setErrors(apiErrors);      \r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      dispatch(createActionLoading(true));\r\n      if (!categories) {\r\n        const fetchCategories = async (): Promise<void> => {\r\n          CategoryApiService.getAllCategories()\r\n          .then(categories => {\r\n            const all: ICategory = {id:'all', title: 'All', description: ''};\r\n            const noCategory: ICategory = {id:'no_category', title: 'No category', description: ''};\r\n            const allCategories = [all, noCategory].concat(categories);\r\n            setCategories(allCategories);\r\n            if (state.categoryFilter) {\r\n              selectCategory(allCategories, state.categoryFilter.id!, false);\r\n            } else {\r\n              selectCategory(allCategories, 'all', false);\r\n            }            \r\n          })\r\n          .catch((apiErrors: IErrors) => handleFetchCategoriesError(apiErrors));\r\n        }\r\n        await fetchCategories();\r\n      }\r\n      setPostTitleFilter(state.postTitleFilter);\r\n      dispatch(createActionLoading(false));\r\n    })();\r\n // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async (): Promise<void> => {\r\n      if (category) {\r\n        if ( category.id === 'all') {\r\n          PostApiService.findManyPosts(postTitleFilter)\r\n          .then(posts => setPosts(posts))\r\n          .catch((apiErrors: IErrors) => handleFetchPostError(apiErrors));\r\n        } \r\n        else if (category.id === 'no_category') {\r\n          PostApiService.findManyPostsWithoutCategory(postTitleFilter)\r\n          .then(posts => setPosts(posts))\r\n          .catch((apiErrors: IErrors) => handleFetchPostError(apiErrors));\r\n        } \r\n        else {\r\n          PostApiService.findManyPostsForCategory(category.id!, postTitleFilter)\r\n          .then(posts => setPosts(posts))\r\n          .catch((apiErrors: IErrors) => handleFetchPostError(apiErrors));\r\n        }\r\n      }\r\n    }\r\n    fetchPosts();\r\n  }, [category, postTitleFilter])\r\n\r\n  const handleFetchCategoriesError = (apiErrors: IErrors) => {\r\n    toast.error(`Categories reading failed, see error list`);\r\n  }\r\n\r\n  const handleFetchPostError = (apiErrors: IErrors) => {\r\n    toast.error(`Post reading failed, see error list`);\r\n  }\r\n\r\n  const handleCategorySelect=(e: any)=>{\r\n    selectCategory(categories!, e, true);\r\n  }\r\n\r\n  const selectCategory = (categories: ICategory[], categoryId: string, setDirty: boolean)=>{\r\n    const category = categories?.find(category => category.id === categoryId);\r\n    setCategoryTitle(category!.title!);\r\n    setCategory(category);\r\n    dispatch(createActionSetCategoryFilter(category!));\r\n  }\r\n\r\n  const handlePostTitleFilterChange = (filter: string)=>{\r\n    setPostTitleFilter(filter);\r\n    dispatch(createActionSetPostTitleFilter(filter));\r\n  }\r\n\r\n  const handleViewCardDetail: onViewPostDetail = (postId: string)=>{\r\n    navigate(`/post/${postId}`);\r\n  }\r\n\r\n    return (\r\n        <section className=\"blog-area section\">\r\n        {errors && <ListErrors errors={errors} />}\r\n        <div className=\"form-group \">\r\n          <div className=\"row\">\r\n            <DropdownButton title=\"Select Category\" onSelect={handleCategorySelect} className=\"col-md-2\">\r\n                {categories && categories.map((category: ICategory) => \r\n                (\r\n                  <Dropdown.Item eventKey={category.id}>{category.title}</Dropdown.Item>\r\n                ))\r\n              }\r\n            </DropdownButton>\r\n            <input style={ {float: 'right'} } className=\"col-md-2\"   \r\n              type=\"text\" disabled  placeholder=\"no category selected\" value={categoryTitle}        \r\n            />\r\n            <h4 className=\"col-md-1\">\r\n              <span>\r\n                Filter:\r\n              </span>\r\n            </h4>\r\n            <input  \r\n              type=\"text\" name=\"postTitleFilter\" value={postTitleFilter} placeholder=\"enter some part of post title text\" \r\n              className=\"col-md-2\" onChange={e => handlePostTitleFilterChange(e.target.value)}      \r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            {posts && posts.map((post: IPost) => (\r\n              <div className=\"col-lg-4 col-md-6\" key={post.id}>\r\n                <ViewCard post={post} onViewPostDetail={handleViewCardDetail}/>\r\n              {/* <div className=\"card h-100\">\r\n                <div className=\"single-post post-style-1\">\r\n                  <span className=\"avatar\">\r\n                    <span>\r\n                     <h4>User: {post.user!.username} </h4> \r\n                    </span>\r\n                  </span>\r\n\r\n                  <div className=\"blog-info\">\r\n\r\n                    <h4 className=\"title\">\r\n                      <span>\r\n                        <b>{post.title}</b>\r\n                      </span>\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n\r\n                <ul className=\"post-footer\">\r\n                  {\r\n                    !state.isLoading &&\r\n                    (\r\n                      <li>\r\n                      {\r\n                        <p>\r\n                          <Link to={`/post/${post.id}`} className=\"btn btn-sm btn-info\">View Post</Link>\r\n                        </p>\r\n                      }\r\n                      </li>\r\n                    )\r\n                  }\r\n                  {\r\n                    state.isAuthenticated && !state.isLoading && (isAdministrator() || state.user!.email === post.user!.email) &&\r\n                    (\r\n                      <li>\r\n                      {\r\n                        <p>\r\n                          <Link to={`/post/edit/${post.id}`} className=\"btn btn-sm btn-primary\">Edit Post</Link>\r\n                        </p>\r\n                      }\r\n                      </li>\r\n                    )\r\n                  }\r\n                  {\r\n                    state.isAuthenticated && !state.isLoading && (isAdministrator() || state.user!.email === post.user!.email) && \r\n                    (                   \r\n                      <li>\r\n                      {\r\n                        <DeleteButton message={deletePostMessage(post)} onClick={() => handleDeletePost(post.id!)} className=\"btn btn-danger\">Delete</DeleteButton>\r\n                      }\r\n                      </li>\r\n                    )\r\n                  }\r\n                </ul>\r\n              </div> */}\r\n            </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\user\\\\EditUser.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport * as Yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport CancelButton from '../common/cancelConfirmation';\nimport { createUserForUpdate } from \"../../types\";\nimport { UserApiService } from \"../../services/api/UserApiService\";\nimport { createActionLoading } from '../../reducers/auth';\nimport useAuth from '../../contexts/auth';\nimport ListErrors from '../common/ListErrors';\nimport { checkForbidden } from '../../utils/response';\nimport { createActionSessionExpired } from '../../reducers/auth';\n\nconst EditUser = () => {\n  var _errors$username, _errors$email, _errors$password, _errors$role;\n\n  const navigate = useNavigate();\n\n  const _useAuth = useAuth(),\n        isLoading = _useAuth.state.isLoading,\n        dispatch = _useAuth.dispatch;\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        errorList = _React$useState2[0],\n        setErrorList = _React$useState2[1];\n\n  const _useParams = useParams(),\n        userId = _useParams.userId;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('User name is required'),\n    email: Yup.string().required('Email is required'),\n    role: Yup.string().required('Role is required')\n  });\n  const defaultValues = {\n    username: user === null || user === void 0 ? void 0 : user.username,\n    email: user === null || user === void 0 ? void 0 : user.email,\n    password: '',\n    role: user === null || user === void 0 ? void 0 : user.role\n  };\n\n  const _useForm = useForm({\n    resolver: yupResolver(validationSchema),\n    defaultValues: defaultValues\n  }),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        reset = _useForm.reset,\n        _useForm$formState = _useForm.formState,\n        errors = _useForm$formState.errors,\n        isDirty = _useForm$formState.isDirty;\n\n  useEffect(() => {\n    if (!user) {\n      const fetchData = async () => {\n        dispatch(createActionLoading(true));\n        await UserApiService.getUserById(userId).then(user => {\n          setUser(user);\n          reset(user);\n        }).catch(apiErrors => handleFetchUserError(apiErrors));\n        dispatch(createActionLoading(false));\n      };\n\n      fetchData();\n    } // eslint-disable-next-line\n\n  }, []);\n\n  const onSubmit = async data => {\n    if (user && isDirty) {\n      dispatch(createActionLoading(true));\n      const userData = createUserForUpdate(_objectSpread({}, user, {}, data));\n      await UserApiService.updateUser(user.id, userData).then(() => {\n        handleSubmitFormSucess();\n      }).catch(apiErrors => {\n        handleSubmitFormError(apiErrors);\n      });\n      dispatch(createActionLoading(false));\n    }\n  };\n\n  const handleFetchUserError = apiErrors => {\n    toast.error(`User reading failed, see error list`);\n    setErrorList(apiErrors);\n  };\n\n  const handleSubmitFormSucess = () => {\n    toast.success(`User updated successfully...`);\n    navigate('/user');\n  };\n\n  const handleSubmitFormError = apiErrors => {\n    if (checkForbidden(apiErrors)) {\n      toast.error(`User update failed, session expired`);\n      dispatch(createActionSessionExpired());\n      navigate('/user');\n    } else {\n      toast.error(`User update failed, see error list`);\n      setErrorList(apiErrors);\n    }\n  };\n\n  const cancelEditUserMessage = () => `user edition and loose changes`;\n\n  const handleResetEditUser = () => {\n    reset(defaultValues, {\n      keepDirty: false\n    });\n  };\n\n  const handleCancelEditUser = () => {\n    navigate('/');\n  };\n\n  return React.createElement(\"div\", {\n    className: 'page-wrapper',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, user && React.createElement(\"div\", {\n    className: \"col-md-12 form-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \" Edit User  \"), errorList && React.createElement(ListErrors, {\n    errors: errorList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    id: \"create-user-form\",\n    onSubmit: handleSubmit(onSubmit),\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \" Title \"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter user name\"\n  }, register('username'), {\n    className: `form-control ${errors.username ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \" Email \"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter email\"\n  }, register('email'), {\n    className: `form-control ${errors.email ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \" Enter Password \"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter a value to change current password\"\n  }, register('password'), {\n    className: `form-control`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"role\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \" Select Role \"), React.createElement(\"input\", Object.assign({\n    type: \"text\"\n  }, register('role'), {\n    className: `form-control ${errors.role ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, (_errors$role = errors.role) === null || _errors$role === void 0 ? void 0 : _errors$role.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-4 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    disabled: !isDirty,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Update User\"), isLoading && React.createElement(\"span\", {\n    className: \"fa fa-circle-o-notch fa-spin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group col-md-1 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-secondary\",\n    disabled: !isDirty,\n    onClick: () => handleResetEditUser(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Reset\"), isLoading && React.createElement(\"span\", {\n    className: \"fa fa-circle-o-notch fa-spin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group col-md-1 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(CancelButton, {\n    prompt: isDirty,\n    message: cancelEditUserMessage(),\n    onClick: () => handleCancelEditUser(),\n    className: \"btn btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Cancel\"))));\n};\n\nexport default EditUser;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/user/EditUser.tsx"],"names":["React","useState","useEffect","useForm","useParams","useNavigate","toast","Yup","yupResolver","CancelButton","createUserForUpdate","UserApiService","createActionLoading","useAuth","ListErrors","checkForbidden","createActionSessionExpired","EditUser","navigate","isLoading","state","dispatch","errorList","setErrorList","userId","user","setUser","validationSchema","object","shape","username","string","required","email","role","defaultValues","password","resolver","register","handleSubmit","reset","formState","errors","isDirty","fetchData","getUserById","then","catch","apiErrors","handleFetchUserError","onSubmit","data","userData","updateUser","id","handleSubmitFormSucess","handleSubmitFormError","error","success","cancelEditUserMessage","handleResetEditUser","keepDirty","handleCancelEditUser","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { toast } from \"react-toastify\";\r\nimport * as Yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport CancelButton from '../common/cancelConfirmation'\r\nimport { IUser, IUpdateUser, createUserForUpdate } from \"../../types\";\r\nimport { UserApiService } from \"../../services/api/UserApiService\";\r\nimport { createActionLoading } from '../../reducers/auth';\r\nimport useAuth from '../../contexts/auth';\r\nimport ListErrors from '../common/ListErrors';\r\nimport { IErrors } from '../../types';\r\nimport { checkForbidden } from '../../utils/response';\r\nimport { createActionSessionExpired } from '../../reducers/auth';\r\n\r\nconst EditUser = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const { state: { isLoading }, dispatch } = useAuth();\r\n  const [errorList, setErrorList] = React.useState<IErrors | null>();\r\n  const { userId } = useParams<{ userId: string }>();\r\n  const [user, setUser] = useState<IUser>();\r\n \r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string().required('User name is required'),\r\n    email: Yup.string().required('Email is required'),\r\n    role: Yup.string().required('Role is required'),\r\n  });\r\n\r\n  type UpdateSubmitForm = {\r\n    username: string;\r\n    email: string;\r\n    password: string;\r\n    role: string;\r\n  };\r\n\r\n  const defaultValues = {username: user?.username, email: user?.email, password: '', role: user?.role};\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    \r\n    formState: { errors, isDirty }\r\n  } = useForm<UpdateSubmitForm>({\r\n    resolver: yupResolver(validationSchema),\r\n    defaultValues: defaultValues\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      const fetchData = async (): Promise<void> => {\r\n        dispatch(createActionLoading(true));\r\n        await UserApiService.getUserById(userId!)\r\n        .then((user) => { setUser(user); reset(user);})\r\n        .catch((apiErrors: IErrors) => handleFetchUserError(apiErrors));\r\n        dispatch(createActionLoading(false));\r\n       }\r\n      fetchData();      \r\n    }\r\n  // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onSubmit = async (data: UpdateSubmitForm) => {\r\n    if (user && isDirty) {\r\n      dispatch(createActionLoading(true));\r\n      const userData: IUpdateUser = createUserForUpdate({...user, ...data});\r\n      await UserApiService.updateUser(user.id!, userData)\r\n      .then(() => { handleSubmitFormSucess(); })\r\n      .catch((apiErrors: IErrors) =>  { handleSubmitFormError(apiErrors); });\r\n      dispatch(createActionLoading(false));\r\n     }\r\n  } \r\n\r\n  const handleFetchUserError = (apiErrors: IErrors) => {\r\n    toast.error(`User reading failed, see error list`);\r\n    setErrorList(apiErrors);\r\n  }\r\n\r\n  const handleSubmitFormSucess = () => {\r\n    toast.success(`User updated successfully...`);\r\n    navigate('/user'); \r\n  }\r\n\r\n  const handleSubmitFormError = (apiErrors: IErrors) => {\r\n    if (checkForbidden(apiErrors)) {\r\n      toast.error(`User update failed, session expired`);\r\n      dispatch(createActionSessionExpired());\r\n      navigate('/user'); \r\n    } else {\r\n      toast.error(`User update failed, see error list`);\r\n      setErrorList(apiErrors);      \r\n    }\r\n}\r\n\r\nconst cancelEditUserMessage = () => `user edition and loose changes`;\r\n\r\nconst handleResetEditUser = () => {\r\n  reset(defaultValues, { keepDirty: false});\r\n}\r\n\r\nconst handleCancelEditUser = () => {\r\n  navigate('/');   \r\n};\r\n\r\n  return (\r\n    <div className={'page-wrapper'}>\r\n    {user &&\r\n      (\r\n        <div className={\"col-md-12 form-wrapper\"}>\r\n          <h2> Edit User  </h2>\r\n          {errorList && <ListErrors errors={errorList} />}\r\n          <form id={\"create-user-form\"} onSubmit={handleSubmit(onSubmit)} noValidate={true}>\r\n            <div className=\"form-group col-md-12\">\r\n              <label htmlFor=\"username\"> Title </label>\r\n              <input \r\n                type=\"text\"\r\n                placeholder=\"Enter user name\"\r\n                {...register('username')}\r\n                className={`form-control ${errors.username ? 'is-invalid' : ''}`} \r\n              />\r\n              <div className=\"invalid-feedback\">{errors.username?.message}</div>\r\n           </div>\r\n\r\n            <div className=\"form-group col-md-12\">\r\n              <label htmlFor=\"email\"> Email </label>\r\n              <input \r\n                type=\"text\" \r\n                placeholder=\"Enter email\"\r\n                {...register('email')}\r\n                className={`form-control ${errors.email ? 'is-invalid' : ''}`} \r\n              />\r\n              <div className=\"invalid-feedback\">{errors.email?.message}</div>\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-12\">\r\n              <label htmlFor=\"password\"> Enter Password </label>\r\n              <input \r\n                type=\"text\" \r\n                placeholder=\"Enter a value to change current password\" \r\n                {...register('password')}\r\n                className={`form-control`}           \r\n              />\r\n              <div className=\"invalid-feedback\">{errors.password?.message}</div>\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-12\">\r\n              <label htmlFor=\"role\"> Select Role </label>\r\n              <input \r\n                type=\"text\" \r\n                {...register('role')}\r\n                className={`form-control ${errors.role ? 'is-invalid' : ''}`}           \r\n              />\r\n              <div className=\"invalid-feedback\">{errors.role?.message}</div>\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-4 pull-right\">\r\n              <button className=\"btn btn-success\"  disabled={!isDirty} type=\"submit\">\r\n                Update User\r\n              </button>\r\n              {isLoading &&\r\n                <span className=\"fa fa-circle-o-notch fa-spin\" />\r\n              }\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-1 pull-right\">\r\n              <button className=\"btn btn-secondary\" disabled={!isDirty} onClick={ () => handleResetEditUser() } >\r\n                Reset\r\n              </button>\r\n              {isLoading &&\r\n                <span className=\"fa fa-circle-o-notch fa-spin\" />\r\n              }\r\n            </div>\r\n          </form>\r\n\r\n          <div className=\"form-group col-md-1 pull-right\">\r\n              {\r\n              <CancelButton prompt={isDirty} message={cancelEditUserMessage()} onClick={() => handleCancelEditUser()} className=\"btn btn-danger\">Cancel</CancelButton>\r\n              }\r\n           </div>\r\n\r\n        </div>\r\n      )\r\n    }\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default EditUser;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\Home.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport { PostApiService } from \"../services/api/PostApiService\";\nimport { CategoryApiService } from \"../services/api/CategoryApiService\";\nimport { UserRole } from \"../types\";\nimport useAuth from '../contexts/auth';\nimport { createActionLoading } from '../reducers/auth';\nimport ListErrors from './common/ListErrors';\nimport DeleteButton from './common/deleteConfirmation';\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\nimport { checkUnauthorized, checkForbidden } from '../utils/response';\nimport { createActionSessionExpired } from '../reducers/auth';\n\nconst Home = () => {\n  const navigate = useNavigate();\n\n  const _useAuth = useAuth(),\n        state = _useAuth.state,\n        dispatch = _useAuth.dispatch;\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        errors = _React$useState2[0],\n        setErrors = _React$useState2[1];\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        posts = _useState2[0],\n        setPosts = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        categories = _useState4[0],\n        setCategories = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        category = _useState6[0],\n        setCategory = _useState6[1];\n\n  const _removePostFromView = id => {\n    const index = posts.findIndex(post => post.id === id);\n    posts.splice(index, 1);\n  };\n\n  const isAdministrator = () => {\n    var _state$user;\n\n    return state.isAuthenticated && ((_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.role) === UserRole.ADMIN;\n  };\n\n  const deletePostMessage = post => `${post.title} post`;\n\n  const handleDeletePost = async id => {\n    dispatch(createActionLoading(true));\n    await PostApiService.deletePost(id).then(() => handleDeletePostSucess()).catch(apiErrors => handleDeletePostError(apiErrors));\n    dispatch(createActionLoading(false));\n\n    _removePostFromView(id);\n\n    navigate('/');\n  };\n\n  const handleDeletePostSucess = () => {\n    toast.success(`Post deleted successfully...`);\n  };\n\n  const handleDeletePostError = apiErrors => {\n    if (checkForbidden(apiErrors)) {\n      toast.error(`Post delete failed, session expired`);\n      dispatch(createActionSessionExpired());\n      navigate('/');\n    } else if (checkUnauthorized(apiErrors)) {\n      toast.error(`Access denied`);\n    } else {\n      toast.error(`Post delete failed, see error list`);\n      setErrors(apiErrors);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      dispatch(createActionLoading(true));\n\n      if (!categories) {\n        const fetchCategories = async () => {\n          CategoryApiService.getAllCategories().then(categories => {\n            const all = {\n              id: 'all',\n              title: 'All',\n              description: ''\n            };\n            const noCategory = {\n              id: 'no_category',\n              title: 'No category',\n              description: ''\n            };\n            const allCategories = [all, noCategory].concat(categories);\n            setCategories(allCategories);\n            selectCategory(allCategories, 'all', false);\n          }).catch(apiErrors => handleFetchCategoriesError(apiErrors));\n        };\n\n        await fetchCategories();\n      }\n\n      if (!posts) {\n        const fetchPosts = async () => {\n          PostApiService.getAllPosts().then(posts => setPosts(posts)).catch(apiErrors => handleFetchPostError(apiErrors));\n        };\n\n        await fetchPosts();\n      }\n\n      dispatch(createActionLoading(false));\n    })(); // eslint-disable-next-line\n\n  }, []);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      if (category && category.title != 'no_category' && category.title != 'all') {\n        PostApiService.getAllPostsForCategory(category.id).then(posts => setPosts(posts));\n      } else {\n        PostApiService.getAllPosts().then(posts => setPosts(posts));\n      }\n    };\n\n    fetchPosts();\n  }, [category]);\n\n  const handleFetchCategoriesError = apiErrors => {\n    toast.error(`Categories reading failed, see error list`);\n  };\n\n  const handleFetchPostError = apiErrors => {\n    toast.error(`Post reading failed, see error list`);\n  };\n\n  const handleCategorySelect = e => {\n    selectCategory(categories, e, true);\n  };\n\n  const selectCategory = (categories, categoryId, setDirty) => {\n    const category = categories === null || categories === void 0 ? void 0 : categories.find(category => category.id == categoryId);\n    setCategory((category === null || category === void 0 ? void 0 : category.id) == 'no_category' ? undefined : category);\n  };\n\n  return React.createElement(\"section\", {\n    className: \"blog-area section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, errors && React.createElement(ListErrors, {\n    errors: errors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form-group \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(DropdownButton, {\n    title: \"Select Category\",\n    onSelect: handleCategorySelect,\n    className: \"col-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, categories && categories.map(category => React.createElement(Dropdown.Item, {\n    eventKey: category.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, category.title))), React.createElement(\"input\", {\n    style: {\n      float: 'right'\n    },\n    type: \"text\",\n    disabled: true,\n    placeholder: \"no category selected\",\n    value: category.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, posts && posts.map(post => React.createElement(\"div\", {\n    className: \"col-lg-4 col-md-6\",\n    key: post.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card h-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"single-post post-style-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"User: \", post.user.username, \" \"))), React.createElement(\"div\", {\n    className: \"blog-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, post.title))))), React.createElement(\"ul\", {\n    className: \"post-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, !state.isLoading && React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/post/${post.id}`,\n    className: \"btn btn-sm btn-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"View Post\"))), state.isAuthenticated && !state.isLoading && (isAdministrator() || state.user.email === post.user.email) && React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/post/edit/${post.id}`,\n    className: \"btn btn-sm btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"Edit Post\"))), state.isAuthenticated && !state.isLoading && (isAdministrator() || state.user.email === post.user.email) && React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(DeleteButton, {\n    message: deletePostMessage(post),\n    onClick: () => handleDeletePost(post.id),\n    className: \"btn btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"Delete\")))))))));\n};\n\nexport default Home;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/Home.tsx"],"names":["React","useState","useEffect","Link","useNavigate","toast","PostApiService","CategoryApiService","UserRole","useAuth","createActionLoading","ListErrors","DeleteButton","DropdownButton","Dropdown","checkUnauthorized","checkForbidden","createActionSessionExpired","Home","navigate","state","dispatch","errors","setErrors","posts","setPosts","categories","setCategories","category","setCategory","_removePostFromView","id","index","findIndex","post","splice","isAdministrator","isAuthenticated","user","role","ADMIN","deletePostMessage","title","handleDeletePost","deletePost","then","handleDeletePostSucess","catch","apiErrors","handleDeletePostError","success","error","fetchCategories","getAllCategories","all","description","noCategory","allCategories","concat","selectCategory","handleFetchCategoriesError","fetchPosts","getAllPosts","handleFetchPostError","getAllPostsForCategory","handleCategorySelect","e","categoryId","setDirty","find","undefined","map","float","username","isLoading","email"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { toast } from \"react-toastify\";\r\nimport { PostApiService } from \"../services/api/PostApiService\";\r\nimport { CategoryApiService } from \"../services/api/CategoryApiService\";\r\nimport { IPost, UserRole } from \"../types\";\r\nimport useAuth from '../contexts/auth';\r\nimport { createActionLoading } from '../reducers/auth';\r\nimport ListErrors from './common/ListErrors';\r\nimport { ICategory, IErrors } from '../types';\r\nimport DeleteButton from './common/deleteConfirmation';\r\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport { checkUnauthorized, checkForbidden } from '../utils/response';\r\nimport { createActionSessionExpired } from '../reducers/auth';\r\n\r\nconst Home = () => {\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  const { state, dispatch } = useAuth();\r\n  const [errors, setErrors] = React.useState<IErrors | null>();\r\n  const [posts, setPosts] = useState<IPost[]>([]);\r\n  const [categories, setCategories] = useState<ICategory[]>();\r\n  const [category, setCategory] = useState<ICategory>();\r\n\r\n  const _removePostFromView = (id: string) => {\r\n    const index = posts.findIndex((post: IPost) => post.id! === id);\r\n    posts.splice(index, 1);\r\n  }\r\n\r\n  const isAdministrator = () => state.isAuthenticated && state.user?.role === UserRole.ADMIN;\r\n\r\n  const deletePostMessage = (post: IPost) => `${post.title} post`;\r\n\r\n  const handleDeletePost = async (id: string) => {\r\n    dispatch(createActionLoading(true));\r\n    await PostApiService.deletePost(id)\r\n     .then(() => handleDeletePostSucess())\r\n     .catch((apiErrors: IErrors) => handleDeletePostError(apiErrors))\r\n    dispatch(createActionLoading(false));\r\n    _removePostFromView(id);\r\n    navigate('/');\r\n  }\r\n\r\n  const handleDeletePostSucess = () => {\r\n    toast.success(`Post deleted successfully...`);\r\n  }\r\n\r\n  const handleDeletePostError = (apiErrors: IErrors) => {\r\n    if (checkForbidden(apiErrors)) {\r\n      toast.error(`Post delete failed, session expired`);\r\n      dispatch(createActionSessionExpired());\r\n      navigate('/'); \r\n    } else if (checkUnauthorized(apiErrors)) {\r\n      toast.error(`Access denied`);\r\n    } else {\r\n      toast.error(`Post delete failed, see error list`);\r\n      setErrors(apiErrors);      \r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      dispatch(createActionLoading(true));\r\n      if (!categories) {\r\n        const fetchCategories = async (): Promise<void> => {\r\n          CategoryApiService.getAllCategories()\r\n          .then(categories => {\r\n            const all: ICategory = {id:'all', title: 'All', description: ''};\r\n            const noCategory: ICategory = {id:'no_category', title: 'No category', description: ''};\r\n            const allCategories = [all, noCategory].concat(categories);\r\n            setCategories(allCategories);\r\n            selectCategory(allCategories, 'all', false);\r\n          })\r\n          .catch((apiErrors: IErrors) => handleFetchCategoriesError(apiErrors));\r\n        }\r\n        await fetchCategories();\r\n      }\r\n      if (!posts) {\r\n        const fetchPosts = async (): Promise<void> => {\r\n          PostApiService.getAllPosts()\r\n          .then(posts => setPosts(posts))\r\n          .catch((apiErrors: IErrors) => handleFetchPostError(apiErrors));\r\n        }\r\n        await fetchPosts();\r\n      }\r\n      dispatch(createActionLoading(false));\r\n    })();\r\n // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async (): Promise<void> => {\r\n      if (category && category.title != 'no_category' && category.title != 'all') {\r\n        PostApiService.getAllPostsForCategory(category.id!)\r\n          .then(posts => setPosts(posts));\r\n      } else {\r\n        PostApiService.getAllPosts()\r\n          .then(posts => setPosts(posts));\r\n      }\r\n    }\r\n    fetchPosts();\r\n  }, [category])\r\n\r\n  const handleFetchCategoriesError = (apiErrors: IErrors) => {\r\n    toast.error(`Categories reading failed, see error list`);\r\n  }\r\n\r\n  const handleFetchPostError = (apiErrors: IErrors) => {\r\n    toast.error(`Post reading failed, see error list`);\r\n  }\r\n\r\n  const handleCategorySelect=(e: any)=>{\r\n    selectCategory(categories!, e, true);\r\n  }\r\n\r\n  const selectCategory = (categories: ICategory[], categoryId: string, setDirty: boolean)=>{\r\n    const category = categories?.find(category => category.id == categoryId);\r\n    setCategory(category?.id == 'no_category' ? undefined: category);\r\n  }\r\n\r\n    return (\r\n        <section className=\"blog-area section\">\r\n        {errors && <ListErrors errors={errors} />}\r\n        <div className=\"form-group \">\r\n          <div className=\"row\">\r\n            <DropdownButton title=\"Select Category\" onSelect={handleCategorySelect} className=\"col-md-2\">\r\n                {categories && categories.map((category: ICategory) => \r\n                (\r\n                  <Dropdown.Item eventKey={category.id}>{category.title}</Dropdown.Item>\r\n                ))\r\n              }\r\n            </DropdownButton>\r\n            <input style={ {float: 'right'} }    \r\n              type=\"text\" disabled  placeholder=\"no category selected\" value={category!.title}        \r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            {posts && posts.map((post: IPost) => (\r\n              <div className=\"col-lg-4 col-md-6\" key={post.id}>\r\n              <div className=\"card h-100\">\r\n                <div className=\"single-post post-style-1\">\r\n                  <span className=\"avatar\">\r\n                    <span>\r\n                     <h4>User: {post.user!.username} </h4> \r\n                    </span>\r\n                  </span>\r\n\r\n                  <div className=\"blog-info\">\r\n\r\n                    <h4 className=\"title\">\r\n                      <span>\r\n                        <b>{post.title}</b>\r\n                      </span>\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n\r\n                <ul className=\"post-footer\">\r\n                  {\r\n                    !state.isLoading &&\r\n                    (\r\n                      <li>\r\n                      {\r\n                        <p>\r\n                          <Link to={`/post/${post.id}`} className=\"btn btn-sm btn-info\">View Post</Link>\r\n                        </p>\r\n                      }\r\n                      </li>\r\n                    )\r\n                  }\r\n                  {\r\n                    state.isAuthenticated && !state.isLoading && (isAdministrator() || state.user!.email === post.user!.email) &&\r\n                    (\r\n                      <li>\r\n                      {\r\n                        <p>\r\n                          <Link to={`/post/edit/${post.id}`} className=\"btn btn-sm btn-primary\">Edit Post</Link>\r\n                        </p>\r\n                      }\r\n                      </li>\r\n                    )\r\n                  }\r\n                  {\r\n                    state.isAuthenticated && !state.isLoading && (isAdministrator() || state.user!.email === post.user!.email) && \r\n                    (                   \r\n                      <li>\r\n                      {\r\n                        <DeleteButton message={deletePostMessage(post)} onClick={() => handleDeletePost(post.id!)} className=\"btn btn-danger\">Delete</DeleteButton>\r\n                      }\r\n                      </li>\r\n                    )\r\n                  }\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
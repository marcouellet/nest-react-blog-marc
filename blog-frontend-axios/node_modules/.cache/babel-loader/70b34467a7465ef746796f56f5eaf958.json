{"ast":null,"code":"import _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\blog\\\\ViewBlog.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport { PostApiService } from \"../../services/api/PostApiService\";\nimport { createActionLoading } from '../../reducers/auth';\nimport useAuth from '../../contexts/auth';\nimport DisplayContent from '../common/displayContent';\nimport ListErrors from '../common/ListErrors';\nimport { checkUnauthorized, checkSessionExpired, checkTimeout, getTokenFromErrors, checkSessionExtendable, extendSession } from '../../utils/html.response.utils';\nimport { createActionSessionExpired } from '../../reducers/auth';\n\nconst ViewBlog = () => {\n  const _useParams = useParams(),\n        postId = _useParams.postId;\n\n  const _useAuth = useAuth(),\n        dispatch = _useAuth.dispatch;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        post = _useState2[0],\n        setPost = _useState2[1];\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        errorList = _React$useState2[0],\n        setErrorList = _React$useState2[1];\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!post) {\n      dispatch(createActionSessionExpired());\n\n      const fetchData = async () => {\n        dispatch(createActionLoading(true));\n        await PostApiService.getPostById(postId).then(post => setPost(post)).catch(apiErrors => handleFetchPostError(apiErrors)).finally(() => dispatch(createActionLoading(false)));\n      };\n\n      fetchData();\n    } // eslint-disable-next-line\n\n  }, []);\n\n  const handleSessionExpired = apiErrors => {\n    const token = getTokenFromErrors(apiErrors);\n\n    if (checkSessionExtendable(token)) {\n      toast.error(`${process} failed, session renewed, please try again`);\n      extendSession(token);\n    } else {\n      toast.error(`${process} failed, session expired`);\n      dispatch(createActionSessionExpired());\n    }\n  };\n\n  const handleApiErrors = (apiErrors, process) => {\n    if (checkSessionExpired(apiErrors)) {\n      handleSessionExpired(apiErrors);\n    } else if (checkUnauthorized(apiErrors)) {\n      toast.error(`Access denied`);\n    } else if (checkTimeout(apiErrors)) {\n      toast.error(`Request timeout`);\n    } else {\n      toast.error(`${process} failed, see error list`);\n      setErrorList(apiErrors);\n    }\n  };\n\n  const handleFetchPostError = apiErrors => {\n    handleApiErrors(apiErrors, 'Post reading');\n  };\n\n  const handleReturn = () => {\n    navigate(-1);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, post && React.createElement(\"div\", {\n    className: \"view-blog\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(DisplayContent, {\n    content: post.body,\n    onClose: handleReturn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, errorList && React.createElement(ListErrors, {\n    errors: errorList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })));\n};\n\nexport default ViewBlog;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/blog/ViewBlog.tsx"],"names":["React","useState","useEffect","useParams","useNavigate","toast","PostApiService","createActionLoading","useAuth","DisplayContent","ListErrors","checkUnauthorized","checkSessionExpired","checkTimeout","getTokenFromErrors","checkSessionExtendable","extendSession","createActionSessionExpired","ViewBlog","postId","dispatch","post","setPost","errorList","setErrorList","navigate","fetchData","getPostById","then","catch","apiErrors","handleFetchPostError","finally","handleSessionExpired","token","error","process","handleApiErrors","handleReturn","body"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { IPost } from \"../../types\";\r\nimport { toast } from \"react-toastify\";\r\nimport { PostApiService } from \"../../services/api/PostApiService\";\r\nimport { createActionLoading } from '../../reducers/auth';\r\nimport useAuth from '../../contexts/auth';\r\nimport DisplayContent from '../common/displayContent';\r\nimport ListErrors from '../common/ListErrors';\r\nimport { IErrors } from '../../types';\r\nimport { checkUnauthorized, checkSessionExpired, checkTimeout, getTokenFromErrors, checkSessionExtendable,\r\n  extendSession } from '../../utils/html.response.utils';\r\nimport { createActionSessionExpired } from '../../reducers/auth';\r\n\r\nconst ViewBlog = () => {\r\n\r\n  const { postId } = useParams<{ postId: string }>();\r\n  const { dispatch } = useAuth();\r\n  const [post, setPost] = useState<IPost>();\r\n  const [errorList, setErrorList] = React.useState<IErrors | null>();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!post) {\r\n      dispatch(createActionSessionExpired())\r\n      const fetchData = async (): Promise<void> => {\r\n        dispatch(createActionLoading(true));\r\n        await PostApiService.getPostById(postId!)\r\n        .then((post) => setPost(post))\r\n        .catch((apiErrors: IErrors) => handleFetchPostError(apiErrors))\r\n        .finally(() => dispatch(createActionLoading(false)));\r\n      }\r\n      fetchData();  \r\n    }\r\n  // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSessionExpired = (apiErrors: IErrors) => {\r\n    const token = getTokenFromErrors(apiErrors);\r\n    if (checkSessionExtendable(token)) {\r\n      toast.error(`${process} failed, session renewed, please try again`);\r\n      extendSession(token);\r\n    }\r\n    else {\r\n      toast.error(`${process} failed, session expired`);\r\n      dispatch(createActionSessionExpired());      \r\n    }\r\n  }\r\n\r\n  const handleApiErrors = (apiErrors: IErrors, process: string) => {\r\n    if (checkSessionExpired(apiErrors)) {\r\n      handleSessionExpired(apiErrors);\r\n    } else if (checkUnauthorized(apiErrors)) {\r\n      toast.error(`Access denied`);\r\n    } else if (checkTimeout(apiErrors)) {\r\n      toast.error(`Request timeout`);\r\n    } else {\r\n      toast.error(`${process} failed, see error list`);\r\n      setErrorList(apiErrors);      \r\n    }\r\n  }\r\n\r\n  const handleFetchPostError = (apiErrors: IErrors) => {\r\n    handleApiErrors(apiErrors,'Post reading');\r\n  }\r\n\r\n  const handleReturn = () => {\r\n    navigate(-1);\r\n  }\r\n\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {post && \r\n        (\r\n          <div className=\"view-blog\">\r\n            <div className=\"row\">\r\n              <DisplayContent content={post.body} onClose={handleReturn}/>         \r\n            </div>\r\n          </div>\r\n        )\r\n        }\r\n        <div className=\"row\">\r\n          {errorList && <ListErrors errors={errorList} />}\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ViewBlog;"]},"metadata":{},"sourceType":"module"}
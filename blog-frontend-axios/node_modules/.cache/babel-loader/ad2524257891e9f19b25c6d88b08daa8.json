{"ast":null,"code":"import _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\user\\\\ViewUser.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport { UserApiService } from \"../../services/api/UserApiService\";\nimport { createActionLoading, createActionSessionExpired } from '../../reducers/auth';\nimport useAuth from '../../contexts/auth';\nimport ListErrors from '../common/ListErrors';\nimport DeleteButton from '../common/deleteConfirmation';\nimport { checkUnauthorized } from '../../utils/html.response.utils';\nimport { PostApiService } from '../../services/api/PostApiService';\nimport Image from '../common/Image';\nimport ImageResize from '../common/ImageResize';\nimport { resizeImage } from '../../utils/image.utils';\n\nconst ViewUser = () => {\n  const _useParams = useParams(),\n        userId = _useParams.userId;\n\n  const _useAuth = useAuth(),\n        _useAuth$state = _useAuth.state,\n        isLoading = _useAuth$state.isLoading,\n        isAuthenticated = _useAuth$state.isAuthenticated,\n        user = _useAuth$state.user,\n        dispatch = _useAuth.dispatch;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        userDisplayed = _useState2[0],\n        setUserDisplayed = _useState2[1];\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        errors = _React$useState2[0],\n        setErrors = _React$useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userDefaultImage = _useState4[0],\n        setuserDefaultImage = _useState4[1];\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!userDisplayed) {\n      const fetchData = async () => {\n        dispatch(createActionLoading(true));\n        getDefaultUserImage().then(imageData => {\n          setuserDefaultImage(imageData);\n        }).catch(error => {\n          throw new Error(error);\n        });\n        await UserApiService.getUserById(userId).then(user => setUserDisplayed(user)).catch(apiErrors => handleFetchUserError(apiErrors));\n        dispatch(createActionLoading(false));\n      };\n\n      fetchData();\n    } // eslint-disable-next-line\n\n  }, [user]);\n\n  const handleFetchUserError = apiErrors => {\n    toast.error(`User reading failed, see error list`);\n    setErrors(apiErrors);\n  };\n\n  const imageMaxSize = {\n    maxWidth: 200,\n    maxHeight: 200\n  };\n\n  const UserImage = () => {\n    if (userDisplayed === null || userDisplayed === void 0 ? void 0 : userDisplayed.image) {\n      return React.createElement(ImageResize, {\n        imageData: userDisplayed.image,\n        resize: imageMaxSize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      });\n    } else {\n      return userDefaultImage && React.createElement(Image, {\n        imageData: userDefaultImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n    }\n  };\n\n  const getDefaultUserImage = () => {\n    return resizeImage('/default-profil-image.jpg', 'image/jpg', imageMaxSize.maxWidth, imageMaxSize.maxHeight);\n  };\n\n  const handleReturn = () => {\n    navigate('/user');\n  };\n\n  const deleteUserMessage = user => `${user.username} User`;\n\n  const handleDeleteUser = async id => {\n    dispatch(createActionLoading(true));\n    const postscount = await PostApiService.getNumberOfPostsForUser(id);\n\n    if (postscount) {\n      toast.error(`User has posts, delete them first`);\n      dispatch(createActionLoading(false));\n    } else {\n      await UserApiService.deleteUser(id).then(() => handleDeleteUserSuccess()).catch(apiErrors => handleDeleteUserError(apiErrors));\n      dispatch(createActionLoading(false));\n    }\n  };\n\n  const handleDeleteUserSuccess = () => {\n    toast.success(`User deleted successfully...`);\n    navigate('/user');\n  };\n\n  const handleDeleteUserError = apiErrors => {\n    if (checkUnauthorized(apiErrors)) {\n      toast.error(`User delete failed, session expired`);\n      dispatch(createActionSessionExpired());\n      navigate('/user');\n    } else {\n      toast.error(`User delete failed, see error list`);\n      setErrors(apiErrors);\n    }\n  };\n\n  return React.createElement(\"section\", {\n    className: \"user-area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, errors && React.createElement(ListErrors, {\n    errors: errors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-lg-1 col-md-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"col-lg-10 col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, userDisplayed && React.createElement(\"div\", {\n    className: \"main-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"user-top-area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, UserImage(), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Name:\")), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, userDisplayed.username), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    className: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Email:\")), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, userDisplayed.email), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    className: \"role\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Role:\")), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, userDisplayed.role))), React.createElement(\"div\", {\n    className: \"form-group row-md-2 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn ml-2 btn-secondary\",\n    onClick: () => handleReturn(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Return\"), isLoading && React.createElement(\"span\", {\n    className: \"fa fa-circle-o-notch fa-spin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), isAuthenticated && !isLoading && React.createElement(Link, {\n    to: `/user/edit/${userDisplayed.id}`,\n    className: \"btn ml-2 btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Edit User\"), isAuthenticated && !isLoading && React.createElement(DeleteButton, {\n    message: deleteUserMessage(userDisplayed),\n    onClick: () => handleDeleteUser(userDisplayed.id),\n    className: \"btn ml-2 btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Delete User\")))))));\n};\n\nexport default ViewUser;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/user/ViewUser.tsx"],"names":["React","useState","useEffect","useParams","useNavigate","Link","toast","UserApiService","createActionLoading","createActionSessionExpired","useAuth","ListErrors","DeleteButton","checkUnauthorized","PostApiService","Image","ImageResize","resizeImage","ViewUser","userId","state","isLoading","isAuthenticated","user","dispatch","userDisplayed","setUserDisplayed","errors","setErrors","userDefaultImage","setuserDefaultImage","navigate","fetchData","getDefaultUserImage","then","imageData","catch","error","Error","getUserById","apiErrors","handleFetchUserError","imageMaxSize","maxWidth","maxHeight","UserImage","image","handleReturn","deleteUserMessage","username","handleDeleteUser","id","postscount","getNumberOfPostsForUser","deleteUser","handleDeleteUserSuccess","handleDeleteUserError","success","email","role"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate, Link } from 'react-router-dom';\r\nimport { IUser } from \"../../types\";\r\nimport { toast } from \"react-toastify\";\r\nimport { UserApiService } from \"../../services/api/UserApiService\";\r\nimport { createActionLoading, createActionSessionExpired } from '../../reducers/auth';\r\nimport useAuth from '../../contexts/auth';\r\nimport ListErrors from '../common/ListErrors';\r\nimport { IErrors, ImageSizeProps, ImageData } from '../../types';\r\nimport DeleteButton from '../common/deleteConfirmation';\r\nimport { checkUnauthorized } from '../../utils/html.response.utils';\r\nimport { PostApiService } from '../../services/api/PostApiService';\r\nimport Image from '../common/Image';\r\nimport ImageResize from '../common/ImageResize';\r\nimport { resizeImage } from '../../utils/image.utils';\r\n\r\nconst ViewUser = () => {\r\n\r\n  const { userId } = useParams<{ userId: string }>();\r\n  const { state: { isLoading, isAuthenticated, user }, dispatch } = useAuth();\r\n  const [userDisplayed, setUserDisplayed] = useState<IUser>();\r\n  const [errors, setErrors] = React.useState<IErrors | null>();\r\n  const [userDefaultImage, setuserDefaultImage] = useState<ImageData>();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!userDisplayed) {\r\n      const fetchData = async (): Promise<void> => {\r\n        dispatch(createActionLoading(true));\r\n        getDefaultUserImage()\r\n        .then(imageData => { \r\n          setuserDefaultImage(imageData);\r\n        }) \r\n        .catch(error => {\r\n          throw new Error(error);\r\n        });\r\n        await UserApiService.getUserById(userId!)\r\n          .then(user => setUserDisplayed(user))\r\n          .catch((apiErrors: IErrors) => handleFetchUserError(apiErrors));\r\n        dispatch(createActionLoading(false));\r\n      }\r\n      fetchData();  \r\n    }\r\n  // eslint-disable-next-line\r\n  }, [user]);\r\n\r\n  const handleFetchUserError = (apiErrors: IErrors) => {\r\n    toast.error(`User reading failed, see error list`);\r\n    setErrors(apiErrors);\r\n  }\r\n\r\n  const imageMaxSize: ImageSizeProps = {maxWidth:200, maxHeight:200}\r\n\r\n  const UserImage = () => {\r\n    if(userDisplayed?.image) {\r\n      return <ImageResize imageData={userDisplayed.image} resize={imageMaxSize}/>;\r\n    }  else {\r\n      return  userDefaultImage && <Image imageData={userDefaultImage}/> \r\n    }\r\n  }\r\n\r\n  const getDefaultUserImage = (): Promise<ImageData> => {\r\n    return resizeImage('/default-profil-image.jpg', 'image/jpg', imageMaxSize.maxWidth, imageMaxSize.maxHeight);\r\n  }\r\n\r\n  const handleReturn = () => {\r\n    navigate('/user');  \r\n  }\r\n\r\n  const deleteUserMessage = (user: IUser) => `${user.username} User`;\r\n\r\n  const handleDeleteUser = async (id: string) => {\r\n    dispatch(createActionLoading(true));\r\n    const postscount = await PostApiService.getNumberOfPostsForUser(id);\r\n    if (postscount) {\r\n      toast.error(`User has posts, delete them first`);\r\n      dispatch(createActionLoading(false));\r\n    } else {\r\n      await UserApiService.deleteUser(id)\r\n      .then(() => handleDeleteUserSuccess())\r\n      .catch((apiErrors: IErrors) => handleDeleteUserError(apiErrors))\r\n      dispatch(createActionLoading(false));\r\n    }\r\n  }\r\n\r\n  const handleDeleteUserSuccess = () => {\r\n    toast.success(`User deleted successfully...`);\r\n    navigate('/user'); \r\n  }\r\n\r\n  const handleDeleteUserError = (apiErrors: IErrors) => {\r\n    if (checkUnauthorized(apiErrors)) {\r\n      toast.error(`User delete failed, session expired`);\r\n      dispatch(createActionSessionExpired());\r\n      navigate('/user'); \r\n    } else {\r\n      toast.error(`User delete failed, see error list`);\r\n      setErrors(apiErrors);      \r\n    }\r\n  }\r\n\r\n    return (\r\n        <section className=\"user-area\">\r\n        {errors && <ListErrors errors={errors} />}\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-1 col-md-0\" />\r\n            <div className=\"col-lg-10 col-md-12\">\r\n              {userDisplayed  &&\r\n              (\r\n                <div className=\"main-user\">\r\n                  <div className=\"user-top-area\">\r\n                    {UserImage()}\r\n                    <div>\r\n                      <h4 className=\"username\">\r\n                        <span>\r\n                          Name:\r\n                        </span>\r\n                      </h4>\r\n                      <h5>{userDisplayed.username}</h5>\r\n                      <br/>\r\n                      <h4 className=\"email\">\r\n                        <span>\r\n                          Email:\r\n                        </span>\r\n                      </h4>\r\n                      <h5>{userDisplayed.email}</h5>\r\n                      <br/>\r\n                      <h4 className=\"role\">\r\n                        <span>\r\n                          Role: \r\n                        </span>\r\n                        </h4>\r\n                      <h5>{userDisplayed.role}</h5>\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"form-group row-md-2 pull-right\">\r\n                    <button className=\"btn ml-2 btn-secondary\" onClick={ () => handleReturn() } >\r\n                      Return\r\n                    </button>\r\n                    {isLoading &&\r\n                      <span className=\"fa fa-circle-o-notch fa-spin\" />\r\n                    }\r\n                    {isAuthenticated && !isLoading && \r\n                      <Link to={`/user/edit/${userDisplayed.id}`} className=\"btn ml-2 btn-primary\">Edit User</Link>\r\n                    }\r\n                    {isAuthenticated && !isLoading &&  \r\n                      <DeleteButton message={deleteUserMessage(userDisplayed)} onClick={() => handleDeleteUser(userDisplayed.id!)} className=\"btn ml-2 btn-danger\">Delete User</DeleteButton>\r\n                    }\r\n                  </div>\r\n                </div>   \r\n              )           \r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n}\r\n\r\nexport default ViewUser;"]},"metadata":{},"sourceType":"module"}
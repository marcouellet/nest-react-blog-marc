{"ast":null,"code":"var _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\auth\\\\RestrictedRoute.tsx\";\nimport React from \"react\";\nimport { Navigate, Route } from 'react-router-dom';\nimport useAuth from '../../contexts/auth';\n\nconst RestrictedRoute = props => {\n  const _useAuth = useAuth(),\n        isAuthenticated = _useAuth.state.isAuthenticated;\n\n  ;\n  const toLogin = React.createElement(Navigate, {\n    to: \"/login\",\n    replace: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  });\n  const nogLoggedInProps = {\n    path: '*',\n    element: {\n      toLogin\n    }\n  };\n  const routeProps = isAuthenticated ? props : nogLoggedInProps;\n  return React.createElement(Route, Object.assign({}, routeProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n};\n\nexport default RestrictedRoute;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/auth/RestrictedRoute.tsx"],"names":["React","Navigate","Route","useAuth","RestrictedRoute","props","isAuthenticated","state","toLogin","nogLoggedInProps","path","element","routeProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAe;AAAA,mBAEEF,OAAO,EAFT;AAAA,QAEpBG,eAFoB,YAE7BC,KAF6B,CAEpBD,eAFoB;;AAEY;AACjD,QAAME,OAAO,GAAG,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAsB,IAAA,OAAO,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB;AACA,QAAMC,gBAAgB,GAAG;AAAEC,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,OAAO,EAAE;AAAEH,MAAAA;AAAF;AAAtB,GAAzB;AACA,QAAMI,UAAU,GAAGN,eAAe,GAAGD,KAAH,GAAWI,gBAA7C;AAEA,SAAQ,oBAAC,KAAD,oBAAWG,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAR;AACD,CARD;;AAUA,eAAeR,eAAf","sourcesContent":["import React from \"react\";\r\nimport { Navigate, Route } from 'react-router-dom';\r\nimport useAuth from '../../contexts/auth';\r\n\r\nconst RestrictedRoute = (props:any) => {\r\n\r\n  const { state: { isAuthenticated } } = useAuth();;\r\n  const toLogin = <Navigate to=\"/login\" replace />;\r\n  const nogLoggedInProps = { path: '*', element: { toLogin} };\r\n  const routeProps = isAuthenticated ? props : nogLoggedInProps;\r\n  \r\n  return  <Route {...routeProps} />;\r\n}\r\n\r\nexport default RestrictedRoute;\r\n\r\n"]},"metadata":{},"sourceType":"module"}
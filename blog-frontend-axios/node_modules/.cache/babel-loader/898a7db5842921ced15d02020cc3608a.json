{"ast":null,"code":"import _objectSpread from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\post\\\\Create.tsx\";\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport { PostApiService } from \"../../services/api/PostApiService\";\nimport { createActionLoading } from '../../reducers/auth';\nimport useAuth from '../../contexts/auth';\nimport ListErrors from '../common/ListErrors';\nimport { checkSessionExpired } from '../../utils/session';\nimport { createActionSessionExpired } from '../../reducers/auth';\n\nconst Create = () => {\n  const navigate = useNavigate();\n\n  const _useAuth = useAuth(),\n        isLoading = _useAuth.state.isLoading,\n        dispatch = _useAuth.dispatch;\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        errorList = _React$useState2[0],\n        setErrorList = _React$useState2[1];\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        submitSuccess = _useState2[0],\n        setSubmitSuccess = _useState2[1];\n\n  const handleFormSubmission = async e => {\n    e.preventDefault();\n    const formData = {\n      title: values.title,\n      description: values.description,\n      body: values.body\n    };\n    const submitSuccess = await submitForm(formData);\n    setSubmitSuccess(submitSuccess);\n    setValues(_objectSpread({}, values, {\n      formData\n    }));\n    setTimeout(() => {\n      navigate('/');\n    }, 1500);\n  };\n\n  const submitForm = async formData => {\n    dispatch(createActionLoading(true));\n    const user = state.user;\n\n    const data = _objectSpread({}, formData, {\n      user\n    });\n\n    const isOk = await PostApiService.createPost(data).then(() => {\n      handleSubmitFormSucess();\n      return true;\n    }).catch(apiErrors => {\n      handleSubmitFormError(apiErrors);\n      return false;\n    });\n    dispatch(createActionLoading(false));\n    return isOk;\n  };\n\n  const setFormValues = formValues => {\n    setValues(_objectSpread({}, values, {}, formValues));\n  };\n\n  const handleInputChanges = e => {\n    e.preventDefault();\n    setFormValues({\n      [e.currentTarget.name]: e.currentTarget.value\n    });\n  };\n\n  const handleSubmitFormSucess = () => {\n    toast.success(`Post created successfully...`);\n  };\n\n  const handleSubmitFormError = apiErrors => {\n    if (checkSessionExpired(apiErrors)) {\n      toast.error(`Post creation failed, session expired`);\n      dispatch(createActionSessionExpired());\n    } else {\n      toast.error(`Post creation failed, see error list`);\n      setErrorList(apiErrors);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-12 form-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \" Create Post \"), !submitSuccess && React.createElement(\"div\", {\n    className: \"alert alert-info\",\n    role: \"alert\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Fill the form below to create a new post\"), submitSuccess && React.createElement(\"div\", {\n    className: \"alert alert-info\",\n    role: \"alert\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"The form was successfully submitted!\"), errorList && React.createElement(ListErrors, {\n    errors: errorList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    id: \"create-post-form\",\n    onSubmit: handleFormSubmission,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \" Title \"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    onChange: handleInputChanges,\n    name: \"title\",\n    className: \"form-control\",\n    placeholder: \"Enter title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \" Description \"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"description\",\n    onChange: handleInputChanges,\n    name: \"description\",\n    className: \"form-control\",\n    placeholder: \"Enter Description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \" Write Content \"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"body\",\n    onChange: handleInputChanges,\n    name: \"body\",\n    className: \"form-control\",\n    placeholder: \"Enter content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group col-md-4 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Create Post\"), isLoading && React.createElement(\"span\", {\n    className: \"fa fa-circle-o-notch fa-spin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })))));\n};\n\nexport default Create;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/post/Create.tsx"],"names":["React","useState","useNavigate","toast","PostApiService","createActionLoading","useAuth","ListErrors","checkSessionExpired","createActionSessionExpired","Create","navigate","isLoading","state","dispatch","errorList","setErrorList","submitSuccess","setSubmitSuccess","handleFormSubmission","e","preventDefault","formData","title","values","description","body","submitForm","setValues","setTimeout","user","data","isOk","createPost","then","handleSubmitFormSucess","catch","apiErrors","handleSubmitFormError","setFormValues","formValues","handleInputChanges","currentTarget","name","value","success","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from \"react-toastify\";\r\nimport { PostApiService } from \"../../services/api/PostApiService\";\r\nimport { createActionLoading } from '../../reducers/auth';\r\nimport useAuth from '../../contexts/auth';\r\nimport ListErrors from '../common/ListErrors';\r\nimport { IErrors } from '../../types';\r\nimport { checkSessionExpired } from '../../utils/session';\r\nimport { createActionSessionExpired } from '../../reducers/auth';\r\n\r\nconst Create = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const { state: { isLoading }, dispatch } = useAuth()\r\n  const [errorList, setErrorList] = React.useState<IErrors | null>();\r\n  const [submitSuccess, setSubmitSuccess] = useState<boolean>(false);\r\n\r\n\r\n  const handleFormSubmission = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\r\n    e.preventDefault();\r\n\r\n    const formData = {\r\n      title: values.title,\r\n      description: values.description,\r\n      body: values.body,\r\n    }\r\n\r\n    const submitSuccess: boolean = await submitForm(formData);\r\n    setSubmitSuccess(submitSuccess);\r\n    setValues({...values, formData});\r\n    setTimeout(() => {\r\n      navigate('/');\r\n    }, 1500);\r\n  }\r\n\r\n  const submitForm = async (formData: {}) : Promise<boolean>  =>  {\r\n    dispatch(createActionLoading(true));\r\n    const user = state.user!;\r\n    const data = {...formData, user}\r\n    const isOk = await PostApiService.createPost(data)\r\n      .then(() => { handleSubmitFormSucess();  return true;})\r\n      .catch((apiErrors: IErrors) =>  { handleSubmitFormError(apiErrors); return false;});\r\n    dispatch(createActionLoading(false));\r\n    return isOk;\r\n  }\r\n\r\n  const setFormValues = (formValues: IValues) => {\r\n    setValues({...values, ...formValues})\r\n  }\r\n\r\n  const handleInputChanges = (e: React.FormEvent<HTMLInputElement>) => {\r\n    e.preventDefault();\r\n    setFormValues({ [e.currentTarget.name]: e.currentTarget.value })\r\n  }\r\n\r\n  const handleSubmitFormSucess = () => {\r\n    toast.success(`Post created successfully...`);\r\n  }\r\n\r\n  const handleSubmitFormError = (apiErrors: IErrors) => {\r\n    if (checkSessionExpired(apiErrors)) {\r\n      toast.error(`Post creation failed, session expired`);\r\n      dispatch(createActionSessionExpired());\r\n    } else {\r\n      toast.error(`Post creation failed, see error list`);\r\n      setErrorList(apiErrors);      \r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <div className={\"col-md-12 form-wrapper\"}>\r\n      <h2> Create Post </h2>\r\n      {!submitSuccess && (\r\n        <div className=\"alert alert-info\" role=\"alert\">\r\n          Fill the form below to create a new post\r\n                </div>\r\n      )}\r\n\r\n      {submitSuccess && (\r\n        <div className=\"alert alert-info\" role=\"alert\">\r\n          The form was successfully submitted!\r\n                        </div>\r\n      )}\r\n      {errorList && <ListErrors errors={errorList} />}\r\n      <form id={\"create-post-form\"} onSubmit={handleFormSubmission} noValidate={true}>\r\n        <div className=\"form-group col-md-12\">\r\n          <label htmlFor=\"title\"> Title </label>\r\n          <input type=\"text\" id=\"title\" onChange={handleInputChanges} name=\"title\" className=\"form-control\" placeholder=\"Enter title\" />\r\n        </div>\r\n\r\n        <div className=\"form-group col-md-12\">\r\n          <label htmlFor=\"description\"> Description </label>\r\n          <input type=\"text\" id=\"description\" onChange={handleInputChanges} name=\"description\" className=\"form-control\" placeholder=\"Enter Description\" />\r\n        </div>\r\n\r\n        <div className=\"form-group col-md-12\">\r\n          <label htmlFor=\"body\"> Write Content </label>\r\n          <input type=\"text\" id=\"body\" onChange={handleInputChanges} name=\"body\" className=\"form-control\" placeholder=\"Enter content\" />\r\n        </div>\r\n\r\n        <div className=\"form-group col-md-4 pull-right\">\r\n          <button className=\"btn btn-success\" type=\"submit\">\r\n            Create Post\r\n          </button>\r\n          {isLoading &&\r\n            <span className=\"fa fa-circle-o-notch fa-spin\" />\r\n          }\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  );\r\n\r\n}\r\nexport default Create\r\n"]},"metadata":{},"sourceType":"module"}
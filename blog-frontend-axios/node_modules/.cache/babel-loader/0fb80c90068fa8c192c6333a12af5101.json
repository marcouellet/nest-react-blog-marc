{"ast":null,"code":"var _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\common\\\\displayTooltip.tsx\";\nimport React from 'react';\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\n\nconst DisplayTooltip = ({\n  children,\n  toolTip,\n  className\n}) => {\n  const renderTooltip = props => {\n    return React.createElement(Tooltip, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        color: 'bisque'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, toolTip ? toolTip : 'no tooltip'));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(OverlayTrigger, {\n    placement: \"top\",\n    overlay: renderTooltip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, children)));\n};\n\nexport default DisplayTooltip;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/common/displayTooltip.tsx"],"names":["React","OverlayTrigger","Tooltip","DisplayTooltip","children","toolTip","className","renderTooltip","props","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAMA,MAAMC,cAA6C,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA;AAApB,CAAD,KAAoC;AAEtF,QAAMC,aAAa,GAAIC,KAAD,IAAgB;AAClC,WACI,oBAAC,OAAD,oBAAaA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,OAAO,GAAGA,OAAH,GAAa,YADzB,CADJ,CADJ;AAOH,GARD;;AAUA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,KAA1B;AAAgC,IAAA,OAAO,EAAEE,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,QADL,CADH,CADL,CADJ;AASH,CArBD;;AAuBA,eAAeD,cAAf","sourcesContent":["import React from 'react';\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\n\r\ntype DisplayTooltipProps = React.HTMLProps<HTMLButtonElement> & {\r\n    toolTip?: string\r\n}\r\n\r\nconst DisplayTooltip: React.FC<DisplayTooltipProps> = ({children, toolTip, className}) => {\r\n\r\n    const renderTooltip = (props: any) => {\r\n        return (\r\n            <Tooltip {...props}>\r\n                <div style={{color: 'bisque'}}>\r\n                    {toolTip ? toolTip : 'no tooltip'}\r\n                </div>\r\n            </Tooltip> \r\n        ) \r\n    };\r\n\r\n    return (\r\n        <div>\r\n             <OverlayTrigger placement=\"top\" overlay={renderTooltip}>\r\n                <div>\r\n                    {children}\r\n                </div>\r\n             </OverlayTrigger>\r\n        </div>\r\n)\r\n};\r\n\r\nexport default DisplayTooltip;"]},"metadata":{},"sourceType":"module"}
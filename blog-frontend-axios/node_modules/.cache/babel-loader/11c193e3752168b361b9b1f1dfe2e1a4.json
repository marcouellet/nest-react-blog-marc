{"ast":null,"code":"var _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\user\\\\ViewUserCard.tsx\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport { Container, Card, Button } from 'react-bootstrap';\nimport Image from '../common/Image';\nimport ImageResize from '../common/ImageResize';\n\nconst ViewUserCard = ({\n  className,\n  user,\n  defaultUserImage,\n  onClose\n}) => {\n  const imageMaxSize = {\n    maxWidth: 120,\n    maxHeight: 120\n  };\n\n  const UserImage = () => {\n    if (user.image) {\n      return React.createElement(ImageResize, {\n        imageData: user.image,\n        resize: imageMaxSize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      });\n    } else {\n      return defaultUserImage && React.createElement(Image, {\n        imageData: defaultUserImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n    }\n  };\n\n  const handleOnClose = () => {\n    onClose && onClose();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"view-user-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: {\n      width: '12.5rem',\n      cursor: \"pointer\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, user === null || user === void 0 ? void 0 : user.username), UserImage()), React.createElement(Card.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, user.email)), React.createElement(Button, {\n    onClick: handleOnClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Close\")))));\n};\n\nexport default ViewUserCard;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/user/ViewUserCard.tsx"],"names":["React","Container","Card","Button","Image","ImageResize","ViewUserCard","className","user","defaultUserImage","onClose","imageMaxSize","maxWidth","maxHeight","UserImage","image","handleOnClose","width","cursor","username","email"],"mappings":";AAAA,OAAO,sCAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,IAAnB,EAAyBC,MAAzB,QAAuC,iBAAvC;AAEA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;AAUA,MAAMC,YAAyC,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,gBAAlB;AAAoCC,EAAAA;AAApC,CAAD,KAAkD;AAElG,QAAMC,YAA4B,GAAG;AAACC,IAAAA,QAAQ,EAAC,GAAV;AAAeC,IAAAA,SAAS,EAAC;AAAzB,GAArC;;AAEA,QAAMC,SAAS,GAAG,MAAM;AACtB,QAAGN,IAAI,CAACO,KAAR,EAAe;AACb,aAAO,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAEP,IAAI,CAACO,KAA7B;AAAoC,QAAA,MAAM,EAAEJ,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEQ;AACN,aAAQF,gBAAgB,IAAI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEA,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5B;AACD;AACF,GAND;;AAQA,QAAMO,aAAa,GAAG,MAAM;AAC1BN,IAAAA,OAAO,IAAIA,OAAO,EAAlB;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAE,SAAT;AAAqBC,MAAAA,MAAM,EAAE;AAA7B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,IAAL,aAAKA,IAAL,uBAAKA,IAAI,CAAEW,QAAX,CADF,EAEGL,SAAS,EAFZ,CADF,EAKE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,IAAI,CAACY,KAAV,CADF,CALF,EAQE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEJ,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,CADF,CADJ,CADF,CADF;AAkBD,CAlCD;;AAoCA,eAAeV,YAAf","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';  \r\nimport React from 'react';\r\nimport {Container ,Card, Button } from 'react-bootstrap';\r\nimport { IUser, ImageSizeProps, ImageData } from \"../../types\";\r\nimport Image from '../common/Image';\r\nimport ImageResize from '../common/ImageResize';\r\n\r\ntype ViewUserCardProps = React.HTMLProps<HTMLElement> & {\r\n  user: IUser,\r\n  defaultUserImage: ImageData,\r\n  onClose?: onClose\r\n}\r\n\r\nexport type onClose = () => void;\r\n\r\nconst ViewUserCard: React.FC<ViewUserCardProps> = ({className, user, defaultUserImage, onClose}) => {\r\n\r\n  const imageMaxSize: ImageSizeProps = {maxWidth:120, maxHeight:120};\r\n\r\n  const UserImage = () => {\r\n    if(user.image) {\r\n      return <ImageResize imageData={user.image} resize={imageMaxSize}/>;\r\n    }  else {\r\n      return  defaultUserImage && <Image imageData={defaultUserImage}/> \r\n    }\r\n  }\r\n\r\n  const handleOnClose = () => {\r\n    onClose && onClose();\r\n  }\r\n\r\n  return (  \r\n    <div className=\"view-user-card\">  \r\n      <Container>  \r\n          <Card style={{ width: '12.5rem',  cursor: \"pointer\" }}>  \r\n            <Card.Body>\r\n              <Card.Header>\r\n                <h5>{user?.username}</h5>\r\n                {UserImage()}\r\n              </Card.Header> \r\n              <Card.Text>\r\n                <h6>{user.email}</h6>\r\n              </Card.Text>\r\n              <Button onClick={handleOnClose}>Close</Button>\r\n            </Card.Body>  \r\n          </Card>  \r\n      </Container>  \r\n    </div>  \r\n  );  \r\n};\r\n\r\nexport default ViewUserCard;"]},"metadata":{},"sourceType":"module"}
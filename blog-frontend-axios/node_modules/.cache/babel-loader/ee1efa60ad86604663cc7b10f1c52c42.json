{"ast":null,"code":"import _objectSpread from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\user\\\\ViewUserInfo.tsx\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect } from 'react';\nimport { Container, Card } from 'react-bootstrap';\nimport ImageResize from '../common/ImageResize';\nimport ImageUpload from '../common/ImageUpload';\nimport useAuth from '../../contexts/auth';\nimport { toast } from \"react-toastify\";\nimport { UserRole, createUserForUpdate } from '../../types';\nimport { createActionLoading, createActionSessionExpired, createActionUpdateUser } from '../../reducers/auth';\nimport { UserApiService } from \"../../services/api/UserApiService\";\nimport { checkUnauthorized, checkForbidden } from '../../utils/html.response.utils';\n\nconst ViewUserInfo = () => {\n  const _useAuth = useAuth(),\n        _useAuth$state = _useAuth.state,\n        user = _useAuth$state.user,\n        isAuthenticated = _useAuth$state.isAuthenticated,\n        dispatch = _useAuth.dispatch;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        userImage = _useState2[0],\n        setUserImage = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        imageChanged = _useState4[0],\n        setImageChanged = _useState4[1];\n\n  const isAdministrator = () => isAuthenticated && (user === null || user === void 0 ? void 0 : user.role) === UserRole.ADMIN;\n\n  useEffect(() => {\n    setImageData(user === null || user === void 0 ? void 0 : user.image); // eslint-disable-next-line\n  }, [user]);\n\n  const handleImageUpload = image => {\n    setImageData(image);\n  };\n\n  const handleDeleteImage = () => {\n    setImageData(undefined);\n  };\n\n  const handleCancelImage = () => {\n    setImageData(user === null || user === void 0 ? void 0 : user.image);\n  };\n\n  const handleSaveImage = async () => {\n    dispatch(createActionLoading(true));\n    const image = userImage;\n    const userData = createUserForUpdate(_objectSpread({}, user, {\n      image\n    }));\n    await UserApiService.updateUser(user.id, userData).then(user => {\n      dispatch(createActionUpdateUser(user));\n      handleSaveImageSuccess();\n    }).catch(apiErrors => {\n      handleSaveImageError(apiErrors);\n    });\n    dispatch(createActionLoading(false));\n  };\n\n  const handleSaveImageSuccess = () => {\n    setImageChanged(false);\n    toast.success(`User image updated successfully...`);\n  };\n\n  const handleSaveImageError = apiErrors => {\n    if (checkForbidden(apiErrors)) {\n      toast.error(`User image update failed, session expired`);\n      dispatch(createActionSessionExpired());\n    } else if (checkUnauthorized(apiErrors)) {\n      toast.error(`Access denied`);\n    } else {\n      toast.error(`User image update failed, see error list`);\n    }\n  };\n\n  const setImageData = image => {\n    var _user$image;\n\n    const isImageDefined = image !== undefined;\n    const isInitialImageDefined = (user === null || user === void 0 ? void 0 : user.image) !== undefined;\n    const imageChanged = isImageDefined !== isInitialImageDefined || isImageDefined && (image === null || image === void 0 ? void 0 : image.base64) !== (user === null || user === void 0 ? void 0 : (_user$image = user.image) === null || _user$image === void 0 ? void 0 : _user$image.base64);\n    let newImage = undefined;\n\n    if (image) {\n      newImage = _objectSpread({}, image);\n    }\n\n    setUserImage(newImage);\n    setImageChanged(imageChanged);\n  };\n\n  const imageMaxSize = {\n    maxWidth: 260,\n    maxHeight: 260\n  };\n  return React.createElement(React.Fragment, null, user && React.createElement(\"div\", {\n    className: \"ViewUserInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"float-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Container, {\n    className: \"col-lg-2 col-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    className: \"image-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, user === null || user === void 0 ? void 0 : user.username, \"\\xA0\", isAdministrator() && '(admin)')), userImage && React.createElement(ImageResize, {\n    imageData: userImage,\n    resize: imageMaxSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(Card.Subtitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Email:\\xA0\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, user.email)), React.createElement(Card.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"col-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \" Image: \"), userImage && React.createElement(\"button\", {\n    className: \"btn btn-secondary col-md-2\",\n    onClick: () => handleDeleteImage(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Delete\"), imageChanged && React.createElement(\"div\", {\n    className: \"form-group col-md-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-secondary col-md-4\",\n    onClick: () => handleSaveImage(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Update\"), React.createElement(\"button\", {\n    className: \"btn btn-secondary col-md-4\",\n    onClick: () => handleCancelImage(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Cancel\")), React.createElement(ImageUpload, {\n    onImageUpload: handleImageUpload,\n    resize: imageMaxSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })))))))));\n};\n\nexport default ViewUserInfo;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/user/ViewUserInfo.tsx"],"names":["React","useState","useEffect","Container","Card","ImageResize","ImageUpload","useAuth","toast","UserRole","createUserForUpdate","createActionLoading","createActionSessionExpired","createActionUpdateUser","UserApiService","checkUnauthorized","checkForbidden","ViewUserInfo","state","user","isAuthenticated","dispatch","userImage","setUserImage","imageChanged","setImageChanged","isAdministrator","role","ADMIN","setImageData","image","handleImageUpload","handleDeleteImage","undefined","handleCancelImage","handleSaveImage","userData","updateUser","id","then","handleSaveImageSuccess","catch","apiErrors","handleSaveImageError","success","error","isImageDefined","isInitialImageDefined","base64","newImage","imageMaxSize","maxWidth","maxHeight","username","email"],"mappings":";;;AAAA,OAAO,sCAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,SAAR,EAAmBC,IAAnB,QAA+B,iBAA/B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,QAAT,EAA8CC,mBAA9C,QAA+F,aAA/F;AACA,SAASC,mBAAT,EAA8BC,0BAA9B,EAA0DC,sBAA1D,QAAwF,qBAAxF;AACA,SAASC,cAAT,QAA+B,mCAA/B;AACA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,iCAAlD;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA,mBAEgCV,OAAO,EAFvC;AAAA,kCAEfW,KAFe;AAAA,QAENC,IAFM,kBAENA,IAFM;AAAA,QAEAC,eAFA,kBAEAA,eAFA;AAAA,QAEmBC,QAFnB,YAEmBA,QAFnB;;AAAA,oBAGWpB,QAAQ,EAHnB;AAAA;AAAA,QAGhBqB,SAHgB;AAAA,QAGLC,YAHK;;AAAA,qBAIiBtB,QAAQ,EAJzB;AAAA;AAAA,QAIhBuB,YAJgB;AAAA,QAIFC,eAJE;;AAMvB,QAAMC,eAAe,GAAG,MAAMN,eAAe,IAAI,CAAAD,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEQ,IAAN,MAAelB,QAAQ,CAACmB,KAAzE;;AAEA1B,EAAAA,SAAS,CAAC,MAAM;AACZ2B,IAAAA,YAAY,CAACV,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEW,KAAP,CAAZ,CADY,CAEd;AACC,GAHM,EAGJ,CAACX,IAAD,CAHI,CAAT;;AAKA,QAAMY,iBAAiB,GAAID,KAAD,IAAsB;AAC5CD,IAAAA,YAAY,CAACC,KAAD,CAAZ;AACD,GAFH;;AAIA,QAAME,iBAAiB,GAAG,MAAM;AAC5BH,IAAAA,YAAY,CAACI,SAAD,CAAZ;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAG,MAAM;AAC5BL,IAAAA,YAAY,CAACV,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEW,KAAP,CAAZ;AACH,GAFD;;AAIA,QAAMK,eAAe,GAAG,YAAY;AAChCd,IAAAA,QAAQ,CAACV,mBAAmB,CAAC,IAAD,CAApB,CAAR;AACA,UAAMmB,KAA4B,GAAGR,SAArC;AACA,UAAMc,QAAqB,GAAG1B,mBAAmB,mBAAKS,IAAL;AAAYW,MAAAA;AAAZ,OAAjD;AACA,UAAMhB,cAAc,CAACuB,UAAf,CAA0BlB,IAAI,CAAEmB,EAAhC,EAAqCF,QAArC,EACLG,IADK,CACCpB,IAAD,IAAU;AACZE,MAAAA,QAAQ,CAACR,sBAAsB,CAACM,IAAD,CAAvB,CAAR;AACAqB,MAAAA,sBAAsB;AACzB,KAJK,EAKLC,KALK,CAKEC,SAAD,IAAyB;AAAEC,MAAAA,oBAAoB,CAACD,SAAD,CAApB;AAAkC,KAL9D,CAAN;AAMArB,IAAAA,QAAQ,CAACV,mBAAmB,CAAC,KAAD,CAApB,CAAR;AACH,GAXD;;AAaA,QAAM6B,sBAAsB,GAAG,MAAM;AACjCf,IAAAA,eAAe,CAAC,KAAD,CAAf;AACAjB,IAAAA,KAAK,CAACoC,OAAN,CAAe,oCAAf;AACH,GAHD;;AAKA,QAAMD,oBAAoB,GAAID,SAAD,IAAwB;AACjD,QAAI1B,cAAc,CAAC0B,SAAD,CAAlB,EAA+B;AAC3BlC,MAAAA,KAAK,CAACqC,KAAN,CAAa,2CAAb;AACAxB,MAAAA,QAAQ,CAACT,0BAA0B,EAA3B,CAAR;AACH,KAHD,MAGO,IAAIG,iBAAiB,CAAC2B,SAAD,CAArB,EAAkC;AACrClC,MAAAA,KAAK,CAACqC,KAAN,CAAa,eAAb;AACH,KAFM,MAEA;AACHrC,MAAAA,KAAK,CAACqC,KAAN,CAAa,0CAAb;AACH;AACJ,GATD;;AAWA,QAAMhB,YAAY,GAAIC,KAAD,IAAkC;AAAA;;AACnD,UAAMgB,cAAc,GAAGhB,KAAK,KAAKG,SAAjC;AACA,UAAMc,qBAAqB,GAAG,CAAA5B,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEW,KAAN,MAAgBG,SAA9C;AACA,UAAMT,YAAY,GAAIsB,cAAc,KAAKC,qBAApB,IACED,cAAc,IAAI,CAAAhB,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEkB,MAAP,OAAkB7B,IAAlB,aAAkBA,IAAlB,sCAAkBA,IAAI,CAAEW,KAAxB,gDAAkB,YAAakB,MAA/B,CADzC;AAEA,QAAIC,QAA+B,GAAGhB,SAAtC;;AACA,QAAIH,KAAJ,EAAW;AACPmB,MAAAA,QAAQ,qBAAQnB,KAAR,CAAR;AACH;;AACDP,IAAAA,YAAY,CAAC0B,QAAD,CAAZ;AACAxB,IAAAA,eAAe,CAACD,YAAD,CAAf;AACH,GAXD;;AAaA,QAAM0B,YAA4B,GAAG;AAACC,IAAAA,QAAQ,EAAC,GAAV;AAAeC,IAAAA,SAAS,EAAC;AAAzB,GAArC;AAEA,SACI,0CAEIjC,IAAI,IACJ;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAL,aAAKA,IAAL,uBAAKA,IAAI,CAAEkC,QAAX,UAA2B3B,eAAe,MAAM,SAAhD,CADJ,CADJ,EAIMJ,SAAS,IAAI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEA,SAAxB;AAAmC,IAAA,MAAM,EAAE4B,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJnB,EAKI,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO/B,IAAI,CAACmC,KAAZ,CAHJ,CALJ,EAUI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,EAEUhC,SAAS,IACP;AAAQ,IAAA,SAAS,EAAC,4BAAlB;AAAgD,IAAA,OAAO,EAAG,MAAMU,iBAAiB,EAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHZ,EAOUR,YAAY,IACN;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,4BAAlB;AAAgD,IAAA,OAAO,EAAG,MAAMW,eAAe,EAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAII;AAAQ,IAAA,SAAS,EAAC,4BAAlB;AAAgD,IAAA,OAAO,EAAG,MAAMD,iBAAiB,EAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CARhB,EAkBQ,oBAAC,WAAD;AAAa,IAAA,aAAa,EAAEH,iBAA5B;AAA+C,IAAA,MAAM,EAAEmB,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBR,CADJ,CAVJ,CADJ,CADJ,CADA,CADA,CAHJ,CADJ;AAiDH,CAtHD;;AAwHA,eAAejC,YAAf","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';  \r\nimport React, { useState, useEffect } from 'react';\r\nimport {Container ,Card } from 'react-bootstrap';\r\nimport ImageResize from '../common/ImageResize';\r\nimport ImageUpload from '../common/ImageUpload';\r\nimport useAuth from '../../contexts/auth';\r\nimport { toast } from \"react-toastify\";\r\nimport { UserRole, ImageData, ImageSizeProps, createUserForUpdate, IUpdateUser, IErrors } from '../../types';\r\nimport { createActionLoading, createActionSessionExpired, createActionUpdateUser } from '../../reducers/auth';\r\nimport { UserApiService } from \"../../services/api/UserApiService\";\r\nimport { checkUnauthorized, checkForbidden } from '../../utils/html.response.utils';\r\n\r\nconst ViewUserInfo = () => {\r\n\r\n    const { state: { user, isAuthenticated }, dispatch } = useAuth();\r\n    const [userImage, setUserImage] = useState<ImageData>();\r\n    const [imageChanged, setImageChanged] = useState<boolean>();\r\n\r\n    const isAdministrator = () => isAuthenticated && user?.role === UserRole.ADMIN;\r\n\r\n    useEffect(() => {\r\n        setImageData(user?.image);\r\n      // eslint-disable-next-line\r\n      }, [user]);\r\n\r\n    const handleImageUpload = (image: ImageData) => {\r\n        setImageData(image);\r\n      }\r\n      \r\n    const handleDeleteImage = () => {\r\n        setImageData(undefined);\r\n    }\r\n\r\n    const handleCancelImage = () => {\r\n        setImageData(user?.image);\r\n    }\r\n\r\n    const handleSaveImage = async () => {\r\n        dispatch(createActionLoading(true));\r\n        const image: ImageData | undefined = userImage;\r\n        const userData: IUpdateUser = createUserForUpdate({...user!, image});\r\n        await UserApiService.updateUser(user!.id!, userData)\r\n        .then((user) => {\r\n            dispatch(createActionUpdateUser(user));\r\n            handleSaveImageSuccess(); \r\n        })\r\n        .catch((apiErrors: IErrors) =>  { handleSaveImageError(apiErrors); });\r\n        dispatch(createActionLoading(false));\r\n    }\r\n\r\n    const handleSaveImageSuccess = () => {\r\n        setImageChanged(false);\r\n        toast.success(`User image updated successfully...`);\r\n    }\r\n    \r\n    const handleSaveImageError = (apiErrors: IErrors) => {\r\n        if (checkForbidden(apiErrors)) {\r\n            toast.error(`User image update failed, session expired`);\r\n            dispatch(createActionSessionExpired());\r\n        } else if (checkUnauthorized(apiErrors)) {\r\n            toast.error(`Access denied`);\r\n        } else {\r\n            toast.error(`User image update failed, see error list`);   \r\n        }\r\n    }\r\n\r\n    const setImageData = (image: ImageData | undefined) => {\r\n        const isImageDefined = image !== undefined;\r\n        const isInitialImageDefined = user?.image !== undefined;\r\n        const imageChanged = (isImageDefined !== isInitialImageDefined) ||\r\n                              (isImageDefined && image?.base64 !== user?.image?.base64);\r\n        let newImage: ImageData | undefined = undefined;\r\n        if (image) {\r\n            newImage = { ...image}\r\n        }\r\n        setUserImage(newImage);\r\n        setImageChanged(imageChanged);\r\n    }\r\n\r\n    const imageMaxSize: ImageSizeProps = {maxWidth:260, maxHeight:260};\r\n\r\n    return (  \r\n        <>\r\n        {  \r\n            user && \r\n            <div className=\"ViewUserInfo\">  \r\n            <div className=\"float-start\">\r\n            <Container className='col-lg-2 col-md-2'>  \r\n                <Card>  \r\n                    <Card.Body className=\"image-container\">\r\n                        <Card.Header>\r\n                            <h5>{user?.username}&nbsp;{isAdministrator() && '(admin)'}</h5>\r\n                        </Card.Header> \r\n                        { userImage && <ImageResize imageData={userImage} resize={imageMaxSize}/> }\r\n                        <Card.Subtitle>\r\n                            <br/>\r\n                            <span>Email:&nbsp;</span> \r\n                            <span>{user.email}</span> \r\n                        </Card.Subtitle> \r\n                        <Card.Footer>\r\n                            <div className=\"col\">\r\n                                    <label className=\"col-md-2\"> Image: </label>\r\n                                    { userImage && \r\n                                        <button className=\"btn btn-secondary col-md-2\"  onClick={ () => handleDeleteImage() } >\r\n                                            Delete\r\n                                        </button> \r\n                                    }\r\n                                    { imageChanged && \r\n                                            <div className=\"form-group col-md-5\">\r\n                                                <button className=\"btn btn-secondary col-md-4\"  onClick={ () => handleSaveImage() } >\r\n                                                    Update\r\n                                                </button> \r\n                                                <button className=\"btn btn-secondary col-md-4\"  onClick={ () => handleCancelImage() } >\r\n                                                    Cancel\r\n                                                </button>  \r\n                                            </div> \r\n                                                                                                \r\n                                    }  \r\n                                    <ImageUpload onImageUpload={handleImageUpload} resize={imageMaxSize}/>                \r\n                                </div>\r\n\r\n                        </Card.Footer>     \r\n                    </Card.Body>  \r\n                    </Card>  \r\n                </Container>  \r\n            </div>\r\n            </div>  \r\n        }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ViewUserInfo;"]},"metadata":{},"sourceType":"module"}
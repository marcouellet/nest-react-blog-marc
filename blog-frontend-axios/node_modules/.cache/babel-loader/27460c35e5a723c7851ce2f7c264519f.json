{"ast":null,"code":"import _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\common\\\\ImageResize.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { resizeImage } from '../../utils/image.utils';\nimport Image from '../common/Image';\n\nconst ImageResize = props => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        image = _useState2[0],\n        setImage = _useState2[1];\n\n  useEffect(() => {\n    const resize = async () => {\n      resizeImage(props.imageData, props.resize.maxWidth, props.resize.maxHeight).then(imageData => {\n        setImage(imageData);\n      });\n    };\n\n    resize(); // eslint-disable-next-line\n  }, [props]);\n  return React.createElement(React.Fragment, null, image && React.createElement(Image, {\n    imageData: image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};\n\nexport default ImageResize;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/common/ImageResize.tsx"],"names":["React","useState","useEffect","resizeImage","Image","ImageResize","props","image","setImage","resize","imageData","maxWidth","maxHeight","then"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;AAOA,MAAMC,WAAW,GAAIC,KAAD,IAA6B;AAAA,oBAEnBL,QAAQ,EAFW;AAAA;AAAA,QAEtCM,KAFsC;AAAA,QAE/BC,QAF+B;;AAI7CN,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,MAAM,GAAG,YAA2B;AACtCN,MAAAA,WAAW,CAACG,KAAK,CAACI,SAAP,EAAkBJ,KAAK,CAACG,MAAN,CAAaE,QAA/B,EAAyCL,KAAK,CAACG,MAAN,CAAaG,SAAtD,CAAX,CACKC,IADL,CACUH,SAAS,IAAI;AACfF,QAAAA,QAAQ,CAACE,SAAD,CAAR;AACH,OAHL;AAID,KALH;;AAMAD,IAAAA,MAAM,GAPM,CAQd;AACC,GATM,EASJ,CAACH,KAAD,CATI,CAAT;AAWA,SACI,0CACEC,KAAK,IAAI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,CADJ;AAKH,CApBD;;AAsBA,eAAeF,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ImageData, ImageSizeProps } from '../../types';\r\nimport { resizeImage } from '../../utils/image.utils';\r\nimport Image from '../common/Image';\r\n\r\nexport interface ImageResizeProps {\r\n    imageData: ImageData,\r\n    resize: ImageSizeProps,\r\n}\r\n\r\nconst ImageResize = (props: ImageResizeProps) => {\r\n\r\n    const [image, setImage] = useState<ImageData>();\r\n\r\n    useEffect(() => {\r\n        const resize = async (): Promise<void> => {\r\n            resizeImage(props.imageData, props.resize.maxWidth, props.resize.maxHeight)\r\n                .then(imageData => {\r\n                    setImage(imageData);\r\n                });\r\n          }\r\n        resize();  \r\n      // eslint-disable-next-line\r\n      }, [props]);\r\n    \r\n    return (\r\n        <>\r\n        { image && <Image imageData={image}/> }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImageResize;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\contexts\\\\modalConfirmationContext.tsx\";\nimport React, { useContext, useRef, useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst useModalShow = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        show = _useState2[0],\n        setShow = _useState2[1];\n\n  const handleOnHide = () => {\n    setShow(false);\n  };\n\n  return {\n    show,\n    setShow,\n    onHide: handleOnHide\n  };\n};\n\nconst ConfirmationModalContext = React.createContext({});\n\nconst ConfirmationModalContextProvider = props => {\n  const _useModalShow = useModalShow(),\n        setShow = _useModalShow.setShow,\n        show = _useModalShow.show,\n        onHide = _useModalShow.onHide;\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        content = _useState4[0],\n        setContent = _useState4[1];\n\n  const resolver = useRef();\n\n  const handleShow = (title, message) => {\n    setContent({\n      title,\n      message\n    });\n    setShow(true);\n    return new Promise(function (resolve) {\n      resolver.current = resolve;\n    });\n  };\n\n  const modalContext = {\n    showConfirmation: handleShow\n  };\n\n  const handleOk = () => {\n    resolver.current && resolver.current(true);\n    onHide();\n  };\n\n  const handleCancel = () => {\n    resolver.current && resolver.current(false);\n    onHide();\n  };\n\n  return React.createElement(ConfirmationModalContext.Provider, {\n    value: modalContext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, props.children, content && React.createElement(Modal, {\n    show: show,\n    onHide: onHide,\n    centered: true,\n    dialogClassName: `modal-md`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, content.title)), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, content.message)), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-default\",\n    onClick: handleCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: handleOk,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"OK\"))));\n};\n\nconst useConfirmationModalContext = () => useContext(ConfirmationModalContext);\n\nexport { useModalShow, useConfirmationModalContext };\nexport default ConfirmationModalContextProvider;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/contexts/modalConfirmationContext.tsx"],"names":["React","useContext","useRef","useState","Modal","useModalShow","show","setShow","handleOnHide","onHide","ConfirmationModalContext","createContext","ConfirmationModalContextProvider","props","content","setContent","resolver","handleShow","title","message","Promise","resolve","current","modalContext","showConfirmation","handleOk","handleCancel","children","useConfirmationModalContext"],"mappings":"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","sourcesContent":["import React, {useContext, useRef, useState} from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\ntype UseModalShowReturnType = {\r\n    show: boolean;\r\n    setShow: (value: boolean) => void;\r\n    onHide: () => void;\r\n}\r\n\r\nconst useModalShow = (): UseModalShowReturnType => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleOnHide = () => {\r\n        setShow(false);\r\n    };\r\n\r\n    return {\r\n        show,\r\n        setShow,\r\n        onHide: handleOnHide,\r\n    }\r\n};\r\n\r\ntype ModalContextType = {\r\n    showConfirmation: (title: string, message: string | JSX.Element) => Promise<boolean>;\r\n};\r\n\r\ntype ConfirmationModalContextProviderProps = {\r\n    children: React.ReactNode\r\n}\r\n\r\nconst ConfirmationModalContext = React.createContext<ModalContextType>({} as ModalContextType);\r\n\r\nconst ConfirmationModalContextProvider: React.FC<ConfirmationModalContextProviderProps> = (props) => {\r\n    const {setShow, show, onHide} = useModalShow();\r\n    const [content, setContent] = useState<{ title: string, message: string | JSX.Element} | null>();\r\n    const resolver = useRef<Function>();\r\n\r\n    const handleShow = (title: string, message: string | JSX.Element): Promise<boolean> => {\r\n        setContent({\r\n            title,\r\n            message\r\n        });\r\n        setShow(true);\r\n        return new Promise(function (resolve) {\r\n            resolver.current = resolve;\r\n        });\r\n    };\r\n\r\n    const modalContext: ModalContextType = {\r\n        showConfirmation: handleShow\r\n    };\r\n\r\n    const handleOk = () => {\r\n        resolver.current && resolver.current(true);\r\n        onHide();\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        resolver.current && resolver.current(false);\r\n        onHide();\r\n    };\r\n\r\n    return (\r\n        <ConfirmationModalContext.Provider value={modalContext}>\r\n            {props.children}\r\n\r\n            {content && \r\n            (\r\n                <Modal show={show} onHide={onHide} centered dialogClassName={`modal-md`}>\r\n                    <Modal.Header>\r\n                        <label>{content.title}</label>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <label>{content.message}</label>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button className=\"btn btn-default\" onClick={handleCancel}>Cancel</button>\r\n                        <button className=\"btn btn-primary\" onClick={handleOk}>OK</button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            )}\r\n        </ConfirmationModalContext.Provider>\r\n        \r\n    )\r\n};\r\n\r\nconst useConfirmationModalContext = (): ModalContextType => useContext(ConfirmationModalContext);\r\n\r\nexport {\r\n    useModalShow,\r\n    useConfirmationModalContext,\r\n}\r\n\r\nexport default ConfirmationModalContextProvider;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\user\\\\CreateUser.tsx\";\nimport React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport * as Yup from 'yup';\nimport CancelButton from '../common/cancelConfirmation';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { UserApiService } from \"../../services/api/UserApiService\";\nimport { createActionLoading } from '../../reducers/auth';\nimport useAuth from '../../contexts/auth';\nimport ListErrors from '../common/ListErrors';\nimport { checkForbidden } from '../../utils/response';\nimport { createActionSessionExpired } from '../../reducers/auth';\n\nconst CreateUser = () => {\n  var _errors$title, _errors$description, _errors$body;\n\n  const navigate = useNavigate();\n\n  const _useAuth = useAuth(),\n        _useAuth$state = _useAuth.state,\n        isLoading = _useAuth$state.isLoading,\n        user = _useAuth$state.user,\n        dispatch = _useAuth.dispatch;\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        errorList = _React$useState2[0],\n        setErrorList = _React$useState2[1];\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('User name is required'),\n    email: Yup.string().required('Email is required'),\n    password: Yup.string().required('Password is required'),\n    role: Yup.string().required('Role is required')\n  });\n  const defaultValues = {\n    username: '',\n    email: '',\n    password: '',\n    role: ''\n  };\n\n  const _useForm = useForm({\n    resolver: yupResolver(validationSchema),\n    defaultValues: defaultValues\n  }),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        _useForm$formState = _useForm.formState,\n        errors = _useForm$formState.errors,\n        isDirty = _useForm$formState.isDirty,\n        reset = _useForm.reset;\n\n  const onSubmit = async data => {\n    dispatch(createActionLoading(true));\n\n    const UserData = _objectSpread({}, data, {\n      user\n    });\n\n    await UserApiService.createUser(UserData).then(() => {\n      handleSubmitFormSucess();\n    }).catch(apiErrors => {\n      handleSubmitFormError(apiErrors);\n    });\n    dispatch(createActionLoading(false));\n  };\n\n  const handleSubmitFormSucess = () => {\n    toast.success(`User created successfully...`);\n    navigate('/');\n  };\n\n  const handleSubmitFormError = apiErrors => {\n    if (checkForbidden(apiErrors)) {\n      toast.error(`User creation failed, session expired`);\n      dispatch(createActionSessionExpired());\n    } else {\n      toast.error(`User creation failed, see error list`);\n      setErrorList(apiErrors);\n    }\n  };\n\n  const cancelCreateUserMessage = () => `User creation and loose changes`;\n\n  const handleClearEditUser = () => {\n    reset(defaultValues, {\n      keepDirty: false\n    });\n  };\n\n  const handleCancelCreateUser = () => {\n    navigate('/');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-12 form-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \" Create User \"), errorList && React.createElement(ListErrors, {\n    errors: errorList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    id: \"create-User-form\",\n    onSubmit: handleSubmit(onSubmit),\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \" Title \"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter title\"\n  }, register('title'), {\n    className: `form-control ${errors.title ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \" Description \"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter description\"\n  }, register('description'), {\n    className: `form-control ${errors.description ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \" Write Content \"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter body\"\n  }, register('body'), {\n    className: `form-control ${errors.body ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, (_errors$body = errors.body) === null || _errors$body === void 0 ? void 0 : _errors$body.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-1 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    disabled: !isDirty,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Create User\"), isLoading && React.createElement(\"span\", {\n    className: \"fa fa-circle-o-notch fa-spin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group col-md-1 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-secondary\",\n    disabled: !isDirty,\n    onClick: () => handleClearEditUser(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Clear\"), isLoading && React.createElement(\"span\", {\n    className: \"fa fa-circle-o-notch fa-spin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group col-md-1 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(CancelButton, {\n    prompt: isDirty,\n    message: cancelCreateUserMessage(),\n    onClick: () => handleCancelCreateUser(),\n    className: \"btn btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Cancel\"))));\n};\n\nexport default CreateUser;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/user/CreateUser.tsx"],"names":["React","useForm","useNavigate","toast","Yup","CancelButton","yupResolver","UserApiService","createActionLoading","useAuth","ListErrors","checkForbidden","createActionSessionExpired","CreateUser","navigate","state","isLoading","user","dispatch","useState","errorList","setErrorList","validationSchema","object","shape","username","string","required","email","password","role","defaultValues","resolver","register","handleSubmit","formState","errors","isDirty","reset","onSubmit","data","UserData","createUser","then","handleSubmitFormSucess","catch","apiErrors","handleSubmitFormError","success","error","cancelCreateUserMessage","handleClearEditUser","keepDirty","handleCancelCreateUser","title","message","description","body"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from \"react-toastify\";\r\nimport * as Yup from 'yup';\r\nimport CancelButton from '../common/cancelConfirmation'\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { UserApiService } from \"../../services/api/UserApiService\";\r\nimport { createActionLoading } from '../../reducers/auth';\r\nimport useAuth from '../../contexts/auth';\r\nimport ListErrors from '../common/ListErrors';\r\nimport { IErrors } from '../../types';\r\nimport { checkForbidden } from '../../utils/response';\r\nimport { createActionSessionExpired } from '../../reducers/auth';\r\n\r\nconst CreateUser = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const { state: { isLoading, user }, dispatch } = useAuth();\r\n  const [errorList, setErrorList] = React.useState<IErrors | null>();\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string().required('User name is required'),\r\n    email: Yup.string().required('Email is required'),\r\n    password: Yup.string().required('Password is required'),\r\n    role: Yup.string().required('Role is required'),\r\n  });\r\n\r\n  type UpdateSubmitForm = {\r\n    username: string;\r\n    email: string;\r\n    password: string;\r\n    role: string;\r\n  };\r\n\r\n  const defaultValues = {username: '', email: '', password: '', role: ''};\r\n\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isDirty },\r\n    reset\r\n  } = useForm<CreateSubmitForm>({\r\n    resolver: yupResolver(validationSchema),\r\n    defaultValues: defaultValues\r\n  });\r\n\r\n  const onSubmit = async (data: CreateSubmitForm) => {\r\n    dispatch(createActionLoading(true));\r\n    const UserData = {...data, user}\r\n    await UserApiService.createUser(UserData)\r\n    .then(() => { handleSubmitFormSucess(); })\r\n    .catch((apiErrors: IErrors) =>  { handleSubmitFormError(apiErrors); });\r\n    dispatch(createActionLoading(false));\r\n  } \r\n\r\n  const handleSubmitFormSucess = () => {\r\n    toast.success(`User created successfully...`);\r\n    navigate('/'); \r\n  }\r\n\r\n  const handleSubmitFormError = (apiErrors: IErrors) => {\r\n    if (checkForbidden(apiErrors)) {\r\n      toast.error(`User creation failed, session expired`);\r\n      dispatch(createActionSessionExpired());\r\n    } else {\r\n      toast.error(`User creation failed, see error list`);\r\n      setErrorList(apiErrors);      \r\n    }\r\n  }\r\n\r\n  const cancelCreateUserMessage = () => `User creation and loose changes`;\r\n\r\n  const handleClearEditUser = () => {\r\n    reset(defaultValues, { keepDirty: false});\r\n  }\r\n\r\n  const handleCancelCreateUser = () => {\r\n    navigate('/');   \r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <div className={\"col-md-12 form-wrapper\"}>\r\n      <h2> Create User </h2>\r\n      {errorList && <ListErrors errors={errorList} />}\r\n      <form id={\"create-User-form\"} onSubmit={handleSubmit(onSubmit)} noValidate={true}>\r\n        <div className=\"form-group col-md-12\">\r\n          <label htmlFor=\"title\"> Title </label>\r\n          <input \r\n            type=\"text\"\r\n            placeholder=\"Enter title\"\r\n            {...register('title')}\r\n            className={`form-control ${errors.title ? 'is-invalid' : ''}`} \r\n          />\r\n          <div className=\"invalid-feedback\">{errors.title?.message}</div>\r\n        </div>\r\n\r\n        <div className=\"form-group col-md-12\">\r\n          <label htmlFor=\"description\"> Description </label>\r\n          <input \r\n            type=\"text\" \r\n            placeholder=\"Enter description\"\r\n            {...register('description')}\r\n            className={`form-control ${errors.description ? 'is-invalid' : ''}`} \r\n          />\r\n          <div className=\"invalid-feedback\">{errors.description?.message}</div>\r\n        </div>\r\n\r\n        <div className=\"form-group col-md-12\">\r\n          <label htmlFor=\"body\"> Write Content </label>\r\n          <input \r\n            type=\"text\" \r\n            placeholder=\"Enter body\" \r\n            {...register('body')}\r\n            className={`form-control ${errors.body ? 'is-invalid' : ''}`}           \r\n          />\r\n          <div className=\"invalid-feedback\">{errors.body?.message}</div>\r\n        </div>\r\n\r\n        <div className=\"form-group col-md-1 pull-right\">\r\n          <button className=\"btn btn-success\"  disabled={!isDirty} type=\"submit\">\r\n            Create User\r\n          </button>\r\n          {isLoading &&\r\n            <span className=\"fa fa-circle-o-notch fa-spin\" />\r\n          }\r\n        </div>\r\n  \r\n        <div className=\"form-group col-md-1 pull-right\">\r\n          <button className=\"btn btn-secondary\"  disabled={!isDirty} onClick={ () => handleClearEditUser() } >\r\n            Clear\r\n          </button>\r\n          {isLoading &&\r\n            <span className=\"fa fa-circle-o-notch fa-spin\" />\r\n          }\r\n        </div>\r\n\r\n      </form>\r\n\r\n      <div className=\"form-group col-md-1 pull-right\">\r\n              <CancelButton prompt={isDirty} message={cancelCreateUserMessage()} onClick={() => handleCancelCreateUser()} className=\"btn btn-danger\">Cancel</CancelButton>\r\n            </div>\r\n\r\n    </div>\r\n  </div>\r\n  );\r\n\r\n}\r\nexport default CreateUser\r\n"]},"metadata":{},"sourceType":"module"}
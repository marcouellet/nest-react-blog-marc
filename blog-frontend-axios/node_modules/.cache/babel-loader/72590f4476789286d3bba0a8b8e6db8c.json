{"ast":null,"code":"var _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\auth\\\\sessionTimeoutHandler.tsx\";\nimport React, { useEffect } from 'react';\nimport useAuth from '../../contexts/auth';\nimport { useNavigate } from 'react-router-dom';\nimport AUTHAPI from '../../services/api/AuthApiService';\nimport { createActionLogout, createActionSessionRefresh } from '../../reducers/auth';\nimport { useConfirmationModalContext } from \"../../contexts/modalConfirmationContext\";\nimport { toast } from \"react-toastify\";\n\nconst SessionTimeoutHandler = () => {\n  const modalContext = useConfirmationModalContext();\n\n  const _useAuth = useAuth(),\n        state = _useAuth.state,\n        dispatch = _useAuth.dispatch;\n\n  const navigate = useNavigate();\n\n  const showSessionTimeoutModel = async () => {\n    return modalContext.showConfirmation(`${state.user.username} session expired!`, React.createElement(\"div\", {\n      style: {\n        border: \"2px solid blue\",\n        padding: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Do you want to stay logged in?\")));\n  };\n\n  const handleLogout = () => {\n    if (state.isAuthenticated) {\n      dispatch(createActionLogout());\n      AUTHAPI.logout();\n      toast.info(`${state.user.username} is logged out`);\n      navigate('/');\n    }\n  };\n\n  useEffect(() => {\n    if (state.isAuthenticated && state.isSessionExpired) {\n      showSessionTimeoutModel().then(result => {\n        if (result) {\n          // Session must be renewed\n          dispatch(createActionSessionRefresh());\n        } else {\n          handleLogout();\n        }\n      });\n    } // eslint-disable-next-line\n\n  }, [state]);\n  return React.createElement(React.Fragment, null);\n};\n\nexport default SessionTimeoutHandler;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/auth/sessionTimeoutHandler.tsx"],"names":["React","useEffect","useAuth","useNavigate","AUTHAPI","createActionLogout","createActionSessionRefresh","useConfirmationModalContext","toast","SessionTimeoutHandler","modalContext","state","dispatch","navigate","showSessionTimeoutModel","showConfirmation","user","username","border","padding","handleLogout","isAuthenticated","logout","info","isSessionExpired","then","result"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,SAASC,kBAAT,EAA6BC,0BAA7B,QAA+D,qBAA/D;AACA,SAASC,2BAAT,QAA4C,yCAA5C;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,MAAMC,qBAAqB,GAAG,MAAM;AAChC,QAAMC,YAAY,GAAGH,2BAA2B,EAAhD;;AADgC,mBAEJL,OAAO,EAFH;AAAA,QAExBS,KAFwB,YAExBA,KAFwB;AAAA,QAEjBC,QAFiB,YAEjBA,QAFiB;;AAGhC,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,QAAMW,uBAAuB,GAAG,YAA8B;AAC1D,WAAOJ,YAAY,CAACK,gBAAb,CACF,GAAEJ,KAAK,CAACK,IAAN,CAAYC,QAAS,mBADrB,EAGC;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,gBAAT;AAA2BC,QAAAA,OAAO,EAAE;AAApC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ,CAHD,CAAP;AAUH,GAXD;;AAaA,QAAMC,YAAY,GAAG,MAAM;AACvB,QAAIT,KAAK,CAACU,eAAV,EAA2B;AACvBT,MAAAA,QAAQ,CAACP,kBAAkB,EAAnB,CAAR;AACAD,MAAAA,OAAO,CAACkB,MAAR;AACAd,MAAAA,KAAK,CAACe,IAAN,CAAY,GAAEZ,KAAK,CAACK,IAAN,CAAYC,QAAS,gBAAnC;AACAJ,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACH;AACF,GAPH;;AASAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,KAAK,CAACU,eAAN,IAAyBV,KAAK,CAACa,gBAAnC,EAAqD;AACjDV,MAAAA,uBAAuB,GAAGW,IAA1B,CAAgCC,MAAD,IAAY;AACvC,YAAIA,MAAJ,EAAY;AACR;AACAd,UAAAA,QAAQ,CAACN,0BAA0B,EAA3B,CAAR;AACH,SAHD,MAGO;AACHc,UAAAA,YAAY;AACf;AACJ,OAPD;AASH,KAXW,CAYhB;;AACC,GAbQ,EAaN,CAACT,KAAD,CAbM,CAAT;AAeA,SAAO,yCAAP;AACH,CA3CD;;AA6CA,eAAeF,qBAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport useAuth from '../../contexts/auth';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AUTHAPI from '../../services/api/AuthApiService';\r\nimport { createActionLogout, createActionSessionRefresh } from '../../reducers/auth';\r\nimport { useConfirmationModalContext } from \"../../contexts/modalConfirmationContext\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst SessionTimeoutHandler = () => {\r\n    const modalContext = useConfirmationModalContext();\r\n    const { state, dispatch } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    const showSessionTimeoutModel = async (): Promise<boolean> => {\r\n        return modalContext.showConfirmation(\r\n            `${state.user!.username} session expired!`,\r\n            (\r\n                <div style={{border: \"2px solid blue\", padding: \"10px\"}}>\r\n                    <p>\r\n                        Do you want to stay logged in?\r\n                    </p>\r\n                </div>\r\n            )\r\n        );\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        if (state.isAuthenticated) {\r\n            dispatch(createActionLogout());\r\n            AUTHAPI.logout();\r\n            toast.info(`${state.user!.username} is logged out`);\r\n            navigate('/');\r\n        }\r\n      };\r\n\r\n    useEffect(() => {\r\n        if (state.isAuthenticated && state.isSessionExpired) {\r\n            showSessionTimeoutModel().then((result) => {\r\n                if (result) {\r\n                    // Session must be renewed\r\n                    dispatch(createActionSessionRefresh());\r\n                } else {\r\n                    handleLogout();\r\n                }\r\n            });\r\n    \r\n        }\r\n    // eslint-disable-next-line\r\n    }, [state]);\r\n\r\n    return <></>;\r\n}\r\n\r\nexport default SessionTimeoutHandler;"]},"metadata":{},"sourceType":"module"}
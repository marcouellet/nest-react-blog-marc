{"ast":null,"code":"import _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\post\\\\ViewPost.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport { UserRole } from \"../../types\";\nimport { toast } from \"react-toastify\";\nimport { PostApiService } from \"../../services/api/PostApiService\";\nimport { createActionLoading, createActionSessionExpired } from '../../reducers/auth';\nimport useAuth from '../../contexts/auth';\nimport ListErrors from '../common/ListErrors';\nimport { toLocalDateString } from '../../utils/local.storage.utils';\nimport { checkUnauthorized, checkForbidden } from '../../utils/html.response.utils';\nimport DeleteButton from '../common/deleteConfirmation';\nimport Image from '../common/Image';\n\nconst ViewPost = () => {\n  const _useParams = useParams(),\n        postId = _useParams.postId;\n\n  const _useAuth = useAuth(),\n        _useAuth$state = _useAuth.state,\n        isLoading = _useAuth$state.isLoading,\n        isAuthenticated = _useAuth$state.isAuthenticated,\n        user = _useAuth$state.user,\n        dispatch = _useAuth.dispatch;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        post = _useState2[0],\n        setPost = _useState2[1];\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        errors = _React$useState2[0],\n        setErrors = _React$useState2[1];\n\n  const navigate = useNavigate();\n\n  const isAdministrator = () => isAuthenticated && (user === null || user === void 0 ? void 0 : user.role) === UserRole.ADMIN;\n\n  const deletePostMessage = post => `${post.title} post`;\n\n  useEffect(() => {\n    if (!post) {\n      const fetchData = async () => {\n        dispatch(createActionLoading(true));\n        await PostApiService.getPostById(postId).then(post => setPost(post)).catch(apiErrors => handleFetchPostError(apiErrors));\n        dispatch(createActionLoading(false));\n      };\n\n      fetchData();\n    } // eslint-disable-next-line\n\n  }, []);\n\n  const handleDeletePost = async id => {\n    dispatch(createActionLoading(true));\n    await PostApiService.deletePost(id).then(() => handleDeletePostSucess()).catch(apiErrors => handleDeletePostError(apiErrors));\n    dispatch(createActionLoading(false));\n    navigate('/');\n  };\n\n  const handleDeletePostSucess = () => {\n    toast.success(`Post deleted successfully...`);\n  };\n\n  const handleDeletePostError = apiErrors => {\n    if (checkForbidden(apiErrors)) {\n      toast.error(`Post delete failed, session expired`);\n      dispatch(createActionSessionExpired());\n      navigate('/');\n    } else if (checkUnauthorized(apiErrors)) {\n      toast.error(`Access denied`);\n    } else {\n      toast.error(`Post delete failed, see error list`);\n      setErrors(apiErrors);\n    }\n  };\n\n  const handleFetchPostError = apiErrors => {\n    toast.error(`Post reading failed, see error list`);\n    setErrors(apiErrors);\n  };\n\n  const handleReturn = () => {\n    navigate('/');\n  };\n\n  const getDateString = date => {\n    if (date) {\n      return toLocalDateString(date);\n    } else {\n      return \"no date provided\";\n    }\n  };\n\n  return React.createElement(\"section\", {\n    className: \"post-area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, errors && React.createElement(ListErrors, {\n    errors: errors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-lg-1 col-md-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"col-lg-10 col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, post && React.createElement(\"div\", {\n    className: \"main-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"post-top-area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, post.image && React.createElement(React.Fragment, null, React.createElement(Image, {\n    imageData: post.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), React.createElement(\"h5\", {\n    className: \"pre-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"This post belongs to: \", post.user.username), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Date posted:\\xA0\", getDateString(post.publishDate))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    className: \"category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Category:\")), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, post.category ? post.category.title : 'No category assigned'), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Title:\")), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, post.title), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Description:\")), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, post.description), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    className: \"body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Detail:\"), React.createElement(\"p\", {\n    className: \"para\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, post.body)))), React.createElement(\"div\", {\n    className: \"form-group row-md-2 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn ml-2 btn-secondary\",\n    onClick: () => handleReturn(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Return\"), isLoading && React.createElement(\"span\", {\n    className: \"fa fa-circle-o-notch fa-spin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), isAuthenticated && !isLoading && (isAdministrator() || user.email === post.user.email) && React.createElement(Link, {\n    to: `/post/edit/${post.id}`,\n    className: \"btn ml-2 btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Edit Post\"), isAuthenticated && !isLoading && (isAdministrator() || user.email === post.user.email) && React.createElement(DeleteButton, {\n    message: deletePostMessage(post),\n    onClick: () => handleDeletePost(post.id),\n    className: \"btn ml-2 btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Delete\")))))));\n};\n\nexport default ViewPost;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/post/ViewPost.tsx"],"names":["React","useState","useEffect","Link","useParams","useNavigate","UserRole","toast","PostApiService","createActionLoading","createActionSessionExpired","useAuth","ListErrors","toLocalDateString","checkUnauthorized","checkForbidden","DeleteButton","Image","ViewPost","postId","state","isLoading","isAuthenticated","user","dispatch","post","setPost","errors","setErrors","navigate","isAdministrator","role","ADMIN","deletePostMessage","title","fetchData","getPostById","then","catch","apiErrors","handleFetchPostError","handleDeletePost","id","deletePost","handleDeletePostSucess","handleDeletePostError","success","error","handleReturn","getDateString","date","image","username","publishDate","category","description","body","email"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport { IPost, UserRole } from \"../../types\";\r\nimport { toast } from \"react-toastify\";\r\nimport { PostApiService } from \"../../services/api/PostApiService\";\r\nimport { createActionLoading, createActionSessionExpired } from '../../reducers/auth';\r\nimport useAuth from '../../contexts/auth';\r\nimport ListErrors from '../common/ListErrors';\r\nimport { IErrors } from '../../types';\r\nimport { toLocalDateString } from '../../utils/local.storage.utils';\r\nimport { checkUnauthorized, checkForbidden } from '../../utils/html.response.utils';\r\nimport DeleteButton from '../common/deleteConfirmation';\r\nimport Image from '../common/Image';\r\n\r\nconst ViewPost = () => {\r\n\r\n  const { postId } = useParams<{ postId: string }>();\r\n  const { state: { isLoading, isAuthenticated, user }, dispatch } = useAuth();\r\n  const [post, setPost] = useState<IPost>();\r\n  const [errors, setErrors] = React.useState<IErrors | null>();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const isAdministrator = () => isAuthenticated && user?.role === UserRole.ADMIN;\r\n  const deletePostMessage = (post: IPost) => `${post.title} post`;\r\n\r\n  useEffect(() => {\r\n    if (!post) {\r\n      const fetchData = async (): Promise<void> => {\r\n        dispatch(createActionLoading(true));\r\n        await PostApiService.getPostById(postId!)\r\n        .then((post) => setPost(post))\r\n        .catch((apiErrors: IErrors) => handleFetchPostError(apiErrors))\r\n        dispatch(createActionLoading(false));\r\n      }\r\n      fetchData();  \r\n    }\r\n  // eslint-disable-next-line\r\n  }, []);\r\n\r\n  \r\n  const handleDeletePost = async (id: string) => {\r\n    dispatch(createActionLoading(true));\r\n    await PostApiService.deletePost(id)\r\n     .then(() => handleDeletePostSucess())\r\n     .catch((apiErrors: IErrors) => handleDeletePostError(apiErrors))\r\n    dispatch(createActionLoading(false));\r\n    navigate('/');\r\n  }\r\n  const handleDeletePostSucess = () => {\r\n    toast.success(`Post deleted successfully...`);\r\n  }\r\n\r\n  const handleDeletePostError = (apiErrors: IErrors) => {\r\n    if (checkForbidden(apiErrors)) {\r\n      toast.error(`Post delete failed, session expired`);\r\n      dispatch(createActionSessionExpired());\r\n      navigate('/'); \r\n    } else if (checkUnauthorized(apiErrors)) {\r\n      toast.error(`Access denied`);\r\n    } else {\r\n      toast.error(`Post delete failed, see error list`);\r\n      setErrors(apiErrors);      \r\n    }\r\n  }\r\n\r\n  const handleFetchPostError = (apiErrors: IErrors) => {\r\n    toast.error(`Post reading failed, see error list`);\r\n    setErrors(apiErrors);\r\n  }\r\n\r\n  const handleReturn = () => {\r\n    navigate('/');  \r\n  }\r\n\r\n  const getDateString = (date: Date): string => {\r\n    if (date) {\r\n      return toLocalDateString(date)!;\r\n    } else {\r\n      return \"no date provided\"\r\n    }\r\n  }\r\n\r\n    return (\r\n        <section className=\"post-area\">\r\n        {errors && <ListErrors errors={errors} />}\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-1 col-md-0\" />\r\n            <div className=\"col-lg-10 col-md-12\">\r\n              {post && \r\n              (\r\n                <div className=\"main-post\">\r\n                    <div className=\"post-top-area\">\r\n                    { post.image && \r\n                      <>\r\n                        <Image imageData={post.image}/> \r\n                        <br/>\r\n                      </>\r\n                    }  \r\n                    <h5 className=\"pre-title\">This post belongs to: {post.user!.username}</h5>\r\n                      <div>\r\n                        <br/>\r\n                        <h4 className=\"title\">\r\n                          <span>\r\n                            Date posted:&nbsp;{getDateString(post.publishDate!)}\r\n                          </span>\r\n                        </h4>\r\n                        <br/>\r\n                        <h4 className=\"category\">\r\n                          <span>\r\n                            Category:\r\n                          </span>\r\n                        </h4>\r\n                        <h5>{post.category ? post.category.title : 'No category assigned'}</h5>\r\n                        <br/>\r\n                       <h4 className=\"title\">\r\n                          <span>\r\n                            Title:\r\n                          </span>\r\n                        </h4>\r\n                        <h5>{post.title}</h5>\r\n                        <br/>\r\n                        <h4 className=\"description\">\r\n                          <span>\r\n                            Description:\r\n                          </span>\r\n                        </h4>\r\n                        <h5>{post.description}</h5>\r\n                        <br/>\r\n                        <h4 className=\"body\">\r\n                          <span>\r\n                            Detail: \r\n                          </span>\r\n                          <p className=\"para\">\r\n                            {post.body}\r\n                          </p>\r\n                        </h4>\r\n                       </div>\r\n                  </div>\r\n                  <div className=\"form-group row-md-2 pull-right\">\r\n                    <button className=\"btn ml-2 btn-secondary\"  onClick={ () => handleReturn() } >\r\n                      Return\r\n                    </button>\r\n                    {isLoading &&\r\n                      <span className=\"fa fa-circle-o-notch fa-spin\" />\r\n                    }\r\n                    {\r\n                      isAuthenticated && !isLoading && (isAdministrator() || user!.email === post.user!.email) &&\r\n                      (\r\n                        <Link to={`/post/edit/${post.id}`} className=\"btn ml-2 btn-primary\">Edit Post</Link>                  \r\n                      )\r\n                    }\r\n                    {\r\n                      isAuthenticated && !isLoading && (isAdministrator() || user!.email === post.user!.email) && \r\n                      (               \r\n                          <DeleteButton message={deletePostMessage(post)} onClick={() => handleDeletePost(post.id!)} className=\"btn ml-2 btn-danger\">Delete</DeleteButton>\r\n                      )\r\n                    }\r\n                  </div>\r\n                </div>               \r\n                )           \r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n}\r\n\r\nexport default ViewPost;"]},"metadata":{},"sourceType":"module"}
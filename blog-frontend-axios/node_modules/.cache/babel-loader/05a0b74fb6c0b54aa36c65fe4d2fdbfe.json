{"ast":null,"code":"import _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\contexts\\\\auth.tsx\";\nimport React from 'react';\nimport { authReducer, initialState, createActionLogin, createActionLogout } from '../reducers/auth';\nimport { getLocalStorageValue } from '../utils/utils';\nimport { TOKEN_KEY, setToken, isTokenValid } from '../services/api/APIUtils';\nimport AUTHAPI from '../services/api/AuthAPI';\nconst AuthContext = React.createContext({\n  state: initialState,\n  dispatch: () => initialState\n});\nexport function AuthProvider(props) {\n  const _React$useReducer = React.useReducer(authReducer, initialState),\n        _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n        state = _React$useReducer2[0],\n        dispatch = _React$useReducer2[1];\n\n  React.useEffect(() => {\n    const token = getLocalStorageValue(TOKEN_KEY);\n    if (!token) return;\n\n    if (isTokenValid(token)) {\n      setToken(token);\n      dispatch(createActionLogin());\n    } else {\n      dispatch(createActionLogout());\n      AUTHAPI.logout();\n    }\n  }, []);\n  return React.createElement(AuthContext.Provider, Object.assign({\n    value: {\n      state,\n      dispatch\n    }\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n}\nexport default function useAuth() {\n  return React.useContext(AuthContext);\n}","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/contexts/auth.tsx"],"names":["React","authReducer","initialState","createActionLogin","createActionLogout","getLocalStorageValue","TOKEN_KEY","setToken","isTokenValid","AUTHAPI","AuthContext","createContext","state","dispatch","AuthProvider","props","useReducer","useEffect","token","logout","useAuth","useContext"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,WADF,EAEEC,YAFF,EAKEC,iBALF,EAMEC,kBANF,QAOO,kBAPP;AAQA,SAASC,oBAAT,QAAqC,gBAArC;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,YAA9B,QAAkD,0BAAlD;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAOA,MAAMC,WAAW,GAAGV,KAAK,CAACW,aAAN,CAAsC;AACxDC,EAAAA,KAAK,EAAEV,YADiD;AAExDW,EAAAA,QAAQ,EAAE,MAAMX;AAFwC,CAAtC,CAApB;AAKA,OAAO,SAASY,YAAT,CAAsBC,KAAtB,EAA0D;AAAA,4BACrCf,KAAK,CAACgB,UAAN,CAAiBf,WAAjB,EAA8BC,YAA9B,CADqC;AAAA;AAAA,QACxDU,KADwD;AAAA,QACjDC,QADiD;;AAE/Db,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AACpB,UAAMC,KAAK,GAAGb,oBAAoB,CAACC,SAAD,CAAlC;AAEA,QAAI,CAACY,KAAL,EAAY;;AAEZ,QAAIV,YAAY,CAACU,KAAD,CAAhB,EAAyB;AACvBX,MAAAA,QAAQ,CAACW,KAAD,CAAR;AACAL,MAAAA,QAAQ,CAACV,iBAAiB,EAAlB,CAAR;AACD,KAHD,MAGO;AACLU,MAAAA,QAAQ,CAACT,kBAAkB,EAAnB,CAAR;AACAK,MAAAA,OAAO,CAACU,MAAR;AACD;AACF,GAZD,EAYG,EAZH;AAcA,SAAO,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEP,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAA7B,KAAsDE,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;AAED,eAAe,SAASK,OAAT,GAAmB;AAChC,SAAOpB,KAAK,CAACqB,UAAN,CAAiBX,WAAjB,CAAP;AACD","sourcesContent":["import React from 'react';\r\nimport {\r\n  authReducer,\r\n  initialState,\r\n  AuthAction,\r\n  AuthState,\r\n  createActionLogin,\r\n  createActionLogout\r\n} from '../reducers/auth';\r\nimport { getLocalStorageValue } from '../utils/utils';\r\nimport { TOKEN_KEY, setToken, isTokenValid } from '../services/api/APIUtils';\r\nimport AUTHAPI from '../services/api/AuthAPI';\r\n\r\ntype AuthContextProps = {\r\n  state: AuthState;\r\n  dispatch: React.Dispatch<AuthAction>;\r\n};\r\n\r\nconst AuthContext = React.createContext<AuthContextProps>({\r\n  state: initialState,\r\n  dispatch: () => initialState,\r\n});\r\n\r\nexport function AuthProvider(props: React.PropsWithChildren<{}>) {\r\n  const [state, dispatch] = React.useReducer(authReducer, initialState);\r\n  React.useEffect(() => {\r\n    const token = getLocalStorageValue(TOKEN_KEY);\r\n\r\n    if (!token) return;\r\n\r\n    if (isTokenValid(token)) {\r\n      setToken(token);\r\n      dispatch(createActionLogin());\r\n    } else {\r\n      dispatch(createActionLogout());\r\n      AUTHAPI.logout();\r\n    }\r\n  }, []);\r\n\r\n  return <AuthContext.Provider value={{ state, dispatch }} {...props} />;\r\n}\r\n\r\nexport default function useAuth() {\r\n  return React.useContext(AuthContext);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
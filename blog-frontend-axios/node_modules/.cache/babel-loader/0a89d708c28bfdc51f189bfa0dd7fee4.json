{"ast":null,"code":"import _objectSpread from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\Login.tsx\";\nimport React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport AUTHAPI from '../services/api/AuthAPI';\nimport useAuth from '../contexts/auth';\nimport { toast } from \"react-toastify\";\nimport * as Yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { createActionLoadUser, createActionLoading } from '../reducers/auth';\nimport ListErrors from './common/ListErrors';\n\nconst Login = () => {\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        errorList = _React$useState2[0],\n        setErrorList = _React$useState2[1];\n\n  const _useAuth = useAuth(),\n        isLoading = _useAuth.state.isLoading,\n        dispatch = _useAuth.dispatch;\n\n  const navigate = useNavigate();\n\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        form = _useState2[0],\n        setForm = _useState2[1];\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().required('Email is required'),\n    password: Yup.string().required('Password is required')\n  });\n\n  const handleChange = event => {\n    setForm(_objectSpread({}, form, {\n      [event.currentTarget.name]: event.currentTarget.value\n    }));\n  };\n\n  const _useForm = useForm({\n    resolver: yupResolver(validationSchema)\n  }),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        reset = _useForm.reset,\n        errors = _useForm.formState.errors;\n\n  const onSubmit = async data => {\n    dispatch(createActionLoading(true));\n    await AUTHAPI.login(data.email, data.password).then(user => {\n      toast.info(`${user.username} is logged in`);\n      dispatch(createActionLoadUser(user));\n      navigate('/');\n    }).catch(apiErrors => {\n      toast.error(`Login failed, see error list`);\n      setErrorList(apiErrors);\n    });\n    dispatch(createActionLoading(false));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"auth-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6 offset-md-3 col-xs-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"text-xs-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Log in\"), React.createElement(\"p\", {\n    className: \"text-xs-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Need an account?\")), errorList && React.createElement(ListErrors, {\n    errors: errorList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({\n    name: \"email\",\n    type: \"email\",\n    value: form.email,\n    placeholder: \"Email\"\n  }, register('email'), {\n    className: `form-control ${errors.fullname ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }))), React.createElement(\"fieldset\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"password\",\n    className: \"form-control form-control-lg\",\n    type: \"password\",\n    value: form.password,\n    placeholder: \"Password\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btn btn-lg btn-primary pull-xs-right\",\n    type: \"submit\",\n    disabled: isLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Log In\"))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/Login.tsx"],"names":["React","useState","useForm","Link","useNavigate","AUTHAPI","useAuth","toast","Yup","yupResolver","createActionLoadUser","createActionLoading","ListErrors","Login","errorList","setErrorList","isLoading","state","dispatch","navigate","email","password","form","setForm","validationSchema","object","shape","string","required","handleChange","event","currentTarget","name","value","resolver","register","handleSubmit","reset","errors","formState","onSubmit","data","login","then","user","info","username","catch","apiErrors","error","fullname"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport AUTHAPI from '../services/api/AuthAPI';\r\nimport useAuth from '../contexts/auth';\r\nimport { toast } from \"react-toastify\";\r\nimport * as Yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { createActionLoadUser, createActionLoading } from '../reducers/auth';\r\nimport ListErrors from './common/ListErrors';\r\nimport { IErrors } from '../types';\r\n\r\nconst Login = () => {\r\n  const [errorList, setErrorList] = React.useState<IErrors | null>();\r\n\r\n  const {\r\n    state: { isLoading },\r\n    dispatch,\r\n  } = useAuth();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [form, setForm] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().required('Email is required'),\r\n    password: Yup.string().required('Password is required')\r\n  });\r\n\r\n  const handleChange = (event: React.FormEvent<HTMLInputElement>) => {\r\n    setForm({\r\n      ...form,\r\n      [event.currentTarget.name]: event.currentTarget.value,\r\n    });\r\n  };\r\n  \r\n  type LoginSubmitForm = {\r\n    email: string;\r\n    password: string;\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors }\r\n  } = useForm<LoginSubmitForm>({\r\n    resolver: yupResolver(validationSchema)\r\n  });\r\n\r\n\r\n  const onSubmit = async (data: LoginSubmitForm) => {\r\n    dispatch(createActionLoading(true));\r\n    await AUTHAPI.login(data.email, data.password)\r\n      .then(\r\n        (user) => {\r\n          toast.info(`${user.username} is logged in`);\r\n          dispatch(createActionLoadUser(user));\r\n          navigate('/');    \r\n        }\r\n      )\r\n      .catch((apiErrors: IErrors) => {\r\n        toast.error(`Login failed, see error list`);\r\n        setErrorList(apiErrors);\r\n      });\r\n    dispatch(createActionLoading(false));\r\n  } \r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <div className=\"container page\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3 col-xs-12\">\r\n            <h1 className=\"text-xs-center\">Log in</h1>\r\n            <p className=\"text-xs-center\">\r\n              <Link to=\"/register\">Need an account?</Link>\r\n            </p>\r\n            {errorList && <ListErrors errors={errorList} />}\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <fieldset className=\"form-group\">\r\n                <input\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={form.email}\r\n                  placeholder=\"Email\"\r\n                  {...register('email')}\r\n                  className={`form-control ${errors.fullname ? 'is-invalid' : ''}`} \r\n                />\r\n              </fieldset>\r\n              <fieldset className=\"form-group\">\r\n                <input\r\n                  name=\"password\"\r\n                  className=\"form-control form-control-lg\"\r\n                  type=\"password\"\r\n                  value={form.password}\r\n                  placeholder=\"Password\"\r\n                  onChange={handleChange}\r\n                />\r\n              </fieldset>\r\n              <button\r\n                className=\"btn btn-lg btn-primary pull-xs-right\"\r\n                type=\"submit\"\r\n                disabled={isLoading}\r\n              >\r\n                Log In\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}
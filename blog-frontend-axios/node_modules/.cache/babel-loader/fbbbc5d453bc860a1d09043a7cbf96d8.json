{"ast":null,"code":"import _objectSpread from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\user\\\\CreateUser.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\nimport * as Yup from 'yup';\nimport CancelButton from '../common/cancelConfirmation';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { UserApiService } from \"../../services/api/UserApiService\";\nimport { createActionLoading } from '../../reducers/auth';\nimport useAuth from '../../contexts/auth';\nimport ListErrors from '../common/ListErrors';\nimport { minimumPasswordLength, minimumEmailLength, minimumUserNameLength } from '../../types';\nimport { checkUnauthorized, checkSessionExpired, checkForbidden, checkTimeout } from '../../utils/html.response.utils';\nimport { createActionSessionExpired } from '../../reducers/auth';\nimport ImageUpload from '../common/ImageUpload';\nimport Image from '../common/Image';\nimport ImageResize from '../common/ImageResize';\nimport { resizeImage } from '../../utils/image.utils';\n\nconst CreateUser = () => {\n  var _errors$username, _errors$email, _errors$password, _errors$password2, _errors$role;\n\n  const navigate = useNavigate();\n\n  const _useAuth = useAuth(),\n        dispatch = _useAuth.dispatch;\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        errorList = _React$useState2[0],\n        setErrorList = _React$useState2[1];\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        userImage = _useState2[0],\n        setUserImage = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userDefaultImage = _useState4[0],\n        setuserDefaultImage = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        submitForm = _useState6[0],\n        setSubmitForm = _useState6[1];\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('User name is required').min(minimumUserNameLength, `User name must be at least ${minimumUserNameLength} characters long`),\n    email: Yup.string().required('Email is required').min(minimumEmailLength, `Email must be at least ${minimumEmailLength} characters long`),\n    password: Yup.string().required('Password is required').min(minimumPasswordLength, `Password must be at least ${minimumPasswordLength} characters long`),\n    confirm_password: Yup.string().required('Confirmation password is required').min(minimumPasswordLength, `Password must be at least ${minimumPasswordLength} characters long`),\n    role: Yup.string().required('Role is required'),\n    imageChanged: Yup.bool()\n  });\n  const defaultValues = {\n    username: '',\n    email: '',\n    password: '',\n    role: '',\n    imageChanged: false\n  };\n  useEffect(() => {\n    if (!userDefaultImage) {\n      const fetchData = async () => {\n        dispatch(createActionLoading(true));\n        await getDefaultUserImage().then(imageData => {\n          setuserDefaultImage(imageData);\n        }).catch(error => {\n          throw new Error(error);\n        }).finally(() => dispatch(createActionLoading(false)));\n      };\n\n      fetchData();\n    } // eslint-disable-next-line\n\n  }, []);\n  const imageMaxSize = {\n    maxWidth: 200,\n    maxHeight: 200\n  };\n\n  const UserImage = () => {\n    if (userImage) {\n      return React.createElement(ImageResize, {\n        imageData: userImage,\n        resize: imageMaxSize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    } else {\n      return userDefaultImage && React.createElement(Image, {\n        imageData: userDefaultImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    }\n  };\n\n  const getDefaultUserImage = () => {\n    return resizeImage('/default-profil-image.jpg', 'image/jpg', imageMaxSize.maxWidth, imageMaxSize.maxHeight);\n  };\n\n  const _useForm = useForm({\n    resolver: yupResolver(validationSchema),\n    defaultValues: defaultValues\n  }),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        _useForm$formState = _useForm.formState,\n        errors = _useForm$formState.errors,\n        isDirty = _useForm$formState.isDirty,\n        reset = _useForm.reset,\n        setValue = _useForm.setValue;\n\n  const onSubmit = async data => {\n    if (submitForm) {\n      dispatch(createActionLoading(true));\n      const image = userImage;\n\n      const userData = _objectSpread({}, data, {\n        image\n      });\n\n      await UserApiService.createUser(userData).then(() => {\n        handleSubmitFormSuccess();\n      }).catch(apiErrors => {\n        handleSubmitFormError(apiErrors);\n      }).finally(() => dispatch(createActionLoading(false)));\n    }\n  };\n\n  const handleApiErrors = (apiErrors, process) => {\n    if (checkSessionExpired(apiErrors)) {\n      toast.error(`${process} failed, session expired`);\n      dispatch(createActionSessionExpired());\n    } else if (checkForbidden(apiErrors)) {\n      const message = apiErrors['message'];\n      toast.error(`${process} failed: ${message}`);\n    } else if (checkUnauthorized(apiErrors)) {\n      toast.error('Access denied');\n    } else if (checkTimeout(apiErrors)) {\n      toast.error(`Request timeout`);\n    } else {\n      toast.error(`${process} failed, see error list`);\n      setErrorList(apiErrors);\n    }\n  };\n\n  const handleSubmitForm = () => {\n    setSubmitForm(true);\n  };\n\n  const handleSubmitFormSuccess = () => {\n    toast.success(`User created successfully...`);\n    navigate('/user');\n  };\n\n  const handleSubmitFormError = apiErrors => {\n    handleApiErrors(apiErrors, 'Creation');\n  };\n\n  const cancelCreateUserMessage = () => `User creation and loose changes`;\n\n  const handleClearCreateUser = () => {\n    setUserImage(undefined);\n    reset(defaultValues, {\n      keepDirty: false\n    });\n  };\n\n  const handleCancelCreateUser = () => {\n    navigate('/user');\n  };\n\n  const handleRoleSelect = e => {\n    setValue('role', e);\n  };\n\n  const handleImageUpload = image => {\n    setUserImage(image);\n    setValue('imageChanged', true, {\n      shouldDirty: true\n    });\n  };\n\n  const handleImageUploadError = error => {\n    toast.error(`User image upload failed`);\n  };\n\n  const handleDeleteImage = () => {\n    setUserImage(undefined);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-12 form-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \" Create User \"), errorList && React.createElement(ListErrors, {\n    errors: errorList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    id: \"create-user-form\",\n    onSubmit: handleSubmit(onSubmit),\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"col-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \" Image: \"), userImage && React.createElement(\"button\", {\n    className: \"btn btn-secondary col-md-3\",\n    onClick: () => handleDeleteImage(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Delete Image\"), React.createElement(ImageUpload, {\n    onImageUpload: handleImageUpload,\n    onImageUploadError: handleImageUploadError,\n    resize: imageMaxSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, UserImage(), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \" Enter user name \"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter user name\"\n  }, register('username'), {\n    className: `form-control ${errors.username ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \" Enter email \"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter email\"\n  }, register('email'), {\n    className: `form-control ${errors.email ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, \" Enter password \"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter password\"\n  }, register('password'), {\n    className: `form-control ${errors.password ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"confirm_password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \" Enter password again\"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter password\"\n  }, register('confirm_password'), {\n    className: `form-control ${errors.password ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, (_errors$password2 = errors.password) === null || _errors$password2 === void 0 ? void 0 : _errors$password2.message)), React.createElement(\"div\", {\n    className: \"form-group \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(DropdownButton, {\n    title: \"Select Role\",\n    onSelect: handleRoleSelect,\n    className: \"col-md-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    eventKey: \"user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"User\"), React.createElement(Dropdown.Item, {\n    eventKey: \"admin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, \"Admin\")), React.createElement(\"input\", Object.assign({\n    style: {\n      float: 'right'\n    },\n    type: \"text\",\n    disabled: true,\n    placeholder: \"no role selected\"\n  }, register('role'), {\n    className: `col-md-1 form-control float-right ${errors.role ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, (_errors$role = errors.role) === null || _errors$role === void 0 ? void 0 : _errors$role.message)), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-lg-10 col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group row-md-5 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, React.createElement(CancelButton, {\n    prompt: isDirty,\n    message: cancelCreateUserMessage(),\n    onClick: () => handleCancelCreateUser(),\n    className: \"btn ml-2 btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(\"button\", {\n    className: \"btn ml-2 btn-secondary\",\n    disabled: !isDirty,\n    onClick: () => handleClearCreateUser(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, \"Reset\"), React.createElement(\"button\", {\n    className: \"btn ml-2 btn-success\",\n    disabled: !isDirty,\n    onClick: () => handleSubmitForm(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, \"Create\")))))));\n};\n\nexport default CreateUser;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/user/CreateUser.tsx"],"names":["React","useState","useEffect","useForm","useNavigate","toast","DropdownButton","Dropdown","Yup","CancelButton","yupResolver","UserApiService","createActionLoading","useAuth","ListErrors","minimumPasswordLength","minimumEmailLength","minimumUserNameLength","checkUnauthorized","checkSessionExpired","checkForbidden","checkTimeout","createActionSessionExpired","ImageUpload","Image","ImageResize","resizeImage","CreateUser","navigate","dispatch","errorList","setErrorList","userImage","setUserImage","userDefaultImage","setuserDefaultImage","submitForm","setSubmitForm","validationSchema","object","shape","username","string","required","min","email","password","confirm_password","role","imageChanged","bool","defaultValues","fetchData","getDefaultUserImage","then","imageData","catch","error","Error","finally","imageMaxSize","maxWidth","maxHeight","UserImage","resolver","register","handleSubmit","formState","errors","isDirty","reset","setValue","onSubmit","data","image","userData","createUser","handleSubmitFormSuccess","apiErrors","handleSubmitFormError","handleApiErrors","process","message","handleSubmitForm","success","cancelCreateUserMessage","handleClearCreateUser","undefined","keepDirty","handleCancelCreateUser","handleRoleSelect","e","handleImageUpload","shouldDirty","handleImageUploadError","handleDeleteImage","float"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from \"react-toastify\";\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport * as Yup from 'yup';\r\nimport CancelButton from '../common/cancelConfirmation'\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { UserApiService } from \"../../services/api/UserApiService\";\r\nimport { createActionLoading } from '../../reducers/auth';\r\nimport useAuth from '../../contexts/auth';\r\nimport ListErrors from '../common/ListErrors';\r\nimport { IErrors, minimumPasswordLength, minimumEmailLength, minimumUserNameLength,\r\n          ImageSizeProps, ImageData } from '../../types';\r\nimport { checkUnauthorized, checkSessionExpired, checkForbidden, checkTimeout } from '../../utils/html.response.utils';\r\nimport { createActionSessionExpired } from '../../reducers/auth';\r\nimport ImageUpload from '../common/ImageUpload';\r\nimport Image from '../common/Image';\r\nimport ImageResize from '../common/ImageResize';\r\nimport { resizeImage } from '../../utils/image.utils';\r\n\r\nconst CreateUser = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const { dispatch } = useAuth();\r\n  const [errorList, setErrorList] = React.useState<IErrors | null>();\r\n  const [userImage, setUserImage] = useState<ImageData>();\r\n  const [userDefaultImage, setuserDefaultImage] = useState<ImageData>();\r\n  const [submitForm, setSubmitForm] = useState<boolean>(false);\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string().required('User name is required')\r\n      .min(minimumUserNameLength, `User name must be at least ${minimumUserNameLength} characters long`),\r\n    email: Yup.string().required('Email is required')\r\n      .min(minimumEmailLength, `Email must be at least ${minimumEmailLength} characters long`),\r\n    password: Yup.string().required('Password is required')\r\n      .min(minimumPasswordLength, `Password must be at least ${minimumPasswordLength} characters long`),\r\n    confirm_password: Yup.string().required('Confirmation password is required')\r\n      .min(minimumPasswordLength, `Password must be at least ${minimumPasswordLength} characters long`),\r\n    role: Yup.string().required('Role is required'),\r\n    imageChanged: Yup.bool(),\r\n  });\r\n\r\n  type CreateSubmitForm = {\r\n    username: string;\r\n    email: string;\r\n    password: string;\r\n    confirm_password: string;\r\n    role: string;\r\n    imageChanged: boolean;\r\n  };\r\n\r\n  const defaultValues = {username: '', email: '', password: '', role: '', imageChanged: false};\r\n\r\n  useEffect(() => {\r\n    if (!userDefaultImage) {\r\n      const fetchData = async (): Promise<void> => {\r\n        dispatch(createActionLoading(true));\r\n        await getDefaultUserImage()\r\n        .then(imageData => { \r\n          setuserDefaultImage(imageData);\r\n        }) \r\n        .catch(error => {\r\n          throw new Error(error);\r\n        })\r\n        .finally(() => dispatch(createActionLoading(false)));\r\n      }\r\n      fetchData();      \r\n    }\r\n  // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const imageMaxSize: ImageSizeProps = {maxWidth:200, maxHeight:200}\r\n\r\n  const UserImage = () => {\r\n    if(userImage) {\r\n      return <ImageResize imageData={userImage} resize={imageMaxSize}/>;\r\n    }  else {\r\n      return  userDefaultImage && <Image imageData={userDefaultImage}/> \r\n    }\r\n  }\r\n\r\n  const getDefaultUserImage = (): Promise<ImageData> => {\r\n    return resizeImage('/default-profil-image.jpg', 'image/jpg', imageMaxSize.maxWidth, imageMaxSize.maxHeight);\r\n  }\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isDirty },\r\n    reset,\r\n    setValue,\r\n  } = useForm<CreateSubmitForm>({\r\n    resolver: yupResolver(validationSchema),\r\n    defaultValues: defaultValues\r\n  });\r\n\r\n  const onSubmit = async (data: CreateSubmitForm) => {\r\n    if (submitForm) {\r\n      dispatch(createActionLoading(true));\r\n      const image: ImageData | undefined = userImage;\r\n      const userData = {...data, image};\r\n      await UserApiService.createUser(userData)\r\n      .then(() => { handleSubmitFormSuccess(); })\r\n      .catch((apiErrors: IErrors) =>  { handleSubmitFormError(apiErrors); })\r\n      .finally(() => dispatch(createActionLoading(false)));\r\n    }\r\n  } \r\n\r\n  const handleApiErrors = (apiErrors: IErrors, process: string) => {\r\n    if (checkSessionExpired(apiErrors)) {\r\n      toast.error(`${process} failed, session expired`);\r\n      dispatch(createActionSessionExpired());\r\n    } else if (checkForbidden(apiErrors)) {\r\n      const message = apiErrors['message'];\r\n      toast.error(`${process} failed: ${message}`);   \r\n    } else if (checkUnauthorized(apiErrors)) {\r\n      toast.error('Access denied');\r\n    } else if (checkTimeout(apiErrors)) {\r\n      toast.error(`Request timeout`);\r\n    } else {\r\n      toast.error(`${process} failed, see error list`);\r\n      setErrorList(apiErrors);      \r\n    }\r\n  }\r\n  \r\n  const handleSubmitForm = () => {\r\n    setSubmitForm(true);\r\n  }\r\n\r\n  const handleSubmitFormSuccess = () => {\r\n    toast.success(`User created successfully...`);\r\n    navigate('/user');\r\n  }\r\n\r\n  const handleSubmitFormError = (apiErrors: IErrors) => {\r\n    handleApiErrors(apiErrors, 'Creation');\r\n  }\r\n\r\n  const cancelCreateUserMessage = () => `User creation and loose changes`;\r\n\r\n  const handleClearCreateUser = () => {\r\n    setUserImage(undefined);\r\n    reset(defaultValues, { keepDirty: false});\r\n  }\r\n\r\n  const handleCancelCreateUser = () => {\r\n    navigate('/user');   \r\n  };\r\n\r\n  const handleRoleSelect=(e: any)=>{\r\n      setValue('role', e);\r\n  }\r\n\r\n  const handleImageUpload = (image: ImageData) => {\r\n    setUserImage(image);\r\n    setValue('imageChanged', true, {shouldDirty: true});\r\n  }\r\n\r\n  const handleImageUploadError = (error: any) => {\r\n    toast.error(`User image upload failed`);\r\n  }\r\n  \r\n  const handleDeleteImage = () => {\r\n    setUserImage(undefined);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={\"col-md-12 form-wrapper\"}>\r\n        <h2> Create User </h2>\r\n        {errorList && <ListErrors errors={errorList} />}\r\n        <form id={\"create-user-form\"} onSubmit={handleSubmit(onSubmit)} noValidate={true}>\r\n          <div className=\"form-group col-md-4\">\r\n            <div className=\"row\">\r\n              <label className=\"col-md-2\"> Image: </label>\r\n              { userImage && \r\n              (\r\n                <button className=\"btn btn-secondary col-md-3\"  onClick={ () => handleDeleteImage() } >\r\n                  Delete Image\r\n                </button>  \r\n              )\r\n              }  \r\n              <ImageUpload onImageUpload={handleImageUpload} onImageUploadError={handleImageUploadError} resize={imageMaxSize}/>                \r\n              </div>\r\n          </div>\r\n          <div className=\"form-group col-md-12\">\r\n            {UserImage()}  \r\n            <br/>\r\n\r\n            <label htmlFor=\"username\"> Enter user name </label>\r\n            <input \r\n              type=\"text\"\r\n              placeholder=\"Enter user name\"\r\n              {...register('username')}\r\n              className={`form-control ${errors.username ? 'is-invalid' : ''}`} \r\n            />\r\n            <div className=\"invalid-feedback\">{errors.username?.message}</div>\r\n          </div>\r\n\r\n          <div className=\"form-group col-md-12\">\r\n            <label htmlFor=\"email\"> Enter email </label>\r\n            <input \r\n              type=\"text\" \r\n              placeholder=\"Enter email\"\r\n              {...register('email')}\r\n              className={`form-control ${errors.email ? 'is-invalid' : ''}`} \r\n            />\r\n            <div className=\"invalid-feedback\">{errors.email?.message}</div>\r\n          </div>\r\n\r\n          <div className=\"form-group col-md-12\">\r\n            <label htmlFor=\"password\"> Enter password </label>\r\n            <input \r\n              type=\"text\" \r\n              placeholder=\"Enter password\" \r\n              {...register('password')}\r\n              className={`form-control ${errors.password ? 'is-invalid' : ''}`}           \r\n            />\r\n            <div className=\"invalid-feedback\">{errors.password?.message}</div>\r\n          </div>\r\n\r\n          <div className=\"form-group col-md-12\">\r\n            <label htmlFor=\"confirm_password\"> Enter password again</label>\r\n            <input \r\n              type=\"text\" \r\n              placeholder=\"Enter password\" \r\n              {...register('confirm_password')}\r\n              className={`form-control ${errors.password ? 'is-invalid' : ''}`}           \r\n            />\r\n            <div className=\"invalid-feedback\">{errors.password?.message}</div>\r\n          </div>\r\n\r\n          <div className=\"form-group \">\r\n            <div className=\"row\">\r\n              <DropdownButton title=\"Select Role\" onSelect={handleRoleSelect} className=\"col-md-1\">\r\n                  <Dropdown.Item eventKey='user'>User</Dropdown.Item>\r\n                  <Dropdown.Item eventKey='admin'>Admin</Dropdown.Item>\r\n              </DropdownButton>\r\n              <input \r\n                style={{float: 'right'}}    \r\n                type=\"text\" \r\n                disabled  \r\n                placeholder=\"no role selected\" \r\n                {...register('role')}\r\n                className={`col-md-1 form-control float-right ${errors.role ? 'is-invalid' : ''}`}           \r\n              />\r\n            </div>\r\n            <div className=\"invalid-feedback\">{errors.role?.message}</div>\r\n          </div>\r\n          <div className=\"row\">\r\n          <div className=\"col-lg-10 col-md-12\">\r\n            <div className=\"form-group row-md-5 pull-right\">\r\n                <CancelButton prompt={isDirty} message={cancelCreateUserMessage()} onClick={() => handleCancelCreateUser()} className=\"btn ml-2 btn-danger\">Cancel</CancelButton>\r\n                <button className=\"btn ml-2 btn-secondary\" disabled={!isDirty} onClick={ () => handleClearCreateUser() } >\r\n                  Reset\r\n                </button>\r\n                <button className=\"btn ml-2 btn-success\" disabled={!isDirty} onClick={ () => handleSubmitForm()}>\r\n                  Create\r\n                </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  );\r\n\r\n}\r\nexport default CreateUser\r\n"]},"metadata":{},"sourceType":"module"}
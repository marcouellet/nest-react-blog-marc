{"ast":null,"code":"var _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\routes\\\\PrivateRoutes.tsx\";\nimport * as React from \"react\";\nimport useAuth from '../contexts/auth';\nimport { Route } from \"react-router-dom\";\nimport UserProfile from \"../components/user/UserProfile\";\nimport CreatePost from \"../components/post/CreatePost\";\nimport EditPost from \"../components/post/EditPost\";\n\nconst PrivateRoutes = () => {\n  const _useAuth = useAuth(),\n        isAuthenticated = _useAuth.state.isAuthenticated;\n\n  if (!isAuthenticated) {\n    return React.createElement(React.Fragment, null);\n  }\n\n  return React.createElement(Route, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/user/profile\",\n    element: React.createElement(UserProfile, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/post/edit/:postId\",\n    element: React.createElement(EditPost, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/post/create\",\n    element: React.createElement(CreatePost, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n};\n\nexport default PrivateRoutes;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/routes/PrivateRoutes.tsx"],"names":["React","useAuth","Route","UserProfile","CreatePost","EditPost","PrivateRoutes","isAuthenticated","state"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAAmBC,KAAnB,QAAgC,kBAAhC;AAOA,OAAOC,WAAP,MAAwB,gCAAxB;AAIA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,QAAP,MAAqB,6BAArB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA,mBAEcL,OAAO,EAFrB;AAAA,QAERM,eAFQ,YAElBC,KAFkB,CAERD,eAFQ;;AAI1B,MAAI,CAACA,eAAL,EAAsB;AACpB,WAAO,yCAAP;AACD;;AAED,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAE,eAAb;AAA8B,IAAA,OAAO,EAAE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAE,oBAAb;AAAmC,IAAA,OAAO,EAAE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAE,cAAb;AAA6B,IAAA,OAAO,EAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CAfD;;AAiBA,eAAeD,aAAf","sourcesContent":["import * as React from \"react\";\r\nimport useAuth from '../contexts/auth';\r\nimport { Navigate, Route } from \"react-router-dom\";\r\n\r\nimport AdminUser from \"../components/admin/AdminUser\";\r\n\r\nimport ViewUser from \"../components/user/ViewUser\";\r\nimport CreateUser from \"../components/user/CreateUser\";\r\nimport EditUser from \"../components/user/EditUser\";\r\nimport UserProfile from \"../components/user/UserProfile\";\r\n\r\nimport CreateCategory from \"../components/category/CreateCategory\";\r\nimport EditCategory from \"../components/category/EditCategory\";\r\nimport CreatePost from \"../components/post/CreatePost\";\r\nimport EditPost from \"../components/post/EditPost\";\r\n\r\nconst PrivateRoutes = () => {\r\n\r\n  const { state : { isAuthenticated } } = useAuth();\r\n\r\n  if (!isAuthenticated) {\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <Route>\r\n      <Route path={\"/user/profile\"} element={<UserProfile/>} />\r\n      <Route path={\"/post/edit/:postId\"} element={<EditPost/>}/>\r\n      <Route path={\"/post/create\"} element={<CreatePost/>} />\r\n    </Route>\r\n   );\r\n}\r\n\r\nexport default PrivateRoutes;\r\n"]},"metadata":{},"sourceType":"module"}
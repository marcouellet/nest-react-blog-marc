{"ast":null,"code":"import _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\common\\\\displayModal.tsx\";\nimport React from 'react';\nimport { useModalContext } from \"../../contexts/modalContext\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst DisplayModalButton = ({\n  children,\n  contentToDisplay,\n  className,\n  onClick\n}) => {\n  const modalContext = useModalContext();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        isOpen = _React$useState2[0],\n        setIsOpen = _React$useState2[1];\n  /* \r\n      const handleOnClick = async (event: React.MouseEvent<HTMLButtonElement>) => {\r\n          await modalContext.showModal(contentToDisplay);\r\n          onClick && onClick(event);    \r\n      }; */\n\n\n  const showModal = () => {\n    setIsOpen(true); // onClick && onClick(event);    \n  };\n\n  const hideModal = () => {\n    setIsOpen(false);\n  };\n\n  return React.createElement(\"button\", {\n    className: className,\n    onClick: showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, children, React.createElement(Modal, {\n    show: isOpen,\n    onHide: hideModal,\n    centered: true,\n    dialogClassName: `modal-md`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, contentToDisplay)), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-default\",\n    onClick: hideModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Close\"))));\n};\n\nexport default DisplayModalButton;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/common/displayModal.tsx"],"names":["React","useModalContext","Modal","DisplayModalButton","children","contentToDisplay","className","onClick","modalContext","useState","isOpen","setIsOpen","showModal","hideModal"],"mappings":";;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAAQC,eAAR,QAA8B,6BAA9B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAMA,MAAMC,kBAAgD,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,gBAAX;AAA6BC,EAAAA,SAA7B;AAAwCC,EAAAA;AAAxC,CAAD,KAAsD;AAE3G,QAAMC,YAAY,GAAGP,eAAe,EAApC;;AAF2G,0BAI/ED,KAAK,CAACS,QAAN,CAAe,KAAf,CAJ+E;AAAA;AAAA,QAIpGC,MAJoG;AAAA,QAI5FC,SAJ4F;AAK/G;;;;;;;AAOI,QAAMC,SAAS,GAAG,MAAM;AACpBD,IAAAA,SAAS,CAAC,IAAD,CAAT,CADoB,CAEpB;AACH,GAHD;;AAKA,QAAME,SAAS,GAAG,MAAM;AACpBF,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GAFD;;AAIA,SACI;AAAQ,IAAA,SAAS,EAAEL,SAAnB;AAA8B,IAAA,OAAO,EAAEM,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,QADL,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEM,MAAb;AAAqB,IAAA,MAAM,EAAEG,SAA7B;AAAwC,IAAA,QAAQ,MAAhD;AAAiD,IAAA,eAAe,EAAG,UAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,gBADL,CADJ,CADJ,EAMQ,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,OAAO,EAAEQ,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,CANR,CAFJ,CADJ;AAeH,CApCD;;AAsCA,eAAeV,kBAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport {useModalContext} from \"../../contexts/modalContext\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\ntype DisplayButtonProps = React.HTMLProps<HTMLButtonElement> & {\r\n    contentToDisplay: string | JSX.Element,\r\n}\r\n\r\nconst DisplayModalButton: React.FC<DisplayButtonProps> = ({children, contentToDisplay, className, onClick}) => {\r\n\r\n    const modalContext = useModalContext();\r\n\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n/* \r\n    const handleOnClick = async (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        await modalContext.showModal(contentToDisplay);\r\n        onClick && onClick(event);    \r\n    }; */\r\n\r\n\r\n    const showModal = () => {\r\n        setIsOpen(true);\r\n        // onClick && onClick(event);    \r\n    };\r\n\r\n    const hideModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    return (\r\n        <button className={className} onClick={showModal}>\r\n            {children}\r\n            <Modal show={isOpen} onHide={hideModal} centered dialogClassName={`modal-md`}>\r\n                <Modal.Body>\r\n                    <div>\r\n                        {contentToDisplay} \r\n                    </div>                  \r\n                </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <button className=\"btn btn-default\" onClick={hideModal}>Close</button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default DisplayModalButton;"]},"metadata":{},"sourceType":"module"}
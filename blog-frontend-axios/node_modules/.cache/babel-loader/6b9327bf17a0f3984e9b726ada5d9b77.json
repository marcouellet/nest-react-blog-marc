{"ast":null,"code":"import _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\user\\\\ListUsers.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport useAuth from '../../contexts/auth';\nimport { readImageFileAsImageData } from '../../utils/image.utils';\nimport { createActionLoading, createActionSetUserNameFilter } from '../../reducers/auth';\nimport ListErrors from '../common/ListErrors';\nimport { UserApiService } from \"../../services/api/UserApiService\";\nimport { Table, Container } from 'react-bootstrap';\nimport ImageResize from '../common/ImageResize';\n\nconst ListPosts = () => {\n  const _useAuth = useAuth(),\n        _useAuth$state = _useAuth.state,\n        user = _useAuth$state.user,\n        isLoading = _useAuth$state.isLoading,\n        dispatch = _useAuth.dispatch;\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        errors = _React$useState2[0],\n        setErrors = _React$useState2[1];\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userNameFilter = _useState4[0],\n        setuserNameFilter = _useState4[1];\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      dispatch(createActionLoading(true));\n      UserApiService.findManyUsers(userNameFilter).then(users => setUsers(users)).catch(apiErrors => handleFetchUserError(apiErrors));\n      dispatch(createActionLoading(false));\n    };\n\n    fetchUsers();\n  }, [user]);\n\n  const handleFetchUserError = apiErrors => {\n    toast.error(`Users reading failed, see error list`);\n    setErrors(apiErrors);\n  };\n\n  const handleUserNameFilterChange = filter => {\n    setuserNameFilter(filter);\n    dispatch(createActionSetUserNameFilter(filter));\n  };\n\n  const getDefaultUserImage = () => {\n    return readImageFileAsImageData;\n  };\n\n  const defaultUserImage = getDefaultUserImage();\n  const imageMaxSize = {\n    maxWidth: 40,\n    maxHeight: 40\n  };\n  return React.createElement(\"section\", {\n    className: \"blog-area section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, errors && React.createElement(ListErrors, {\n    errors: errors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Container, {\n    className: \"col-md-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"col-md-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Filter:\")), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"userNameFilter\",\n    value: userNameFilter,\n    placeholder: \"enter some part of user name text\",\n    className: \"col-md-2\",\n    onChange: e => handleUserNameFilterChange(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))), !isLoading && users && users.map(user => React.createElement(\"div\", {\n    key: user.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    className: \"col-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    className: \"col-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    className: \"col-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"th\", {\n    className: \"col-md-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Role\"), React.createElement(\"th\", {\n    className: \"col-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Actions\")), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, user.image && React.createElement(ImageResize, {\n    imageData: user.image,\n    resize: imageMaxSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, user.username), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, user.email), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, user.role), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/User/${user.id}`,\n    className: \"btn btn-sm btn-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"View\"))))))));\n};\n\nexport default ListPosts;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/user/ListUsers.tsx"],"names":["React","useState","useEffect","Link","toast","useAuth","readImageFileAsImageData","createActionLoading","createActionSetUserNameFilter","ListErrors","UserApiService","Table","Container","ImageResize","ListPosts","state","user","isLoading","dispatch","errors","setErrors","users","setUsers","userNameFilter","setuserNameFilter","fetchUsers","findManyUsers","then","catch","apiErrors","handleFetchUserError","error","handleUserNameFilterChange","filter","getDefaultUserImage","defaultUserImage","imageMaxSize","maxWidth","maxHeight","e","target","value","map","id","image","username","email","role"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from \"react-toastify\";\r\nimport useAuth from '../../contexts/auth';\r\nimport { readImageFileAsImageData } from '../../utils/image.utils';\r\nimport { createActionLoading, createActionSetUserNameFilter } from '../../reducers/auth';\r\nimport ListErrors from '../common/ListErrors';\r\nimport { IUser, IErrors, ImageSizeProps, ImageData } from '../../types';\r\nimport { UserApiService } from \"../../services/api/UserApiService\";\r\nimport { Table, Container } from 'react-bootstrap';\r\nimport ImageResize from '../common/ImageResize';\r\n\r\nconst ListPosts = () => {\r\n\r\n  const { state: { user, isLoading }, dispatch } = useAuth();\r\n  const [errors, setErrors] = React.useState<IErrors | null>();\r\n  const [users, setUsers] = useState<IUser[]>([]);\r\n  const [userNameFilter, setuserNameFilter] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async (): Promise<void> => {\r\n      dispatch(createActionLoading(true));\r\n      UserApiService.findManyUsers(userNameFilter)\r\n        .then(users => setUsers(users))\r\n        .catch((apiErrors: IErrors) => handleFetchUserError(apiErrors));\r\n        dispatch(createActionLoading(false));\r\n    }\r\n    fetchUsers();\r\n  }, [user])\r\n \r\n  const handleFetchUserError = (apiErrors: IErrors) => {\r\n    toast.error(`Users reading failed, see error list`);\r\n    setErrors(apiErrors);\r\n  }\r\n\r\n  const handleUserNameFilterChange = (filter: string)=>{\r\n    setuserNameFilter(filter);\r\n    dispatch(createActionSetUserNameFilter(filter));\r\n  }\r\n\r\n  const getDefaultUserImage = (): ImageData => {\r\n    return readImageFileAsImageData\r\n  }\r\n  const defaultUserImage = getDefaultUserImage();\r\n\r\n  const imageMaxSize: ImageSizeProps = {maxWidth:40, maxHeight:40};\r\n\r\n  return (\r\n    <section className=\"blog-area section\">\r\n      {errors && <ListErrors errors={errors} />}\r\n      <Container  className=\"col-md-10\">\r\n        <div className=\"form-group \">\r\n          <div className=\"row\">\r\n            <h4 className=\"col-md-1\">\r\n              <span>\r\n                Filter:\r\n              </span>\r\n            </h4>\r\n            <input  \r\n              type=\"text\" \r\n              name=\"userNameFilter\" \r\n              value={userNameFilter} \r\n              placeholder=\"enter some part of user name text\" \r\n              className=\"col-md-2\" \r\n              onChange={e => handleUserNameFilterChange(e.target.value)}      \r\n            />\r\n          </div>\r\n        </div>\r\n        {\r\n          !isLoading && users && users.map((user: IUser) =>    \r\n          (\r\n            <div key={user.id}>\r\n              <Table striped bordered hover>\r\n                <thead>\r\n                  <th className=\"col-auto\"/>\r\n                  <th className=\"col-md-2\">\r\n                      Name\r\n                  </th>\r\n                  <th className=\"col-md-2\">\r\n                      Email\r\n                  </th>\r\n                  <th className=\"col-md-10\">\r\n                    Role\r\n                  </th>\r\n                  <th className=\"col-md-2\">\r\n                    Actions\r\n                  </th>\r\n                </thead>\r\n                <tr>\r\n                  <td>\r\n                      {user.image && <ImageResize imageData={user.image} resize={imageMaxSize}/>}\r\n                  </td>\r\n                  <td>\r\n                      {user.username}\r\n                  </td>\r\n                  <td>\r\n                      {user.email}\r\n                  </td>\r\n                  <td>\r\n                      {user.role}\r\n                  </td>\r\n                  <td>\r\n                      <Link to={`/User/${user.id}`} className=\"btn btn-sm btn-info\">View</Link>\r\n                  </td>\r\n              </tr>\r\n            </Table>\r\n          </div>\r\n          ))\r\n        }\r\n      </Container>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ListPosts;\r\n"]},"metadata":{},"sourceType":"module"}
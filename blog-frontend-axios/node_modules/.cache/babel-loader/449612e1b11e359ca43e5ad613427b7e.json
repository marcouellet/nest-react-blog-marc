{"ast":null,"code":"import _objectSpread from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\user\\\\EditUser.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\nimport * as Yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport CancelButton from '../common/cancelConfirmation';\nimport { createUserForUpdate, minimumPasswordLength, minimumEmailLength, minimumUserNameLength } from \"../../types\";\nimport { UserApiService } from \"../../services/api/UserApiService\";\nimport { createActionLoading } from '../../reducers/auth';\nimport useAuth from '../../contexts/auth';\nimport ListErrors from '../common/ListErrors';\nimport { checkUnauthorized, checkForbidden } from '../../utils/html.response.utils';\nimport { createActionSessionExpired } from '../../reducers/auth';\nimport Image from '../common/Image';\nimport ImageUpload from '../common/ImageUpload';\n\nconst EditUser = () => {\n  var _errors$username, _errors$email, _errors$password, _errors$role;\n\n  const navigate = useNavigate();\n\n  const _useAuth = useAuth(),\n        isLoading = _useAuth.state.isLoading,\n        dispatch = _useAuth.dispatch;\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        errorList = _React$useState2[0],\n        setErrorList = _React$useState2[1];\n\n  const _useParams = useParams(),\n        userId = _useParams.userId;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userImage = _useState4[0],\n        setUserImage = _useState4[1];\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('User name is required').min(minimumUserNameLength, `User name must be at least ${minimumUserNameLength} characters long`),\n    email: Yup.string().required('Email is required').min(minimumEmailLength, `Email must be at least ${minimumEmailLength} characters long`),\n    password: Yup.string().notRequired().min(minimumPasswordLength, `Password must be at least ${minimumPasswordLength} characters long`),\n    role: Yup.string().required('Role is required'),\n    imageChanged: Yup.bool()\n  });\n  const defaultValues = {\n    username: user === null || user === void 0 ? void 0 : user.username,\n    email: user === null || user === void 0 ? void 0 : user.email,\n    password: '',\n    role: user === null || user === void 0 ? void 0 : user.role,\n    imageChanged: false\n  };\n\n  const _useForm = useForm({\n    resolver: yupResolver(validationSchema),\n    defaultValues: defaultValues\n  }),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        reset = _useForm.reset,\n        setValue = _useForm.setValue,\n        _useForm$formState = _useForm.formState,\n        errors = _useForm$formState.errors,\n        isDirty = _useForm$formState.isDirty;\n\n  useEffect(() => {\n    if (!user) {\n      const fetchData = async () => {\n        dispatch(createActionLoading(true));\n        await UserApiService.getUserById(userId).then(user => {\n          setUser(user);\n          reset(user);\n          setUserImage(user === null || user === void 0 ? void 0 : user.image);\n        }).catch(apiErrors => handleFetchUserError(apiErrors));\n        dispatch(createActionLoading(false));\n      };\n\n      fetchData();\n    } // eslint-disable-next-line\n\n  }, []);\n  useEffect(() => {\n    setImageData(user === null || user === void 0 ? void 0 : user.image); // eslint-disable-next-line\n  }, [user]);\n\n  const onSubmit = async data => {\n    if (user && isDirty) {\n      dispatch(createActionLoading(true));\n      const image = userImage;\n      const userData = createUserForUpdate(_objectSpread({}, user, {}, data, {\n        image\n      }));\n      await UserApiService.updateUser(user.id, userData).then(() => {\n        handleSubmitFormSuccess();\n      }).catch(apiErrors => {\n        handleSubmitFormError(apiErrors);\n      });\n      dispatch(createActionLoading(false));\n    }\n  };\n\n  const handleFetchUserError = apiErrors => {\n    toast.error(`User reading failed, see error list`);\n    setErrorList(apiErrors);\n  };\n\n  const handleSubmitFormSuccess = () => {\n    toast.success(`User updated successfully...`);\n    navigate('/user');\n  };\n\n  const handleSubmitFormError = apiErrors => {\n    if (checkForbidden(apiErrors)) {\n      toast.error(`User update failed, session expired`);\n      dispatch(createActionSessionExpired());\n      navigate('/user');\n    } else if (checkUnauthorized(apiErrors)) {\n      toast.error(`Access denied`);\n    } else {\n      toast.error(`User update failed, see error list`);\n      setErrorList(apiErrors);\n    }\n  };\n\n  const cancelEditUserMessage = () => `user edition and loose changes`;\n\n  const handleResetEditUser = () => {\n    reset(defaultValues, {\n      keepDirty: false\n    });\n  };\n\n  const handleCancelEditUser = () => {\n    navigate('/user');\n  };\n\n  const handleRoleSelect = e => {\n    setValue('role', e);\n  };\n\n  const handleImageUpload = image => {\n    setImageData(image);\n  };\n\n  const handleDeleteImage = () => {\n    setImageData(undefined);\n  };\n\n  const setImageData = image => {\n    var _user$image;\n\n    const isImageDefined = image !== undefined;\n    const isInitialImageDefined = (user === null || user === void 0 ? void 0 : user.image) !== undefined;\n    const imageChanged = isImageDefined !== isInitialImageDefined || isImageDefined && (image === null || image === void 0 ? void 0 : image.base64) !== (user === null || user === void 0 ? void 0 : (_user$image = user.image) === null || _user$image === void 0 ? void 0 : _user$image.base64);\n    setValue('imageChanged', imageChanged, {\n      shouldDirty: true\n    });\n    setUserImage(image);\n  };\n\n  const imageMaxSize = {\n    maxWidth: 600,\n    maxHeight: 400\n  };\n  return React.createElement(\"div\", {\n    className: 'page-wrapper',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, user && React.createElement(\"div\", {\n    className: \"col-md-12 form-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \" Edit User  \"), errorList && React.createElement(ListErrors, {\n    errors: errorList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    id: \"create-user-form\",\n    onSubmit: handleSubmit(onSubmit),\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"col-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \" Image: \"), userImage && React.createElement(\"button\", {\n    className: \"btn btn-secondary col-md-3\",\n    onClick: () => handleDeleteImage(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Delete Image\"), React.createElement(ImageUpload, {\n    onImageUpload: handleImageUpload,\n    resize: imageMaxSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, userImage && React.createElement(React.Fragment, null, React.createElement(Image, {\n    imageData: userImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \" Title \"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter user name\"\n  }, register('username'), {\n    className: `form-control ${errors.username ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \" Email \"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter email\"\n  }, register('email'), {\n    className: `form-control ${errors.email ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \" Enter Password \"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter a value to change current password\"\n  }, register('password'), {\n    className: `form-control`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message)), React.createElement(\"div\", {\n    className: \"form-group \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(DropdownButton, {\n    title: \"Select Role\",\n    onSelect: handleRoleSelect,\n    className: \"col-md-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    eventKey: \"user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, \"User\"), React.createElement(Dropdown.Item, {\n    eventKey: \"admin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, \"Admin\")), React.createElement(\"input\", Object.assign({\n    style: {\n      float: 'right'\n    },\n    type: \"text\",\n    disabled: true,\n    placeholder: \"no role selected\"\n  }, register('role'), {\n    className: `col-md-1 form-control float-right ${errors.role ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, (_errors$role = errors.role) === null || _errors$role === void 0 ? void 0 : _errors$role.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-4 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    disabled: !isDirty,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, \"Update\"), isLoading && React.createElement(\"span\", {\n    className: \"fa fa-circle-o-notch fa-spin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group col-md-1 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-secondary\",\n    disabled: !isDirty,\n    onClick: () => handleResetEditUser(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, \"Reset\"), isLoading && React.createElement(\"span\", {\n    className: \"fa fa-circle-o-notch fa-spin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group col-md-1 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(CancelButton, {\n    prompt: isDirty,\n    message: cancelEditUserMessage(),\n    onClick: () => handleCancelEditUser(),\n    className: \"btn btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, \"Cancel\"))));\n};\n\nexport default EditUser;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/user/EditUser.tsx"],"names":["React","useState","useEffect","useForm","useParams","useNavigate","toast","DropdownButton","Dropdown","Yup","yupResolver","CancelButton","createUserForUpdate","minimumPasswordLength","minimumEmailLength","minimumUserNameLength","UserApiService","createActionLoading","useAuth","ListErrors","checkUnauthorized","checkForbidden","createActionSessionExpired","Image","ImageUpload","EditUser","navigate","isLoading","state","dispatch","errorList","setErrorList","userId","user","setUser","userImage","setUserImage","validationSchema","object","shape","username","string","required","min","email","password","notRequired","role","imageChanged","bool","defaultValues","resolver","register","handleSubmit","reset","setValue","formState","errors","isDirty","fetchData","getUserById","then","image","catch","apiErrors","handleFetchUserError","setImageData","onSubmit","data","userData","updateUser","id","handleSubmitFormSuccess","handleSubmitFormError","error","success","cancelEditUserMessage","handleResetEditUser","keepDirty","handleCancelEditUser","handleRoleSelect","e","handleImageUpload","handleDeleteImage","undefined","isImageDefined","isInitialImageDefined","base64","shouldDirty","imageMaxSize","maxWidth","maxHeight","message","float"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,iBAAzC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAA6BC,mBAA7B,EAAkDC,qBAAlD,EAAyEC,kBAAzE,EACQC,qBADR,QACgE,aADhE;AAEA,SAASC,cAAT,QAA+B,mCAA/B;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AAEA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,iCAAlD;AACA,SAASC,0BAAT,QAA2C,qBAA3C;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAErB,QAAMC,QAAQ,GAAGrB,WAAW,EAA5B;;AAFqB,mBAGsBa,OAAO,EAH7B;AAAA,QAGJS,SAHI,YAGbC,KAHa,CAGJD,SAHI;AAAA,QAGSE,QAHT,YAGSA,QAHT;;AAAA,0BAIa7B,KAAK,CAACC,QAAN,EAJb;AAAA;AAAA,QAId6B,SAJc;AAAA,QAIHC,YAJG;;AAAA,qBAKF3B,SAAS,EALP;AAAA,QAKb4B,MALa,cAKbA,MALa;;AAAA,oBAMG/B,QAAQ,EANX;AAAA;AAAA,QAMdgC,IANc;AAAA,QAMRC,OANQ;;AAAA,qBAOajC,QAAQ,EAPrB;AAAA;AAAA,QAOdkC,SAPc;AAAA,QAOHC,YAPG;;AASrB,QAAMC,gBAAgB,GAAG5B,GAAG,CAAC6B,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,IAAAA,QAAQ,EAAE/B,GAAG,CAACgC,MAAJ,GAAaC,QAAb,CAAsB,uBAAtB,EACPC,GADO,CACH5B,qBADG,EACqB,8BAA6BA,qBAAsB,kBADxE,CADgC;AAG1C6B,IAAAA,KAAK,EAAEnC,GAAG,CAACgC,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,EACJC,GADI,CACA7B,kBADA,EACqB,0BAAyBA,kBAAmB,kBADjE,CAHmC;AAK1C+B,IAAAA,QAAQ,EAAEpC,GAAG,CAACgC,MAAJ,GAAaK,WAAb,GACPH,GADO,CACH9B,qBADG,EACqB,6BAA4BA,qBAAsB,kBADvE,CALgC;AAO1CkC,IAAAA,IAAI,EAAEtC,GAAG,CAACgC,MAAJ,GAAaC,QAAb,CAAsB,kBAAtB,CAPoC;AAQ1CM,IAAAA,YAAY,EAAEvC,GAAG,CAACwC,IAAJ;AAR4B,GAAnB,CAAzB;AAmBA,QAAMC,aAAa,GAAG;AAACV,IAAAA,QAAQ,EAAEP,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEO,QAAjB;AAA2BI,IAAAA,KAAK,EAAEX,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEW,KAAxC;AAA+CC,IAAAA,QAAQ,EAAE,EAAzD;AAA6DE,IAAAA,IAAI,EAAEd,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEc,IAAzE;AAA+EC,IAAAA,YAAY,EAAE;AAA7F,GAAtB;;AA5BqB,mBAoCjB7C,OAAO,CAAmB;AAC5BgD,IAAAA,QAAQ,EAAEzC,WAAW,CAAC2B,gBAAD,CADO;AAE5Ba,IAAAA,aAAa,EAAEA;AAFa,GAAnB,CApCU;AAAA,QA+BnBE,QA/BmB,YA+BnBA,QA/BmB;AAAA,QAgCnBC,YAhCmB,YAgCnBA,YAhCmB;AAAA,QAiCnBC,KAjCmB,YAiCnBA,KAjCmB;AAAA,QAkCnBC,QAlCmB,YAkCnBA,QAlCmB;AAAA,sCAmCnBC,SAnCmB;AAAA,QAmCNC,MAnCM,sBAmCNA,MAnCM;AAAA,QAmCEC,OAnCF,sBAmCEA,OAnCF;;AAyCrBxD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAAC+B,IAAL,EAAW;AACT,YAAM0B,SAAS,GAAG,YAA2B;AAC3C9B,QAAAA,QAAQ,CAACZ,mBAAmB,CAAC,IAAD,CAApB,CAAR;AACA,cAAMD,cAAc,CAAC4C,WAAf,CAA2B5B,MAA3B,EACL6B,IADK,CACC5B,IAAD,IAAU;AAAEC,UAAAA,OAAO,CAACD,IAAD,CAAP;AAAeqB,UAAAA,KAAK,CAACrB,IAAD,CAAL;AAAaG,UAAAA,YAAY,CAACH,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAE6B,KAAP,CAAZ;AAA2B,SADnE,EAELC,KAFK,CAEEC,SAAD,IAAwBC,oBAAoB,CAACD,SAAD,CAF7C,CAAN;AAGAnC,QAAAA,QAAQ,CAACZ,mBAAmB,CAAC,KAAD,CAApB,CAAR;AACA,OANF;;AAOA0C,MAAAA,SAAS;AACV,KAVa,CAWhB;;AACC,GAZQ,EAYN,EAZM,CAAT;AAcAzD,EAAAA,SAAS,CAAC,MAAM;AACdgE,IAAAA,YAAY,CAACjC,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAE6B,KAAP,CAAZ,CADc,CAEhB;AACC,GAHQ,EAGN,CAAC7B,IAAD,CAHM,CAAT;;AAKA,QAAMkC,QAAQ,GAAG,MAAOC,IAAP,IAAkC;AACjD,QAAInC,IAAI,IAAIyB,OAAZ,EAAqB;AACnB7B,MAAAA,QAAQ,CAACZ,mBAAmB,CAAC,IAAD,CAApB,CAAR;AACA,YAAM6C,KAA4B,GAAG3B,SAArC;AACA,YAAMkC,QAAqB,GAAGzD,mBAAmB,mBAAKqB,IAAL,MAAcmC,IAAd;AAAoBN,QAAAA;AAApB,SAAjD;AACA,YAAM9C,cAAc,CAACsD,UAAf,CAA0BrC,IAAI,CAACsC,EAA/B,EAAoCF,QAApC,EACLR,IADK,CACA,MAAM;AAAEW,QAAAA,uBAAuB;AAAK,OADpC,EAELT,KAFK,CAEEC,SAAD,IAAyB;AAAES,QAAAA,qBAAqB,CAACT,SAAD,CAArB;AAAmC,OAF/D,CAAN;AAGAnC,MAAAA,QAAQ,CAACZ,mBAAmB,CAAC,KAAD,CAApB,CAAR;AACA;AACH,GAVD;;AAYA,QAAMgD,oBAAoB,GAAID,SAAD,IAAwB;AACnD1D,IAAAA,KAAK,CAACoE,KAAN,CAAa,qCAAb;AACA3C,IAAAA,YAAY,CAACiC,SAAD,CAAZ;AACD,GAHD;;AAKA,QAAMQ,uBAAuB,GAAG,MAAM;AACpClE,IAAAA,KAAK,CAACqE,OAAN,CAAe,8BAAf;AACAjD,IAAAA,QAAQ,CAAC,OAAD,CAAR;AACD,GAHD;;AAKA,QAAM+C,qBAAqB,GAAIT,SAAD,IAAwB;AACpD,QAAI3C,cAAc,CAAC2C,SAAD,CAAlB,EAA+B;AAC7B1D,MAAAA,KAAK,CAACoE,KAAN,CAAa,qCAAb;AACA7C,MAAAA,QAAQ,CAACP,0BAA0B,EAA3B,CAAR;AACAI,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACD,KAJD,MAIO,IAAIN,iBAAiB,CAAC4C,SAAD,CAArB,EAAkC;AACvC1D,MAAAA,KAAK,CAACoE,KAAN,CAAa,eAAb;AACD,KAFM,MAEA;AACLpE,MAAAA,KAAK,CAACoE,KAAN,CAAa,oCAAb;AACA3C,MAAAA,YAAY,CAACiC,SAAD,CAAZ;AACD;AACJ,GAXC;;AAaF,QAAMY,qBAAqB,GAAG,MAAO,gCAArC;;AAEA,QAAMC,mBAAmB,GAAG,MAAM;AAChCvB,IAAAA,KAAK,CAACJ,aAAD,EAAgB;AAAE4B,MAAAA,SAAS,EAAE;AAAb,KAAhB,CAAL;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAG,MAAM;AACjCrD,IAAAA,QAAQ,CAAC,OAAD,CAAR;AACD,GAFD;;AAIA,QAAMsD,gBAAgB,GAAEC,CAAD,IAAU;AAC/B1B,IAAAA,QAAQ,CAAC,MAAD,EAAS0B,CAAT,CAAR;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAIpB,KAAD,IAAsB;AAC9CI,IAAAA,YAAY,CAACJ,KAAD,CAAZ;AACD,GAFD;;AAIA,QAAMqB,iBAAiB,GAAG,MAAM;AAC9BjB,IAAAA,YAAY,CAACkB,SAAD,CAAZ;AACD,GAFD;;AAIA,QAAMlB,YAAY,GAAIJ,KAAD,IAAkC;AAAA;;AACrD,UAAMuB,cAAc,GAAGvB,KAAK,KAAKsB,SAAjC;AACA,UAAME,qBAAqB,GAAG,CAAArD,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAE6B,KAAN,MAAgBsB,SAA9C;AACA,UAAMpC,YAAY,GAAIqC,cAAc,KAAKC,qBAApB,IACED,cAAc,IAAI,CAAAvB,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEyB,MAAP,OAAkBtD,IAAlB,aAAkBA,IAAlB,sCAAkBA,IAAI,CAAE6B,KAAxB,gDAAkB,YAAayB,MAA/B,CADzC;AAEAhC,IAAAA,QAAQ,CAAC,cAAD,EAAiBP,YAAjB,EAA+B;AAACwC,MAAAA,WAAW,EAAE;AAAd,KAA/B,CAAR;AACApD,IAAAA,YAAY,CAAC0B,KAAD,CAAZ;AACD,GAPD;;AASA,QAAM2B,YAA4B,GAAG;AAACC,IAAAA,QAAQ,EAAC,GAAV;AAAeC,IAAAA,SAAS,EAAC;AAAzB,GAArC;AAEE,SACE;AAAK,IAAA,SAAS,EAAE,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC1D,IAAI,IAED;AAAK,IAAA,SAAS,EAAE,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGH,SAAS,IAAI,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEA,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFhB,EAGE;AAAM,IAAA,EAAE,EAAE,kBAAV;AAA8B,IAAA,QAAQ,EAAEuB,YAAY,CAACc,QAAD,CAApD;AAAgE,IAAA,UAAU,EAAE,IAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEIhC,SAAS,IACT;AAAQ,IAAA,SAAS,EAAC,4BAAlB;AAAgD,IAAA,OAAO,EAAG,MAAMgD,iBAAiB,EAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,EAOE,oBAAC,WAAD;AAAa,IAAA,aAAa,EAAED,iBAA5B;AAA+C,IAAA,MAAM,EAAEO,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADJ,CADF,EAaI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACItD,SAAS,IACT,0CACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEA,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFJ,CAbJ,EAsBE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC;AAFd,KAGMiB,QAAQ,CAAC,UAAD,CAHd;AAIE,IAAA,SAAS,EAAG,gBAAeK,MAAM,CAACjB,QAAP,GAAkB,YAAlB,GAAiC,EAAG,EAJjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAQE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmCiB,MAAM,CAACjB,QAA1C,qDAAmC,iBAAiBoD,OAApD,CARF,CAtBF,EAiCE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC;AAFd,KAGMxC,QAAQ,CAAC,OAAD,CAHd;AAIE,IAAA,SAAS,EAAG,gBAAeK,MAAM,CAACb,KAAP,GAAe,YAAf,GAA8B,EAAG,EAJ9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAQE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmCa,MAAM,CAACb,KAA1C,kDAAmC,cAAcgD,OAAjD,CARF,CAjCF,EA4CE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC;AAFd,KAGMxC,QAAQ,CAAC,UAAD,CAHd;AAIE,IAAA,SAAS,EAAG,cAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAQE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmCK,MAAM,CAACZ,QAA1C,qDAAmC,iBAAiB+C,OAApD,CARF,CA5CF,EAuDE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAC,aAAtB;AAAoC,IAAA,QAAQ,EAAEZ,gBAA9C;AAAgE,IAAA,SAAS,EAAC,UAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,QAAQ,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,QAAQ,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,CADF,EAKE;AAAO,IAAA,KAAK,EAAG;AAACa,MAAAA,KAAK,EAAE;AAAR,KAAf;AACE,IAAA,IAAI,EAAC,MADP;AACc,IAAA,QAAQ,MADtB;AACwB,IAAA,WAAW,EAAC;AADpC,KAEMzC,QAAQ,CAAC,MAAD,CAFd;AAGE,IAAA,SAAS,EAAG,qCAAoCK,MAAM,CAACV,IAAP,GAAc,YAAd,GAA6B,EAAG,EAHlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALF,CADF,EAYE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAmCU,MAAM,CAACV,IAA1C,iDAAmC,aAAa6C,OAAhD,CAZF,CAvDF,EAsEE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAqC,IAAA,QAAQ,EAAE,CAAClC,OAAhD;AAAyD,IAAA,IAAI,EAAC,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIG/B,SAAS,IACR;AAAM,IAAA,SAAS,EAAC,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAtEF,EA+EE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,mBAAlB;AAAsC,IAAA,QAAQ,EAAE,CAAC+B,OAAjD;AAA0D,IAAA,OAAO,EAAG,MAAMmB,mBAAmB,EAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIGlD,SAAS,IACR;AAAM,IAAA,SAAS,EAAC,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CA/EF,CAHF,EA4FE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAE+B,OAAtB;AAA+B,IAAA,OAAO,EAAEkB,qBAAqB,EAA7D;AAAiE,IAAA,OAAO,EAAE,MAAMG,oBAAoB,EAApG;AAAwG,IAAA,SAAS,EAAC,gBAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CA5FF,CAHJ,CADF;AA2GD,CA3OD;;AA6OA,eAAetD,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { toast } from \"react-toastify\";\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport * as Yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport CancelButton from '../common/cancelConfirmation'\r\nimport { IUser, IUpdateUser, createUserForUpdate, minimumPasswordLength, minimumEmailLength, \r\n        minimumUserNameLength, ImageData, ImageSizeProps } from \"../../types\";\r\nimport { UserApiService } from \"../../services/api/UserApiService\";\r\nimport { createActionLoading } from '../../reducers/auth';\r\nimport useAuth from '../../contexts/auth';\r\nimport ListErrors from '../common/ListErrors';\r\nimport { IErrors } from '../../types';\r\nimport { checkUnauthorized, checkForbidden } from '../../utils/html.response.utils';\r\nimport { createActionSessionExpired } from '../../reducers/auth';\r\nimport Image from '../common/Image';\r\nimport ImageUpload from '../common/ImageUpload';\r\n\r\nconst EditUser = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const { state: { isLoading }, dispatch } = useAuth();\r\n  const [errorList, setErrorList] = React.useState<IErrors | null>();\r\n  const { userId } = useParams<{ userId: string }>();\r\n  const [user, setUser] = useState<IUser>();\r\n  const [userImage, setUserImage] = useState<ImageData>();\r\n \r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string().required('User name is required')\r\n      .min(minimumUserNameLength, `User name must be at least ${minimumUserNameLength} characters long`),\r\n    email: Yup.string().required('Email is required')\r\n      .min(minimumEmailLength, `Email must be at least ${minimumEmailLength} characters long`),\r\n    password: Yup.string().notRequired()\r\n      .min(minimumPasswordLength, `Password must be at least ${minimumPasswordLength} characters long`),\r\n    role: Yup.string().required('Role is required'),\r\n    imageChanged: Yup.bool(),\r\n  });\r\n\r\n  type UpdateSubmitForm = {\r\n    username: string;\r\n    email: string;\r\n    password?: string;\r\n    role: string;\r\n    imageChanged: boolean;\r\n  };\r\n\r\n  const defaultValues = {username: user?.username, email: user?.email, password: '', role: user?.role, imageChanged: false};\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    formState: { errors, isDirty }\r\n  } = useForm<UpdateSubmitForm>({\r\n    resolver: yupResolver(validationSchema),\r\n    defaultValues: defaultValues\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      const fetchData = async (): Promise<void> => {\r\n        dispatch(createActionLoading(true));\r\n        await UserApiService.getUserById(userId!)\r\n        .then((user) => { setUser(user); reset(user); setUserImage(user?.image);})\r\n        .catch((apiErrors: IErrors) => handleFetchUserError(apiErrors));\r\n        dispatch(createActionLoading(false));\r\n       }\r\n      fetchData();      \r\n    }\r\n  // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setImageData(user?.image);\r\n  // eslint-disable-next-line\r\n  }, [user]);\r\n\r\n  const onSubmit = async (data: UpdateSubmitForm) => {\r\n    if (user && isDirty) {\r\n      dispatch(createActionLoading(true));\r\n      const image: ImageData | undefined = userImage;\r\n      const userData: IUpdateUser = createUserForUpdate({...user, ...data, image});\r\n      await UserApiService.updateUser(user.id!, userData)\r\n      .then(() => { handleSubmitFormSuccess(); })\r\n      .catch((apiErrors: IErrors) =>  { handleSubmitFormError(apiErrors); });\r\n      dispatch(createActionLoading(false));\r\n     }\r\n  } \r\n\r\n  const handleFetchUserError = (apiErrors: IErrors) => {\r\n    toast.error(`User reading failed, see error list`);\r\n    setErrorList(apiErrors);\r\n  }\r\n\r\n  const handleSubmitFormSuccess = () => {\r\n    toast.success(`User updated successfully...`);\r\n    navigate('/user'); \r\n  }\r\n\r\n  const handleSubmitFormError = (apiErrors: IErrors) => {\r\n    if (checkForbidden(apiErrors)) {\r\n      toast.error(`User update failed, session expired`);\r\n      dispatch(createActionSessionExpired());\r\n      navigate('/user'); \r\n    } else if (checkUnauthorized(apiErrors)) {\r\n      toast.error(`Access denied`);\r\n    } else {\r\n      toast.error(`User update failed, see error list`);\r\n      setErrorList(apiErrors);      \r\n    }\r\n}\r\n\r\nconst cancelEditUserMessage = () => `user edition and loose changes`;\r\n\r\nconst handleResetEditUser = () => {\r\n  reset(defaultValues, { keepDirty: false});\r\n}\r\n\r\nconst handleCancelEditUser = () => {\r\n  navigate('/user');   \r\n};\r\n\r\nconst handleRoleSelect=(e: any)=>{\r\n  setValue('role', e);\r\n}\r\n\r\nconst handleImageUpload = (image: ImageData) => {\r\n  setImageData(image);\r\n}\r\n\r\nconst handleDeleteImage = () => {\r\n  setImageData(undefined);\r\n}\r\n\r\nconst setImageData = (image: ImageData | undefined) => {\r\n  const isImageDefined = image !== undefined;\r\n  const isInitialImageDefined = user?.image !== undefined;\r\n  const imageChanged = (isImageDefined !== isInitialImageDefined) ||\r\n                        (isImageDefined && image?.base64 !== user?.image?.base64);\r\n  setValue('imageChanged', imageChanged, {shouldDirty: true});\r\n  setUserImage(image);\r\n}\r\n\r\nconst imageMaxSize: ImageSizeProps = {maxWidth:600, maxHeight:400}\r\n\r\n  return (\r\n    <div className={'page-wrapper'}>\r\n    {user &&\r\n      (\r\n        <div className={\"col-md-12 form-wrapper\"}>\r\n          <h2> Edit User  </h2>\r\n          {errorList && <ListErrors errors={errorList} />}\r\n          <form id={\"create-user-form\"} onSubmit={handleSubmit(onSubmit)} noValidate={true}>\r\n            <div className=\"form-group col-md-4\">\r\n                <div className=\"row\">\r\n                  <label className=\"col-md-2\"> Image: </label>\r\n                  { userImage && \r\n                    <button className=\"btn btn-secondary col-md-3\"  onClick={ () => handleDeleteImage() } >\r\n                      Delete Image\r\n                    </button>  \r\n                  }   \r\n                  <ImageUpload onImageUpload={handleImageUpload} resize={imageMaxSize}/>                     \r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-12\">\r\n                { userImage && \r\n                  <>\r\n                    <Image imageData={userImage}/> \r\n                    <br/>\r\n                  </>\r\n                }    \r\n            </div>\r\n\r\n            <div className=\"form-group col-md-12\">\r\n              <label htmlFor=\"username\"> Title </label>\r\n              <input \r\n                type=\"text\"\r\n                placeholder=\"Enter user name\"\r\n                {...register('username')}\r\n                className={`form-control ${errors.username ? 'is-invalid' : ''}`} \r\n              />\r\n              <div className=\"invalid-feedback\">{errors.username?.message}</div>\r\n           </div>\r\n\r\n            <div className=\"form-group col-md-12\">\r\n              <label htmlFor=\"email\"> Email </label>\r\n              <input \r\n                type=\"text\" \r\n                placeholder=\"Enter email\"\r\n                {...register('email')}\r\n                className={`form-control ${errors.email ? 'is-invalid' : ''}`} \r\n              />\r\n              <div className=\"invalid-feedback\">{errors.email?.message}</div>\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-12\">\r\n              <label htmlFor=\"password\"> Enter Password </label>\r\n              <input \r\n                type=\"text\" \r\n                placeholder=\"Enter a value to change current password\" \r\n                {...register('password')}\r\n                className={`form-control`}           \r\n              />\r\n              <div className=\"invalid-feedback\">{errors.password?.message}</div>\r\n            </div>\r\n\r\n            <div className=\"form-group \">\r\n              <div className=\"row\">\r\n                <DropdownButton title=\"Select Role\" onSelect={handleRoleSelect} className=\"col-md-1\">\r\n                    <Dropdown.Item eventKey='user'>User</Dropdown.Item>\r\n                    <Dropdown.Item eventKey='admin'>Admin</Dropdown.Item>\r\n                </DropdownButton>\r\n                <input style={ {float: 'right'} }    \r\n                  type=\"text\" disabled  placeholder=\"no role selected\" \r\n                  {...register('role')}\r\n                  className={`col-md-1 form-control float-right ${errors.role ? 'is-invalid' : ''}`}           \r\n                />\r\n              </div>\r\n              <div className=\"invalid-feedback\">{errors.role?.message}</div>\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-4 pull-right\">\r\n              <button className=\"btn btn-success\"  disabled={!isDirty} type=\"submit\">\r\n                Update\r\n              </button>\r\n              {isLoading &&\r\n                <span className=\"fa fa-circle-o-notch fa-spin\" />\r\n              }\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-1 pull-right\">\r\n              <button className=\"btn btn-secondary\" disabled={!isDirty} onClick={ () => handleResetEditUser() } >\r\n                Reset\r\n              </button>\r\n              {isLoading &&\r\n                <span className=\"fa fa-circle-o-notch fa-spin\" />\r\n              }\r\n            </div>\r\n          </form>\r\n\r\n          <div className=\"form-group col-md-1 pull-right\">\r\n              {\r\n              <CancelButton prompt={isDirty} message={cancelEditUserMessage()} onClick={() => handleCancelEditUser()} className=\"btn btn-danger\">Cancel</CancelButton>\r\n              }\r\n           </div>\r\n\r\n        </div>\r\n      )\r\n    }\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default EditUser;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\auth\\\\RestrictedRoute.tsx\";\nimport React from \"react\";\nimport { Navigate, Route } from 'react-router-dom';\nimport useAuth from '../../contexts/auth';\n\nconst RestrictedRoute = props => {\n  const _useAuth = useAuth(),\n        isAuthenticated = _useAuth.state.isAuthenticated;\n\n  ;\n  const toHome = React.createElement(Navigate, {\n    to: \"/\",\n    replace: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  });\n  const loggedInProps = {\n    path: '*',\n    element: {\n      toHome\n    }\n  };\n  const routeProps = !isAuthenticated ? props : loggedInProps;\n  const route = React.createElement(Route, Object.assign({}, routeProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n  return route;\n};\n\nexport default RestrictedRoute;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/auth/RestrictedRoute.tsx"],"names":["React","Navigate","Route","useAuth","RestrictedRoute","props","isAuthenticated","state","toHome","loggedInProps","path","element","routeProps","route"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAe;AAAA,mBAEEF,OAAO,EAFT;AAAA,QAEpBG,eAFoB,YAE7BC,KAF6B,CAEpBD,eAFoB;;AAEY;AACjD,QAAME,MAAM,GAAG,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAiB,IAAA,OAAO,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf;AACA,QAAMC,aAAa,GAAG;AAAEC,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,OAAO,EAAE;AAAEH,MAAAA;AAAF;AAAtB,GAAtB;AACA,QAAMI,UAAU,GAAG,CAACN,eAAD,GAAmBD,KAAnB,GAA2BI,aAA9C;AAEA,QAAMI,KAAK,GAAI,oBAAC,KAAD,oBAAWD,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAf;AACA,SAAOC,KAAP;AACD,CATD;;AAWA,eAAeT,eAAf","sourcesContent":["import React from \"react\";\r\nimport { Navigate, Route } from 'react-router-dom';\r\nimport useAuth from '../../contexts/auth';\r\n\r\nconst RestrictedRoute = (props:any) => {\r\n\r\n  const { state: { isAuthenticated } } = useAuth();;\r\n  const toHome = <Navigate to=\"/\" replace />;\r\n  const loggedInProps = { path: '*', element: { toHome} };\r\n  const routeProps = !isAuthenticated ? props : loggedInProps;\r\n  \r\n  const route =  <Route {...routeProps} />;\r\n  return route;\r\n}\r\n\r\nexport default RestrictedRoute;\r\n"]},"metadata":{},"sourceType":"module"}
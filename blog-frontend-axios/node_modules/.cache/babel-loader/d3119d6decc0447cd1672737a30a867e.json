{"ast":null,"code":"import _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\admin\\\\AdminUser.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport { UserApiService } from \"../../services/api/UserApiService\";\nimport useAuth from '../../contexts/auth';\nimport { createActionLoading } from '../../reducers/auth';\nimport ListErrors from '../common/ListErrors';\nimport DeleteButton from '../common/deleteConfirmation';\nimport { checkUnauthorized } from '../../utils/html.response.utils';\nimport { createActionSessionExpired } from '../../reducers/auth';\nimport ViewUserCard from '../user/ViewUserCard';\nimport { PostApiService } from '../../services/api/PostApiService';\n\nconst AdminUser = () => {\n  const navigate = useNavigate();\n\n  const _useAuth = useAuth(),\n        state = _useAuth.state,\n        dispatch = _useAuth.dispatch;\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        errors = _React$useState2[0],\n        setErrors = _React$useState2[1];\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1];\n\n  const _removeUserFromView = id => {\n    const index = users.findIndex(user => user.id === id);\n    users.splice(index, 1);\n  };\n\n  const deleteUserMessage = user => `${user.username} User`;\n\n  const handleDeleteUser = async id => {\n    dispatch(createActionLoading(true));\n    const postscount = await PostApiService.getNumberOfPostsForUser(id);\n\n    if (postscount) {\n      toast.error(`User has posts, delete them first`);\n      dispatch(createActionLoading(false));\n    } else {\n      await UserApiService.deleteUser(id).then(() => handleDeleteUserSuccess()).catch(apiErrors => handleDeleteUserError(apiErrors));\n      dispatch(createActionLoading(false));\n\n      _removeUserFromView(id);\n\n      navigate('/user');\n    }\n  };\n\n  const handleDeleteUserSuccess = () => {\n    toast.success(`User deleted successfully...`);\n  };\n\n  const handleDeleteUserError = apiErrors => {\n    if (checkUnauthorized(apiErrors)) {\n      toast.error(`User delete failed, session expired`);\n      dispatch(createActionSessionExpired());\n      navigate('/user');\n    } else {\n      toast.error(`User delete failed, see error list`);\n      setErrors(apiErrors);\n    }\n  };\n\n  const handleViewCardDetail = userId => {\n    navigate(`/user/${userId}`);\n  };\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      UserApiService.getAllUsers().then(users => setUsers(users));\n    };\n\n    fetchUsers();\n  }, []);\n  return React.createElement(\"section\", {\n    className: \"blog-area section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, errors && React.createElement(ListErrors, {\n    errors: errors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, state.isAuthenticated && !state.isLoading && React.createElement(Link, {\n    to: `/user/create`,\n    className: \"btn btn-sm btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Create User\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, users && users.map(user => React.createElement(\"div\", {\n    className: \"col-lg-4 col-md-6\",\n    key: user.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card h-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-lg-4 col-md-6\",\n    key: post.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(ViewUserCard, {\n    user: user,\n    onViewUserDetail: handleViewCardDetail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(\"ul\", {\n    className: \"user-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, !state.isLoading && React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/user/${user.id}`,\n    className: \"btn btn-sm btn-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"View User \"))), state.isAuthenticated && !state.isLoading && React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/user/edit/${user.id}`,\n    className: \"btn btn-sm btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Edit User\"))), state.isAuthenticated && !state.isLoading && React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(DeleteButton, {\n    message: deleteUserMessage(user),\n    onClick: () => handleDeleteUser(user.id),\n    className: \"btn btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Delete User\")))))))));\n};\n\nexport default AdminUser;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/admin/AdminUser.tsx"],"names":["React","useState","useEffect","Link","useNavigate","toast","UserApiService","useAuth","createActionLoading","ListErrors","DeleteButton","checkUnauthorized","createActionSessionExpired","ViewUserCard","PostApiService","AdminUser","navigate","state","dispatch","errors","setErrors","users","setUsers","_removeUserFromView","id","index","findIndex","user","splice","deleteUserMessage","username","handleDeleteUser","postscount","getNumberOfPostsForUser","error","deleteUser","then","handleDeleteUserSuccess","catch","apiErrors","handleDeleteUserError","success","handleViewCardDetail","userId","fetchUsers","getAllUsers","isAuthenticated","isLoading","map","post"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { toast } from \"react-toastify\";\r\nimport { UserApiService } from \"../../services/api/UserApiService\";\r\nimport { IUser } from \"../../types\";\r\nimport useAuth from '../../contexts/auth';\r\nimport { createActionLoading } from '../../reducers/auth';\r\nimport ListErrors from '../common/ListErrors';\r\nimport { IErrors } from '../../types';\r\nimport DeleteButton from '../common/deleteConfirmation'\r\nimport { checkUnauthorized } from '../../utils/html.response.utils';\r\nimport { createActionSessionExpired } from '../../reducers/auth';\r\nimport ViewUserCard, { onViewUserDetail } from '../user/ViewUserCard';\r\nimport { PostApiService } from '../../services/api/PostApiService';\r\n\r\nconst AdminUser = () => {\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  const { state, dispatch } = useAuth();\r\n\r\n  const [errors, setErrors] = React.useState<IErrors | null>();\r\n\r\n  const [users, setUsers] = useState<IUser[]>([]);\r\n\r\n  const _removeUserFromView = (id: string) => {\r\n    const index = users.findIndex((user: IUser) => user.id! === id);\r\n    users.splice(index, 1);\r\n  }\r\n\r\n  const deleteUserMessage = (user: IUser) => `${user.username} User`;\r\n\r\n  const handleDeleteUser = async (id: string) => {\r\n    dispatch(createActionLoading(true));\r\n    const postscount = await PostApiService.getNumberOfPostsForUser(id);\r\n    if (postscount) {\r\n      toast.error(`User has posts, delete them first`);\r\n      dispatch(createActionLoading(false));\r\n    } else {\r\n      await UserApiService.deleteUser(id)\r\n      .then(() => handleDeleteUserSuccess())\r\n      .catch((apiErrors: IErrors) => handleDeleteUserError(apiErrors))\r\n      dispatch(createActionLoading(false));\r\n      _removeUserFromView(id);\r\n      navigate('/user'); \r\n    }\r\n  }\r\n\r\n  const handleDeleteUserSuccess = () => {\r\n    toast.success(`User deleted successfully...`);\r\n  }\r\n\r\n  const handleDeleteUserError = (apiErrors: IErrors) => {\r\n    if (checkUnauthorized(apiErrors)) {\r\n      toast.error(`User delete failed, session expired`);\r\n      dispatch(createActionSessionExpired());\r\n      navigate('/user'); \r\n    } else {\r\n      toast.error(`User delete failed, see error list`);\r\n      setErrors(apiErrors);      \r\n    }\r\n  }\r\n\r\n  const handleViewCardDetail: onViewUserDetail = (userId: string)=>{\r\n    navigate(`/user/${userId}`);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async (): Promise<void> => {\r\n      UserApiService.getAllUsers()\r\n        .then(users => setUsers(users));\r\n    }\r\n    fetchUsers();\r\n  }, [])\r\n\r\n    return (\r\n        <section className=\"blog-area section\">\r\n        {errors && <ListErrors errors={errors} />}\r\n        <div className=\"container\">\r\n          <div>\r\n            {\r\n              state.isAuthenticated && !state.isLoading && \r\n              (\r\n                  <Link to={`/user/create`} className=\"btn btn-sm btn-primary\">Create User</Link>\r\n              )\r\n            }\r\n          </div>\r\n          <br/>\r\n          <div className=\"row\">\r\n            {users && users.map((user: IUser) => (\r\n              <div className=\"col-lg-4 col-md-6\" key={user.id}>\r\n              <div className=\"card h-100\">\r\n                <div className=\"col-lg-4 col-md-6\" key={post.id}>\r\n                  <ViewUserCard user={user} onViewUserDetail={handleViewCardDetail}/>\r\n                </div>\r\n                <ul className=\"user-footer\">\r\n                  {\r\n                    !state.isLoading &&\r\n                    (\r\n                      <li>\r\n                      {\r\n                        <p>\r\n                          <Link to={`/user/${user.id}`} className=\"btn btn-sm btn-info\">View User </Link>\r\n                        </p>\r\n                      }\r\n                      </li>\r\n                    )\r\n                  }\r\n                  {\r\n                    state.isAuthenticated && !state.isLoading && \r\n                    (\r\n                      <li>\r\n                      {\r\n                        <p>\r\n                          <Link to={`/user/edit/${user.id}`} className=\"btn btn-sm btn-primary\">Edit User</Link>\r\n                        </p>\r\n\r\n                      }\r\n                      </li>\r\n                    )\r\n                  }\r\n                  {\r\n                    state.isAuthenticated && !state.isLoading &&  \r\n                    (                   \r\n                      <li>\r\n                      {\r\n                        <DeleteButton message={deleteUserMessage(user)} onClick={() => handleDeleteUser(user.id!)} className=\"btn btn-danger\">Delete User</DeleteButton>\r\n                      }\r\n                      </li>\r\n                    )\r\n                  }\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n}\r\n\r\nexport default AdminUser;\r\n"]},"metadata":{},"sourceType":"module"}
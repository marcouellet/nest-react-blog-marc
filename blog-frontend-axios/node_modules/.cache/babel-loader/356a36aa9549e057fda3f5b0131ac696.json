{"ast":null,"code":"import _objectSpread from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\user\\\\CreateUser.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\nimport * as Yup from 'yup';\nimport CancelButton from '../common/cancelConfirmation';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { UserApiService } from \"../../services/api/UserApiService\";\nimport { createActionLoading } from '../../reducers/auth';\nimport useAuth from '../../contexts/auth';\nimport ListErrors from '../common/ListErrors';\nimport { minimumPasswordLength, minimumEmailLength, minimumUserNameLength } from '../../types';\nimport { checkUnauthorized, checkForbidden } from '../../utils/html.response.utils';\nimport { createActionSessionExpired } from '../../reducers/auth';\nimport ImageUpload from '../common/ImageUpload';\nimport Image from '../common/Image';\nimport ImageResize from '../common/ImageResize';\nimport { resizeImage } from '../../utils/image.utils';\n\nconst CreateUser = () => {\n  var _errors$username, _errors$email, _errors$password, _errors$role;\n\n  const navigate = useNavigate();\n\n  const _useAuth = useAuth(),\n        isLoading = _useAuth.state.isLoading,\n        dispatch = _useAuth.dispatch;\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        errorList = _React$useState2[0],\n        setErrorList = _React$useState2[1];\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        userImage = _useState2[0],\n        setUserImage = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userDefaultImage = _useState4[0],\n        setuserDefaultImage = _useState4[1];\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('User name is required').min(minimumUserNameLength, `User name must be at least ${minimumUserNameLength} characters long`),\n    email: Yup.string().required('Email is required').min(minimumEmailLength, `Email must be at least ${minimumEmailLength} characters long`),\n    password: Yup.string().required('Password is required').min(minimumPasswordLength, `Password must be at least ${minimumPasswordLength} characters long`),\n    role: Yup.string().required('Role is required')\n  });\n  const defaultValues = {\n    username: '',\n    email: '',\n    password: '',\n    role: ''\n  };\n  useEffect(() => {\n    if (!userDefaultImage) {\n      const fetchData = async () => {\n        dispatch(createActionLoading(true));\n        await getDefaultUserImage().then(imageData => {\n          setuserDefaultImage(imageData);\n        }).catch(error => {\n          throw new Error(error);\n        });\n        dispatch(createActionLoading(false));\n      };\n\n      fetchData();\n    } // eslint-disable-next-line\n\n  }, []);\n  const imageMaxSize = {\n    maxWidth: 200,\n    maxHeight: 200\n  };\n\n  const UserImage = () => {\n    if (userImage) {\n      return React.createElement(ImageResize, {\n        imageData: userImage,\n        resize: imageMaxSize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      });\n    } else {\n      return userDefaultImage && React.createElement(Image, {\n        imageData: userDefaultImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      });\n    }\n  };\n\n  const getDefaultUserImage = () => {\n    return resizeImage('/default-profil-image.jpg', 'image/jpg', imageMaxSize.maxWidth, imageMaxSize.maxHeight);\n  };\n\n  const _useForm = useForm({\n    resolver: yupResolver(validationSchema),\n    defaultValues: defaultValues\n  }),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        _useForm$formState = _useForm.formState,\n        errors = _useForm$formState.errors,\n        isDirty = _useForm$formState.isDirty,\n        reset = _useForm.reset,\n        setValue = _useForm.setValue;\n\n  const onSubmit = async data => {\n    dispatch(createActionLoading(true));\n    const image = userImage;\n\n    const userData = _objectSpread({}, data, {\n      image\n    });\n\n    await UserApiService.createUser(userData).then(() => {\n      handleSubmitFormSuccess();\n    }).catch(apiErrors => {\n      handleSubmitFormError(apiErrors);\n    });\n    dispatch(createActionLoading(false));\n  };\n\n  const handleSubmitFormSuccess = () => {\n    toast.success(`User created successfully...`);\n    navigate('/user');\n  };\n\n  const handleSubmitFormError = apiErrors => {\n    if (checkForbidden(apiErrors)) {\n      toast.error(`User creation failed, session expired`);\n      dispatch(createActionSessionExpired());\n    } else if (checkUnauthorized(apiErrors)) {\n      toast.error(`User already exist or access denied`);\n    } else {\n      toast.error(`User creation failed, see error list`);\n      setErrorList(apiErrors);\n    }\n  };\n\n  const cancelCreateUserMessage = () => `User creation and loose changes`;\n\n  const handleClearCreateUser = () => {\n    reset(defaultValues, {\n      keepDirty: false\n    });\n  };\n\n  const handleCancelCreateUser = () => {\n    navigate('/user');\n  };\n\n  const handleRoleSelect = e => {\n    setValue('role', e);\n  };\n\n  const handleImageUpload = image => {\n    setUserImage(image);\n  };\n\n  const handleImageUploadError = error => {\n    toast.error(`User image upload failed`);\n  };\n\n  const handleDeleteImage = () => {\n    setUserImage(undefined);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-12 form-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \" Create User \"), errorList && React.createElement(ListErrors, {\n    errors: errorList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    id: \"create-User-form\",\n    onSubmit: handleSubmit(onSubmit),\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"col-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \" Image: \"), userImage && React.createElement(\"button\", {\n    className: \"btn btn-secondary col-md-3\",\n    onClick: () => handleDeleteImage(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Delete Image\"), React.createElement(ImageUpload, {\n    onImageUpload: handleImageUpload,\n    onImageUploadError: handleImageUploadError,\n    resize: imageMaxSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, UserImage(), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \" Title \"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter user name\"\n  }, register('username'), {\n    className: `form-control ${errors.username ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \" Email \"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter email\"\n  }, register('email'), {\n    className: `form-control ${errors.email ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \" Enter Password \"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter password\"\n  }, register('password'), {\n    className: `form-control ${errors.password ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message)), React.createElement(\"div\", {\n    className: \"form-group \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(DropdownButton, {\n    title: \"Select Role\",\n    onSelect: handleRoleSelect,\n    className: \"col-md-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    eventKey: \"user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"User\"), React.createElement(Dropdown.Item, {\n    eventKey: \"admin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"Admin\")), React.createElement(\"input\", Object.assign({\n    style: {\n      float: 'right'\n    },\n    type: \"text\",\n    disabled: true,\n    placeholder: \"no role selected\"\n  }, register('role'), {\n    className: `col-md-1 form-control float-right ${errors.role ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, (_errors$role = errors.role) === null || _errors$role === void 0 ? void 0 : _errors$role.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-4 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    disabled: !isDirty,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, \"Create\"), isLoading && React.createElement(\"span\", {\n    className: \"fa fa-circle-o-notch fa-spin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group col-md-1 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-secondary\",\n    disabled: !isDirty,\n    onClick: () => handleClearCreateUser(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Reset\"), isLoading && React.createElement(\"span\", {\n    className: \"fa fa-circle-o-notch fa-spin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group col-md-1 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(CancelButton, {\n    prompt: isDirty,\n    message: cancelCreateUserMessage(),\n    onClick: () => handleCancelCreateUser(),\n    className: \"btn btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, \"Cancel\"))));\n};\n\nexport default CreateUser;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/user/CreateUser.tsx"],"names":["React","useState","useEffect","useForm","useNavigate","toast","DropdownButton","Dropdown","Yup","CancelButton","yupResolver","UserApiService","createActionLoading","useAuth","ListErrors","minimumPasswordLength","minimumEmailLength","minimumUserNameLength","checkUnauthorized","checkForbidden","createActionSessionExpired","ImageUpload","Image","ImageResize","resizeImage","CreateUser","navigate","isLoading","state","dispatch","errorList","setErrorList","userImage","setUserImage","userDefaultImage","setuserDefaultImage","validationSchema","object","shape","username","string","required","min","email","password","role","defaultValues","fetchData","getDefaultUserImage","then","imageData","catch","error","Error","imageMaxSize","maxWidth","maxHeight","UserImage","resolver","register","handleSubmit","formState","errors","isDirty","reset","setValue","onSubmit","data","image","userData","createUser","handleSubmitFormSuccess","apiErrors","handleSubmitFormError","success","cancelCreateUserMessage","handleClearCreateUser","keepDirty","handleCancelCreateUser","handleRoleSelect","e","handleImageUpload","handleImageUploadError","handleDeleteImage","undefined","message","float"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from \"react-toastify\";\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport * as Yup from 'yup';\r\nimport CancelButton from '../common/cancelConfirmation'\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { UserApiService } from \"../../services/api/UserApiService\";\r\nimport { createActionLoading } from '../../reducers/auth';\r\nimport useAuth from '../../contexts/auth';\r\nimport ListErrors from '../common/ListErrors';\r\nimport { IErrors, minimumPasswordLength, minimumEmailLength, minimumUserNameLength,\r\n          ImageSizeProps, ImageData } from '../../types';\r\nimport { checkUnauthorized, checkForbidden } from '../../utils/html.response.utils';\r\nimport { createActionSessionExpired } from '../../reducers/auth';\r\nimport ImageUpload from '../common/ImageUpload';\r\nimport Image from '../common/Image';\r\nimport ImageResize from '../common/ImageResize';\r\nimport { resizeImage } from '../../utils/image.utils'\r\n\r\nconst CreateUser = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const { state: { isLoading }, dispatch } = useAuth();\r\n  const [errorList, setErrorList] = React.useState<IErrors | null>();\r\n  const [userImage, setUserImage] = useState<ImageData>();\r\n  const [userDefaultImage, setuserDefaultImage] = useState<ImageData>();\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string().required('User name is required')\r\n      .min(minimumUserNameLength, `User name must be at least ${minimumUserNameLength} characters long`),\r\n    email: Yup.string().required('Email is required')\r\n      .min(minimumEmailLength, `Email must be at least ${minimumEmailLength} characters long`),\r\n    password: Yup.string().required('Password is required')\r\n      .min(minimumPasswordLength, `Password must be at least ${minimumPasswordLength} characters long`),\r\n    role: Yup.string().required('Role is required'),\r\n  });\r\n\r\n  type CreateSubmitForm = {\r\n    username: string;\r\n    email: string;\r\n    password: string;\r\n    role: string;\r\n  };\r\n\r\n  const defaultValues = {username: '', email: '', password: '', role: ''};\r\n\r\n  useEffect(() => {\r\n    if (!userDefaultImage) {\r\n      const fetchData = async (): Promise<void> => {\r\n        dispatch(createActionLoading(true));\r\n        await getDefaultUserImage()\r\n        .then(imageData => { \r\n          setuserDefaultImage(imageData);\r\n        }) \r\n        .catch(error => {\r\n          throw new Error(error);\r\n        });\r\n        dispatch(createActionLoading(false));\r\n      }\r\n      fetchData();      \r\n    }\r\n  // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const imageMaxSize: ImageSizeProps = {maxWidth:200, maxHeight:200}\r\n\r\n  const UserImage = () => {\r\n    if(userImage) {\r\n      return <ImageResize imageData={userImage} resize={imageMaxSize}/>;\r\n    }  else {\r\n      return  userDefaultImage && <Image imageData={userDefaultImage}/> \r\n    }\r\n  }\r\n\r\n  const getDefaultUserImage = (): Promise<ImageData> => {\r\n    return resizeImage('/default-profil-image.jpg', 'image/jpg', imageMaxSize.maxWidth, imageMaxSize.maxHeight);\r\n  }\r\n\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isDirty },\r\n    reset,\r\n    setValue,\r\n  } = useForm<CreateSubmitForm>({\r\n    resolver: yupResolver(validationSchema),\r\n    defaultValues: defaultValues\r\n  });\r\n\r\n  const onSubmit = async (data: CreateSubmitForm) => {\r\n    dispatch(createActionLoading(true));\r\n    const image: ImageData | undefined = userImage;\r\n    const userData = {...data, image};\r\n    await UserApiService.createUser(userData)\r\n    .then(() => { handleSubmitFormSuccess(); })\r\n    .catch((apiErrors: IErrors) =>  { handleSubmitFormError(apiErrors); });\r\n    dispatch(createActionLoading(false));\r\n  } \r\n\r\n  const handleSubmitFormSuccess = () => {\r\n    toast.success(`User created successfully...`);\r\n    navigate('/user');\r\n  }\r\n\r\n  const handleSubmitFormError = (apiErrors: IErrors) => {\r\n    if (checkForbidden(apiErrors)) {\r\n      toast.error(`User creation failed, session expired`);\r\n      dispatch(createActionSessionExpired());\r\n    } else if (checkUnauthorized(apiErrors)) {\r\n      toast.error(`User already exist or access denied`);\r\n    } else {\r\n      toast.error(`User creation failed, see error list`);\r\n      setErrorList(apiErrors);      \r\n    }\r\n  }\r\n\r\n  const cancelCreateUserMessage = () => `User creation and loose changes`;\r\n\r\n  const handleClearCreateUser = () => {\r\n    reset(defaultValues, { keepDirty: false});\r\n  }\r\n\r\n  const handleCancelCreateUser = () => {\r\n    navigate('/user');   \r\n  };\r\n\r\n  const handleRoleSelect=(e: any)=>{\r\n      setValue('role', e);\r\n  }\r\n\r\n  const handleImageUpload = (image: ImageData) => {\r\n    setUserImage(image);\r\n  }\r\n\r\n  const handleImageUploadError = (error: any) => {\r\n    toast.error(`User image upload failed`);\r\n  }\r\n  \r\n  const handleDeleteImage = () => {\r\n    setUserImage(undefined);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <div className={\"col-md-12 form-wrapper\"}>\r\n      <h2> Create User </h2>\r\n      {errorList && <ListErrors errors={errorList} />}\r\n      <form id={\"create-User-form\"} onSubmit={handleSubmit(onSubmit)} noValidate={true}>\r\n\r\n        <div className=\"form-group col-md-4\">\r\n          <div className=\"row\">\r\n            <label className=\"col-md-2\"> Image: </label>\r\n            { userImage && \r\n              <button className=\"btn btn-secondary col-md-3\"  onClick={ () => handleDeleteImage() } >\r\n                Delete Image\r\n              </button>  \r\n            }  \r\n            <ImageUpload onImageUpload={handleImageUpload} onImageUploadError={handleImageUploadError} resize={imageMaxSize}/>                \r\n            </div>\r\n        </div>\r\n        <div className=\"form-group col-md-12\">\r\n          {UserImage()}  \r\n          <br/>\r\n\r\n          <label htmlFor=\"username\"> Title </label>\r\n          <input \r\n            type=\"text\"\r\n            placeholder=\"Enter user name\"\r\n            {...register('username')}\r\n            className={`form-control ${errors.username ? 'is-invalid' : ''}`} \r\n          />\r\n          <div className=\"invalid-feedback\">{errors.username?.message}</div>\r\n        </div>\r\n\r\n        <div className=\"form-group col-md-12\">\r\n          <label htmlFor=\"email\"> Email </label>\r\n          <input \r\n            type=\"text\" \r\n            placeholder=\"Enter email\"\r\n            {...register('email')}\r\n            className={`form-control ${errors.email ? 'is-invalid' : ''}`} \r\n          />\r\n          <div className=\"invalid-feedback\">{errors.email?.message}</div>\r\n        </div>\r\n\r\n        <div className=\"form-group col-md-12\">\r\n          <label htmlFor=\"password\"> Enter Password </label>\r\n          <input \r\n            type=\"text\" \r\n            placeholder=\"Enter password\" \r\n            {...register('password')}\r\n            className={`form-control ${errors.password ? 'is-invalid' : ''}`}           \r\n          />\r\n          <div className=\"invalid-feedback\">{errors.password?.message}</div>\r\n        </div>\r\n\r\n        <div className=\"form-group \">\r\n          <div className=\"row\">\r\n            <DropdownButton title=\"Select Role\" onSelect={handleRoleSelect} className=\"col-md-1\">\r\n                <Dropdown.Item eventKey='user'>User</Dropdown.Item>\r\n                <Dropdown.Item eventKey='admin'>Admin</Dropdown.Item>\r\n            </DropdownButton>\r\n            <input style={ {float: 'right'} }    \r\n              type=\"text\" disabled  placeholder=\"no role selected\" \r\n              {...register('role')}\r\n              className={`col-md-1 form-control float-right ${errors.role ? 'is-invalid' : ''}`}           \r\n            />\r\n          </div>\r\n          <div className=\"invalid-feedback\">{errors.role?.message}</div>\r\n        </div>\r\n\r\n        <div className=\"form-group col-md-4 pull-right\">\r\n          <button className=\"btn btn-success\"  disabled={!isDirty} type=\"submit\">\r\n            Create\r\n          </button>\r\n          {isLoading &&\r\n            <span className=\"fa fa-circle-o-notch fa-spin\" />\r\n          }\r\n        </div>\r\n\r\n        <div className=\"form-group col-md-1 pull-right\">\r\n          <button className=\"btn btn-secondary\" disabled={!isDirty} onClick={ () => handleClearCreateUser() } >\r\n            Reset\r\n          </button>\r\n          {isLoading &&\r\n            <span className=\"fa fa-circle-o-notch fa-spin\" />\r\n          }\r\n        </div>\r\n\r\n      </form>\r\n\r\n      <div className=\"form-group col-md-1 pull-right\">\r\n              <CancelButton prompt={isDirty} message={cancelCreateUserMessage()} onClick={() => handleCancelCreateUser()} className=\"btn btn-danger\">Cancel</CancelButton>\r\n            </div>\r\n\r\n    </div>\r\n  </div>\r\n  );\r\n\r\n}\r\nexport default CreateUser\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\post\\\\EditPostContent.tsx\";\nimport React, { useRef } from \"react\";\nimport JoditEditor from \"jodit-react\";\n\nconst EditPostContent = ({\n  className,\n  content,\n  onCancelEditing,\n  onSaveContent,\n  onChangeContent\n}) => {\n  const editor = useRef(null);\n  const config = {\n    readonly: false,\n    height: 400\n  };\n  let editedContent = '' + content;\n\n  const handleSaveContent = () => {\n    onSaveContent(editedContent);\n  };\n\n  const handleCancelEditing = () => {\n    if (onCancelEditing) {\n      onCancelEditing();\n    }\n  };\n\n  const handleChangeContent = () => {\n    if (onChangeContent) {\n      onChangeContent(editedContent);\n    }\n  };\n\n  onCancelEditing;\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"React Editors\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Start editing to see some magic happen!\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-secondary\",\n    onClick: () => handleSaveContent(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Save\"), React.createElement(\"button\", {\n    className: \"btn btn-secondary\",\n    onClick: () => handleCancelEditing(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Cancel\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(JoditEditor, {\n    ref: editor,\n    value: editedContent,\n    config: config,\n    onChange: handleChangeContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: content\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })));\n};\n\nexport default EditPostContent;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/post/EditPostContent.tsx"],"names":["React","useRef","JoditEditor","EditPostContent","className","content","onCancelEditing","onSaveContent","onChangeContent","editor","config","readonly","height","editedContent","handleSaveContent","handleCancelEditing","handleChangeContent","__html"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,aAAxB;;AAaA,MAAMC,eAA+C,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,eAArB;AAAsCC,EAAAA,aAAtC;AAAqDC,EAAAA;AAArD,CAAD,KAA2E;AAE/H,QAAMC,MAAM,GAAGR,MAAM,CAAC,IAAD,CAArB;AACA,QAAMS,MAAM,GAAG;AACXC,IAAAA,QAAQ,EAAE,KADC;AAEXC,IAAAA,MAAM,EAAE;AAFG,GAAf;AAKA,MAAIC,aAAqB,GAAG,KAAKR,OAAjC;;AAEA,QAAMS,iBAAiB,GAAG,MAAM;AAC5BP,IAAAA,aAAa,CAACM,aAAD,CAAb;AACH,GAFD;;AAIA,QAAME,mBAAmB,GAAG,MAAM;AAC9B,QAAIT,eAAJ,EAAqB;AACjBA,MAAAA,eAAe;AAClB;AACJ,GAJD;;AAMA,QAAMU,mBAAmB,GAAG,MAAM;AAC9B,QAAIR,eAAJ,EAAqB;AACjBA,MAAAA,eAAe,CAACK,aAAD,CAAf;AACH;AACJ,GAJD;;AAMAP,EAAAA,eAAe;AAEf,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAQ,IAAA,SAAS,EAAC,mBAAlB;AAAsC,IAAA,OAAO,EAAE,MAAMQ,iBAAiB,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAIA;AAAQ,IAAA,SAAS,EAAC,mBAAlB;AAAsC,IAAA,OAAO,EAAE,MAAMC,mBAAmB,EAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,CAHJ,EAWC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,WAAD;AACI,IAAA,GAAG,EAAEN,MADT;AAEI,IAAA,KAAK,EAAEI,aAFX;AAGI,IAAA,MAAM,EAAEH,MAHZ;AAII,IAAA,QAAQ,EAAEM,mBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAOG;AAAK,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEZ;AAAV,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPH,CAXD,CADJ;AAuBH,CAnDD;;AAqDA,eAAeF,eAAf","sourcesContent":["import React, { useRef } from \"react\";\r\nimport JoditEditor from \"jodit-react\";\r\n\r\ntype ViewPostContentProps = React.HTMLProps<HTMLElement> & {\r\n    content: string,\r\n    onSaveContent: onSaveContent,\r\n    onCancelEditing?: onCancelEditing,\r\n    onChangeContent?: onChangeContent,\r\n  }\r\n\r\nexport type onChangeContent = (content: string) => void;\r\nexport type onCancelEditing = () => void;\r\nexport type onSaveContent = (content: string) => void;\r\n\r\nconst EditPostContent: React.FC<ViewPostContentProps> = ({className, content, onCancelEditing, onSaveContent, onChangeContent}) => {\r\n\r\n    const editor = useRef(null);\r\n    const config = {\r\n        readonly: false,\r\n        height: 400\r\n    };\r\n\r\n    let editedContent: string = '' + content;\r\n\r\n    const handleSaveContent = () => {\r\n        onSaveContent(editedContent);\r\n    };\r\n\r\n    const handleCancelEditing = () => {\r\n        if (onCancelEditing) {\r\n            onCancelEditing();\r\n        }\r\n    };\r\n\r\n    const handleChangeContent = () => {\r\n        if (onChangeContent) {\r\n            onChangeContent(editedContent);\r\n        }\r\n    };\r\n\r\n    onCancelEditing\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>React Editors</h1>\r\n            <h2>Start editing to see some magic happen!</h2>\r\n            <div>\r\n            <button className=\"btn btn-secondary\" onClick={() => handleSaveContent()} >\r\n                Save \r\n            </button>                 \r\n            <button className=\"btn btn-secondary\" onClick={() => handleCancelEditing()} >\r\n                Cancel\r\n            </button> \r\n           </div>\r\n         <div>\r\n            <JoditEditor\r\n                ref={editor}\r\n                value={editedContent}\r\n                config={config}\r\n                onChange={handleChangeContent}\r\n            />\r\n            <div dangerouslySetInnerHTML={{ __html: content }} />\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default EditPostContent;"]},"metadata":{},"sourceType":"module"}
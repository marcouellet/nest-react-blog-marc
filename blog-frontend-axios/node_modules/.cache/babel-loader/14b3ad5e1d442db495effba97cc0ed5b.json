{"ast":null,"code":"import _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\category\\\\ListCategories.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport { CategoryApiService } from \"../../services/api/CategoryApiService\";\nimport { UserRole } from \"../../types\";\nimport useAuth from '../../contexts/auth';\nimport { createActionLoading } from '../../reducers/auth';\nimport ListErrors from '../common/ListErrors';\nimport DeleteButton from '../common/deleteConfirmation';\nimport { checkUnauthorized } from '../../utils/html.response.utils';\nimport { createActionSessionExpired } from '../../reducers/auth';\nimport { PostApiService } from '../../services/api/PostApiService';\n\nconst ListCategories = () => {\n  const navigate = useNavigate();\n\n  const _useAuth = useAuth(),\n        _useAuth$state = _useAuth.state,\n        user = _useAuth$state.user,\n        isAuthenticated = _useAuth$state.isAuthenticated,\n        isLoading = _useAuth$state.isLoading,\n        dispatch = _useAuth.dispatch;\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        errors = _React$useState2[0],\n        setErrors = _React$useState2[1];\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        categories = _useState2[0],\n        setCategorys = _useState2[1];\n\n  const isAdministrator = () => isAuthenticated && (user === null || user === void 0 ? void 0 : user.role) === UserRole.ADMIN;\n\n  const _removeCategoryFromView = id => {\n    const index = categories.findIndex(category => category.id === id);\n    categories.splice(index, 1);\n  };\n\n  const deleteCategoryMessage = category => `${category.title} Category`;\n\n  const handleDeleteCategory = async id => {\n    dispatch(createActionLoading(true));\n    const postscount = await PostApiService.getNumberOfPostsForCategory(id);\n\n    if (postscount) {\n      toast.error(`Category has linked posts, delete them first`);\n      dispatch(createActionLoading(false));\n    } else {\n      await CategoryApiService.deleteCategory(id).then(() => handleDeleteCategorySuccess()).catch(apiErrors => handleDeleteCategoryError(apiErrors));\n      dispatch(createActionLoading(false));\n\n      _removeCategoryFromView(id);\n\n      navigate('/category');\n    }\n  };\n\n  const handleDeleteCategorySuccess = () => {\n    toast.success(`Category deleted successfully...`);\n  };\n\n  const handleDeleteCategoryError = apiErrors => {\n    if (checkUnauthorized(apiErrors)) {\n      toast.error(`Category delete failed, session expired`);\n      dispatch(createActionSessionExpired());\n      navigate('/category');\n    } else {\n      toast.error(`Category delete failed, see error list`);\n      setErrors(apiErrors);\n    }\n  };\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      dispatch(createActionLoading(true));\n      CategoryApiService.getAllCategories().then(users => setCategorys(users));\n      dispatch(createActionLoading(false));\n    };\n\n    fetchCategories();\n  }, [dispatch]);\n  return React.createElement(\"section\", {\n    className: \"blog-area section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, errors && React.createElement(ListErrors, {\n    errors: errors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, isAdministrator() && !isLoading && React.createElement(Link, {\n    to: `/category/create`,\n    className: \"btn btn-sm btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Create Category\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    className: \"col-md-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    className: \"col-md-15\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Description\"), React.createElement(\"th\", {\n    className: \"col-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Actions\")), categories && categories.map(category => React.createElement(\"tr\", {\n    key: category.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, category.title), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, category.description), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, !isLoading && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/category/${category.id}`,\n    className: \"btn btn-sm btn-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"View\")), isAdministrator() && !isLoading && React.createElement(Link, {\n    to: `/category/edit/${category.id}`,\n    className: \"btn btn-sm btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Edit\"), isAdministrator() && !isLoading && React.createElement(DeleteButton, {\n    message: deleteCategoryMessage(category),\n    onClick: () => handleDeleteCategory(category.id),\n    className: \"btn btn-sm btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Delete\")))))))));\n};\n\nexport default ListCategories;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/category/ListCategories.tsx"],"names":["React","useState","useEffect","Table","Link","useNavigate","toast","CategoryApiService","UserRole","useAuth","createActionLoading","ListErrors","DeleteButton","checkUnauthorized","createActionSessionExpired","PostApiService","ListCategories","navigate","state","user","isAuthenticated","isLoading","dispatch","errors","setErrors","categories","setCategorys","isAdministrator","role","ADMIN","_removeCategoryFromView","id","index","findIndex","category","splice","deleteCategoryMessage","title","handleDeleteCategory","postscount","getNumberOfPostsForCategory","error","deleteCategory","then","handleDeleteCategorySuccess","catch","apiErrors","handleDeleteCategoryError","success","fetchCategories","getAllCategories","users","map","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { toast } from \"react-toastify\";\r\nimport { CategoryApiService } from \"../../services/api/CategoryApiService\";\r\nimport { ICategory, UserRole } from \"../../types\";\r\nimport useAuth from '../../contexts/auth';\r\nimport { createActionLoading } from '../../reducers/auth';\r\nimport ListErrors from '../common/ListErrors';\r\nimport { IErrors } from '../../types';\r\nimport DeleteButton from '../common/deleteConfirmation'\r\nimport { checkUnauthorized } from '../../utils/html.response.utils';\r\nimport { createActionSessionExpired } from '../../reducers/auth';\r\nimport { PostApiService } from '../../services/api/PostApiService';\r\n\r\nconst ListCategories = () => {\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  const { state: { user, isAuthenticated, isLoading}, dispatch } = useAuth();\r\n\r\n  const [errors, setErrors] = React.useState<IErrors | null>();\r\n\r\n  const [categories, setCategorys] = useState<ICategory[]>([]);\r\n\r\n  const isAdministrator = () => isAuthenticated && user?.role === UserRole.ADMIN;\r\n\r\n  const _removeCategoryFromView = (id: string) => {\r\n    const index = categories.findIndex((category: ICategory) => category.id! === id);\r\n    categories.splice(index, 1);\r\n  }\r\n\r\n  const deleteCategoryMessage = (category: ICategory) => `${category.title} Category`;\r\n\r\n  const handleDeleteCategory = async (id: string) => {\r\n    dispatch(createActionLoading(true));\r\n    const postscount = await PostApiService.getNumberOfPostsForCategory(id);\r\n    if (postscount) {\r\n      toast.error(`Category has linked posts, delete them first`);\r\n      dispatch(createActionLoading(false));\r\n    } else {\r\n      await CategoryApiService.deleteCategory(id)\r\n      .then(() => handleDeleteCategorySuccess())\r\n      .catch((apiErrors: IErrors) => handleDeleteCategoryError(apiErrors))\r\n      dispatch(createActionLoading(false));\r\n      _removeCategoryFromView(id);\r\n      navigate('/category'); \r\n    }\r\n  }\r\n\r\n  const handleDeleteCategorySuccess = () => {\r\n    toast.success(`Category deleted successfully...`);\r\n  }\r\n\r\n  const handleDeleteCategoryError = (apiErrors: IErrors) => {\r\n    if (checkUnauthorized(apiErrors)) {\r\n      toast.error(`Category delete failed, session expired`);\r\n      dispatch(createActionSessionExpired());\r\n      navigate('/category'); \r\n    } else {\r\n      toast.error(`Category delete failed, see error list`);\r\n      setErrors(apiErrors);      \r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchCategories = async (): Promise<void> => {\r\n      dispatch(createActionLoading(true));\r\n      CategoryApiService.getAllCategories()\r\n        .then(users => setCategorys(users));\r\n      dispatch(createActionLoading(false));\r\n    }\r\n    fetchCategories();\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <section className=\"blog-area section\">\r\n      {errors && <ListErrors errors={errors} />}\r\n      <div className=\"container\">\r\n        <div>\r\n          {\r\n            isAdministrator() && !isLoading && \r\n            (\r\n                <Link to={`/category/create`} className=\"btn btn-sm btn-primary\">Create Category</Link>\r\n            )\r\n          }\r\n        </div>\r\n        <br/>\r\n        <div>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <th className=\"col-md-3\">\r\n                Name\r\n              </th>\r\n              <th className=\"col-md-15\">\r\n                Description\r\n              </th>\r\n              <th className=\"col-md-2\">\r\n                Actions\r\n              </th>\r\n            </thead>\r\n            {\r\n              categories && categories.map((category: ICategory) => \r\n              (\r\n                <tr key={category.id}>\r\n                  <td>\r\n                    {category.title}\r\n                  </td>\r\n                  <td>\r\n                    {category.description}\r\n                  </td>\r\n                  <td>\r\n                    <div className=\"row\">\r\n                      {\r\n                          !isLoading &&\r\n                          (\r\n                            <p>\r\n                              <Link to={`/category/${category.id}`} className=\"btn btn-sm btn-info\">View</Link>\r\n                            </p>\r\n                          )\r\n                      }\r\n                      {\r\n                        isAdministrator() && !isLoading && \r\n                        (\r\n                            <Link to={`/category/edit/${category.id}`} className=\"btn btn-sm btn-primary\">Edit</Link> \r\n                        )              \r\n                      }\r\n                      {\r\n                        isAdministrator() && !isLoading &&  \r\n                        (                   \r\n                            <DeleteButton message={deleteCategoryMessage(category)} onClick={() => handleDeleteCategory(category.id!)} \r\n                              className=\"btn btn-sm btn-danger\">Delete</DeleteButton>\r\n                        )\r\n                      }\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            }\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    );\r\n}\r\n\r\nexport default ListCategories;\r\n"]},"metadata":{},"sourceType":"module"}
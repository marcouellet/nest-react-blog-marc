{"ast":null,"code":"import HttpApiService from \"./HttpApiService\";\nconst POST_ENDPOINT = `/post`;\n\nclass PostApi extends HttpApiService {\n  constructor(...args) {\n    super(...args);\n\n    this.getPostById = id => {\n      return super.get(`${POST_ENDPOINT}/${id}`);\n    };\n\n    this.getNumberOfPostsForUser = userId => {\n      return super.getCount(`${POST_ENDPOINT}/count/user/${userId}`);\n    };\n\n    this.getNumberOfPostsForCategory = categoryId => {\n      return super.getCount(`${POST_ENDPOINT}/count/category/${categoryId}`);\n    };\n\n    this.findManyPosts = postTitleFilter => {\n      return super.findMany(`${POST_ENDPOINT}/findMany`, {\n        title: postTitleFilter\n      });\n    };\n\n    this.findManyPostsForCategory = (categoryId, postTitleFilter) => {\n      return super.findMany(`${POST_ENDPOINT}/findMany/category/${categoryId}`, {\n        title: postTitleFilter\n      });\n    };\n\n    this.findManyPostsWithoutCategory = postTitleFilter => {\n      return super.findMany(`${POST_ENDPOINT}/findMany/nocategory}`, {\n        title: postTitleFilter\n      });\n    };\n\n    this.createPost = data => {\n      return super.create(`${POST_ENDPOINT}/create`, data);\n    };\n\n    this.updatePost = (id, data) => {\n      return super.update(`${POST_ENDPOINT}/update/${id}`, data);\n    };\n\n    this.deletePost = id => {\n      return super.delete(`${POST_ENDPOINT}/delete/${id}`);\n    };\n  }\n\n}\n\nexport const PostApiService = new PostApi();","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/services/api/PostApiService.ts"],"names":["HttpApiService","POST_ENDPOINT","PostApi","getPostById","id","get","getNumberOfPostsForUser","userId","getCount","getNumberOfPostsForCategory","categoryId","findManyPosts","postTitleFilter","findMany","title","findManyPostsForCategory","findManyPostsWithoutCategory","createPost","data","create","updatePost","update","deletePost","delete","PostApiService"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,kBAA3B;AAGA,MAAMC,aAAa,GAAI,OAAvB;;AAEA,MAAMC,OAAN,SAAsBF,cAAtB,CAA4C;AAAA;AAAA;;AAAA,SAE1CG,WAF0C,GAE3BC,EAAD,IAAgB;AAC5B,aAAO,MAAMC,GAAN,CAAW,GAAEJ,aAAc,IAAGG,EAAG,EAAjC,CAAP;AACD,KAJyC;;AAAA,SAM1CE,uBAN0C,GAMfC,MAAD,IAAoB;AAC5C,aAAO,MAAMC,QAAN,CAAgB,GAAEP,aAAc,eAAcM,MAAO,EAArD,CAAP;AACD,KARyC;;AAAA,SAU1CE,2BAV0C,GAUXC,UAAD,IAAwB;AACpD,aAAO,MAAMF,QAAN,CAAgB,GAAEP,aAAc,mBAAkBS,UAAW,EAA7D,CAAP;AACD,KAZyC;;AAAA,SAc1CC,aAd0C,GAczBC,eAAD,IAA6B;AAC3C,aAAO,MAAMC,QAAN,CAAgB,GAAEZ,aAAc,WAAhC,EAA4C;AAACa,QAAAA,KAAK,EAAEF;AAAR,OAA5C,CAAP;AACD,KAhByC;;AAAA,SAkB1CG,wBAlB0C,GAkBf,CAACL,UAAD,EAAqBE,eAArB,KAAiD;AAC1E,aAAO,MAAMC,QAAN,CAAgB,GAAEZ,aAAc,sBAAqBS,UAAW,EAAhE,EAAmE;AAACI,QAAAA,KAAK,EAAEF;AAAR,OAAnE,CAAP;AACD,KApByC;;AAAA,SAsB1CI,4BAtB0C,GAsBVJ,eAAD,IAA6B;AAC1D,aAAO,MAAMC,QAAN,CAAgB,GAAEZ,aAAc,uBAAhC,EAAwD;AAACa,QAAAA,KAAK,EAAEF;AAAR,OAAxD,CAAP;AACD,KAxByC;;AAAA,SA0B1CK,UA1B0C,GA0B5BC,IAAD,IAAiB;AAC5B,aAAO,MAAMC,MAAN,CAAc,GAAElB,aAAc,SAA9B,EAAwCiB,IAAxC,CAAP;AACD,KA5ByC;;AAAA,SA8B1CE,UA9B0C,GA8B7B,CAAChB,EAAD,EAAac,IAAb,KAAmC;AAC9C,aAAO,MAAMG,MAAN,CAAc,GAAEpB,aAAc,WAAUG,EAAG,EAA3C,EAA8Cc,IAA9C,CAAP;AACD,KAhCyC;;AAAA,SAkC1CI,UAlC0C,GAkC5BlB,EAAD,IAAgB;AAC3B,aAAO,MAAMmB,MAAN,CAAc,GAAEtB,aAAc,WAAUG,EAAG,EAA3C,CAAP;AACD,KApCyC;AAAA;;AAAA;;AAuC5C,OAAO,MAAMoB,cAAc,GAAG,IAAItB,OAAJ,EAAvB","sourcesContent":["import HttpApiService from \"./HttpApiService\";\r\nimport { IPost, IUpdatePost } from \"../../types\";\r\n\r\nconst POST_ENDPOINT = `/post`;\r\n\r\nclass PostApi extends HttpApiService<IPost> {\r\n \r\n  getPostById = (id: string) => {\r\n    return super.get(`${POST_ENDPOINT}/${id}`);\r\n  };\r\n\r\n  getNumberOfPostsForUser = (userId: string) => {\r\n    return super.getCount(`${POST_ENDPOINT}/count/user/${userId}`);\r\n  };\r\n\r\n  getNumberOfPostsForCategory = (categoryId: string) => {\r\n    return super.getCount(`${POST_ENDPOINT}/count/category/${categoryId}`);\r\n  };\r\n\r\n  findManyPosts = (postTitleFilter: string) => {\r\n    return super.findMany(`${POST_ENDPOINT}/findMany`, {title: postTitleFilter});\r\n  }\r\n\r\n  findManyPostsForCategory = (categoryId: string, postTitleFilter: string) => {\r\n    return super.findMany(`${POST_ENDPOINT}/findMany/category/${categoryId}`, {title: postTitleFilter});\r\n  };\r\n\r\n  findManyPostsWithoutCategory = (postTitleFilter: string) => {\r\n    return super.findMany(`${POST_ENDPOINT}/findMany/nocategory}`, {title: postTitleFilter});\r\n  };\r\n\r\n  createPost = (data: IPost) => {\r\n    return super.create(`${POST_ENDPOINT}/create`, data);\r\n  };\r\n\r\n  updatePost = (id: string, data: IUpdatePost) => {\r\n    return super.update(`${POST_ENDPOINT}/update/${id}`, data);\r\n  };\r\n\r\n  deletePost = (id: string) => {\r\n    return super.delete(`${POST_ENDPOINT}/delete/${id}`);\r\n  };\r\n}\r\n\r\nexport const PostApiService = new PostApi();"]},"metadata":{},"sourceType":"module"}
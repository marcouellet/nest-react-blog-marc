{"ast":null,"code":"import _objectSpread from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\Navbar.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport useAuth from '../contexts/auth';\nimport { createActionLogout } from '../reducers/auth';\nimport AUTHAPI from '../services/api/AuthApiService';\nimport { toast } from \"react-toastify\";\nimport { UserRole, createUserForUpdate } from '../types';\nimport ImageUpload from './common/ImageUpload';\nimport ViewUserInfo from './user/ViewUserInfo';\nimport { createActionLoading, createActionSessionExpired, createActionUpdateUser } from '../reducers/auth';\nimport { UserApiService } from \"../services/api/UserApiService\";\nimport { checkUnauthorized, checkForbidden } from '../utils/html.response.utils';\n\nconst Navbar = () => {\n  const _useAuth = useAuth(),\n        _useAuth$state = _useAuth.state,\n        user = _useAuth$state.user,\n        isAuthenticated = _useAuth$state.isAuthenticated,\n        isLoading = _useAuth$state.isLoading,\n        dispatch = _useAuth.dispatch;\n\n  const navigate = useNavigate();\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        userImage = _useState2[0],\n        setUserImage = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        imageChanged = _useState4[0],\n        setImageChanged = _useState4[1];\n\n  useEffect(() => {\n    setImageData(undefined);\n    setImageData(user === null || user === void 0 ? void 0 : user.image); // eslint-disable-next-line\n  }, [user]);\n\n  const handleLogout = () => {\n    dispatch(createActionLogout());\n    AUTHAPI.logout();\n    toast.info(`${user.username} is logged out`);\n    setTimeout(() => {\n      navigate('/');\n    }, 1500);\n  };\n\n  const isAdministrator = () => isAuthenticated && (user === null || user === void 0 ? void 0 : user.role) === UserRole.ADMIN;\n\n  const handleImageUpload = image => {\n    setImageData(undefined);\n    setImageData(image);\n  };\n\n  const handleDeleteImage = () => {\n    setImageData(undefined);\n  };\n\n  const handleCancelImage = () => {\n    setImageData(user === null || user === void 0 ? void 0 : user.image);\n  };\n\n  const handleSaveImage = async () => {\n    dispatch(createActionLoading(true));\n    const image = userImage;\n    const userData = createUserForUpdate(_objectSpread({}, user, {\n      image\n    }));\n    await UserApiService.updateUser(user.id, userData).then(user => {\n      dispatch(createActionUpdateUser(user));\n      handleSaveImageSuccess();\n    }).catch(apiErrors => {\n      handleSaveImageError(apiErrors);\n    });\n    dispatch(createActionLoading(false));\n  };\n\n  const handleSaveImageSuccess = () => {\n    setImageChanged(false);\n    toast.success(`User image updated successfully...`);\n  };\n\n  const handleSaveImageError = apiErrors => {\n    if (checkForbidden(apiErrors)) {\n      toast.error(`User image update failed, session expired`);\n      dispatch(createActionSessionExpired());\n      navigate('/user');\n    } else if (checkUnauthorized(apiErrors)) {\n      toast.error(`Access denied`);\n    } else {\n      toast.error(`User image update failed, see error list`);\n    }\n  };\n\n  const setImageData = image => {\n    var _user$image;\n\n    const isImageDefined = image !== undefined;\n    const isInitialImageDefined = (user === null || user === void 0 ? void 0 : user.image) !== undefined;\n    const imageChanged = isImageDefined !== isInitialImageDefined || isImageDefined && (image === null || image === void 0 ? void 0 : image.base64) !== (user === null || user === void 0 ? void 0 : (_user$image = user.image) === null || _user$image === void 0 ? void 0 : _user$image.base64);\n    let newImage = undefined;\n\n    if (image) {\n      newImage = _objectSpread({}, image);\n    }\n\n    setUserImage(newImage);\n    setImageChanged(imageChanged);\n  };\n\n  const imageMaxSize = {\n    maxWidth: 600,\n    maxHeight: 400\n  };\n  const imageDisplayMaxSize = {\n    maxWidth: 260,\n    maxHeight: 260\n  };\n  return React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container-fluid position-relative no-side-padding\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"menu-nav-icon\",\n    \"data-nav-menu\": \"#main-menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"ion-navicon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), user && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, userImage && React.createElement(React.Fragment, null, React.createElement(ViewUserInfo, {\n    userToDisplay: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"col-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \" Image: \"), userImage && React.createElement(\"button\", {\n    className: \"btn btn-secondary col-md-2\",\n    onClick: () => handleDeleteImage(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Delete\"), imageChanged && React.createElement(\"div\", {\n    className: \"form-group col-md-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-secondary col-md-4\",\n    onClick: () => handleSaveImage(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Update\"), React.createElement(\"button\", {\n    className: \"btn btn-secondary col-md-4\",\n    onClick: () => handleCancelImage(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Cancel\")), React.createElement(ImageUpload, {\n    onImageUpload: handleImageUpload,\n    resize: imageMaxSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })))), React.createElement(\"ul\", {\n    className: \"main-menu visible-on-click\",\n    id: \"main-menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"nav-link\",\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \" Home \")), !isLoading && isAuthenticated && React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"nav-link\",\n    to: \"/post/create\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \" Create Post\")), !isLoading && !isAuthenticated && React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"nav-link\",\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \" Log In \")), !isLoading && !isAuthenticated && React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"nav-link\",\n    to: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \" Register \")), !isLoading && isAdministrator() && React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"nav-link\",\n    to: \"/user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \" Admin User\")), !isLoading && isAdministrator() && React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"nav-link\",\n    to: \"/category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \" Admin Category\")), !isLoading && user && React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Log Out\"))))));\n};\n\nexport default Navbar;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/Navbar.tsx"],"names":["React","useState","useEffect","Link","useNavigate","useAuth","createActionLogout","AUTHAPI","toast","UserRole","createUserForUpdate","ImageUpload","ViewUserInfo","createActionLoading","createActionSessionExpired","createActionUpdateUser","UserApiService","checkUnauthorized","checkForbidden","Navbar","state","user","isAuthenticated","isLoading","dispatch","navigate","userImage","setUserImage","imageChanged","setImageChanged","setImageData","undefined","image","handleLogout","logout","info","username","setTimeout","isAdministrator","role","ADMIN","handleImageUpload","handleDeleteImage","handleCancelImage","handleSaveImage","userData","updateUser","id","then","handleSaveImageSuccess","catch","apiErrors","handleSaveImageError","success","error","isImageDefined","isInitialImageDefined","base64","newImage","imageMaxSize","maxWidth","maxHeight","imageDisplayMaxSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport useAuth from '../contexts/auth';\r\nimport { createActionLogout } from '../reducers/auth';\r\nimport AUTHAPI from '../services/api/AuthApiService';\r\nimport { toast } from \"react-toastify\";\r\nimport { UserRole, ImageData, ImageSizeProps, createUserForUpdate, IUpdateUser, IErrors } from '../types';\r\nimport ImageUpload from './common/ImageUpload';\r\nimport ImageResize from './common/ImageResize';\r\nimport ViewUserInfo from './user/ViewUserInfo';\r\nimport { createActionLoading, createActionSessionExpired, createActionUpdateUser } from '../reducers/auth';\r\nimport { UserApiService } from \"../services/api/UserApiService\";\r\nimport { checkUnauthorized, checkForbidden } from '../utils/html.response.utils';\r\nimport ListErrors from './common/ListErrors';\r\n\r\nconst Navbar = () => {\r\n    const { state: { user, isAuthenticated, isLoading}, dispatch } = useAuth();\r\n    const navigate = useNavigate();\r\n    const [userImage, setUserImage] = useState<ImageData>();\r\n    const [imageChanged, setImageChanged] = useState<boolean>();\r\n\r\n    useEffect(() => {\r\n        setImageData(undefined);\r\n        setImageData(user?.image);\r\n      // eslint-disable-next-line\r\n      }, [user]);\r\n\r\n     const handleLogout = () => {\r\n        dispatch(createActionLogout());\r\n        AUTHAPI.logout();\r\n        toast.info(`${user!.username} is logged out`);\r\n        setTimeout(() => {\r\n            navigate('/');\r\n          }, 1500);\r\n      };\r\n\r\n    const isAdministrator = () => isAuthenticated && user?.role === UserRole.ADMIN;\r\n\r\n    const handleImageUpload = (image: ImageData) => {\r\n        setImageData(undefined);\r\n        setImageData(image);\r\n      }\r\n      \r\n    const handleDeleteImage = () => {\r\n        setImageData(undefined);\r\n    }\r\n\r\n    const handleCancelImage = () => {\r\n        setImageData(user?.image);\r\n    }\r\n\r\n    const handleSaveImage = async () => {\r\n        dispatch(createActionLoading(true));\r\n        const image: ImageData | undefined = userImage;\r\n        const userData: IUpdateUser = createUserForUpdate({...user!, image});\r\n        await UserApiService.updateUser(user!.id!, userData)\r\n        .then((user) => {\r\n            dispatch(createActionUpdateUser(user));\r\n            handleSaveImageSuccess(); \r\n        })\r\n        .catch((apiErrors: IErrors) =>  { handleSaveImageError(apiErrors); });\r\n        dispatch(createActionLoading(false));\r\n    }\r\n\r\n    const handleSaveImageSuccess = () => {\r\n        setImageChanged(false);\r\n        toast.success(`User image updated successfully...`);\r\n    }\r\n    \r\n    const handleSaveImageError = (apiErrors: IErrors) => {\r\n        if (checkForbidden(apiErrors)) {\r\n            toast.error(`User image update failed, session expired`);\r\n            dispatch(createActionSessionExpired());\r\n            navigate('/user'); \r\n        } else if (checkUnauthorized(apiErrors)) {\r\n            toast.error(`Access denied`);\r\n        } else {\r\n            toast.error(`User image update failed, see error list`);   \r\n        }\r\n    }\r\n\r\n    const setImageData = (image: ImageData | undefined) => {\r\n        const isImageDefined = image !== undefined;\r\n        const isInitialImageDefined = user?.image !== undefined;\r\n        const imageChanged = (isImageDefined !== isInitialImageDefined) ||\r\n                              (isImageDefined && image?.base64 !== user?.image?.base64);\r\n        let newImage: ImageData | undefined = undefined;\r\n        if (image) {\r\n            newImage = { ...image}\r\n        }\r\n        setUserImage(newImage);\r\n        setImageChanged(imageChanged);\r\n    }\r\n\r\n    const imageMaxSize: ImageSizeProps = {maxWidth:600, maxHeight:400};\r\n    const imageDisplayMaxSize: ImageSizeProps = {maxWidth:260, maxHeight:260};\r\n\r\n      return (\r\n        <header>\r\n            <div className=\"container-fluid position-relative no-side-padding\">\r\n                <div className=\"menu-nav-icon\" data-nav-menu=\"#main-menu\">\r\n                    <i className=\"ion-navicon\" />\r\n                </div>\r\n                { user && (\r\n                    <div>\r\n                        { userImage && \r\n                            <>\r\n                                <ViewUserInfo userToDisplay={user}/>\r\n                                {/* <ImageResize imageData={userImage} resize={imageDisplayMaxSize}/> */}\r\n                                <br/>\r\n                            </>\r\n                        }\r\n                        <br/>\r\n                        <div className=\"form-group col-md-4\">\r\n                            <div className=\"row\">\r\n                                <label className=\"col-md-2\"> Image: </label>\r\n                                { userImage && \r\n                                    <button className=\"btn btn-secondary col-md-2\"  onClick={ () => handleDeleteImage() } >\r\n                                        Delete\r\n                                    </button> \r\n                                }\r\n                                { imageChanged && \r\n                                        <div className=\"form-group col-md-5\">\r\n                                            <button className=\"btn btn-secondary col-md-4\"  onClick={ () => handleSaveImage() } >\r\n                                                Update\r\n                                            </button> \r\n                                            <button className=\"btn btn-secondary col-md-4\"  onClick={ () => handleCancelImage() } >\r\n                                                Cancel\r\n                                            </button>  \r\n                                        </div> \r\n                                                                                              \r\n                                }  \r\n                                <ImageUpload onImageUpload={handleImageUpload} resize={imageMaxSize}/>                \r\n                            </div>\r\n                        </div>\r\n                    </div>                \r\n                )}\r\n                <ul className=\"main-menu visible-on-click\" id=\"main-menu\">\r\n                    <li><Link className={\"nav-link\"} to={\"/\"}> Home </Link></li>\r\n                    {!isLoading && isAuthenticated && (\r\n                        <li><Link className={\"nav-link\"} to={\"/post/create\"}> Create Post</Link></li>\r\n                    )}\r\n                    {!isLoading && !isAuthenticated && (\r\n                        <li><Link className={\"nav-link\"} to={\"/login\"}> Log In </Link></li>\r\n                    )}\r\n                    {!isLoading && !isAuthenticated && (\r\n                        <li><Link className={\"nav-link\"} to={\"/register\"}> Register </Link></li>\r\n                    )}\r\n                    {!isLoading && isAdministrator() && (\r\n                        <li><Link className={\"nav-link\"} to={\"/user\"}> Admin User</Link></li>\r\n                    )}\r\n                    {!isLoading && isAdministrator() && (\r\n                        <li><Link className={\"nav-link\"} to={\"/category\"}> Admin Category</Link></li>\r\n                    )}\r\n                    {!isLoading && user && (\r\n                        <li>\r\n                            <div>\r\n                                <button className=\"btn\" onClick={handleLogout}>\r\n                                    Log Out \r\n                                </button>\r\n                            </div>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\common\\\\ImageResize.tsx\";\nimport React from 'react';\nimport { resizeImage } from '../../utils/image.utils';\nimport Image from '../common/Image';\n\nconst ImageResize = async props => {\n  // const [image, setImage] = useState<ImageData>();\n  await resizeImage(props.imageData, props.resize.maxWidth, props.resize.maxHeight).then(image => {\n    return React.createElement(Image, {\n      imageData: image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }); //setImage(imageData);\n  });\n}; //     return (\n//         <>\n//         { image && <Image imageData={image}/> }\n//         </>\n//     )\n// }\n\n\nexport default ImageResize;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/common/ImageResize.tsx"],"names":["React","resizeImage","Image","ImageResize","props","imageData","resize","maxWidth","maxHeight","then","image"],"mappings":";AAAA,OAAOA,KAAP,MAA2C,OAA3C;AAEA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;AAOA,MAAMC,WAAW,GAAG,MAAOC,KAAP,IAAmC;AAEnD;AAEA,QAAMH,WAAW,CAACG,KAAK,CAACC,SAAP,EAAkBD,KAAK,CAACE,MAAN,CAAaC,QAA/B,EAAyCH,KAAK,CAACE,MAAN,CAAaE,SAAtD,CAAX,CACDC,IADC,CACIC,KAAK,IAAI;AACX,WAAO,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP,CADW,CAEX;AACH,GAJC,CAAN;AAKH,CATD,C,CAWA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeP,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ImageData, ImageSizeProps } from '../../types';\r\nimport { resizeImage } from '../../utils/image.utils';\r\nimport Image from '../common/Image';\r\n\r\nexport interface ImageResizeProps {\r\n    imageData: ImageData,\r\n    resize: ImageSizeProps,\r\n}\r\n\r\nconst ImageResize = async (props: ImageResizeProps) => {\r\n\r\n    // const [image, setImage] = useState<ImageData>();\r\n\r\n    await resizeImage(props.imageData, props.resize.maxWidth, props.resize.maxHeight)\r\n        .then(image => {\r\n            return <Image imageData={image}/>\r\n            //setImage(imageData);\r\n        });\r\n}\r\n\r\n//     return (\r\n//         <>\r\n//         { image && <Image imageData={image}/> }\r\n//         </>\r\n//     )\r\n// }\r\n\r\nexport default ImageResize;\r\n"]},"metadata":{},"sourceType":"module"}
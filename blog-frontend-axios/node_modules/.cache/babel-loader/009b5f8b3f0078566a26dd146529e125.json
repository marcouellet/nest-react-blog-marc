{"ast":null,"code":"import _objectSpread from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\user\\\\EditUser.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\nimport * as Yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport CancelButton from '../common/cancelConfirmation';\nimport { createUserForUpdate, minimumPasswordLength, minimumEmailLength, minimumUserNameLength } from \"../../types\";\nimport { UserApiService } from \"../../services/api/UserApiService\";\nimport { createActionLoading } from '../../reducers/auth';\nimport useAuth from '../../contexts/auth';\nimport ListErrors from '../common/ListErrors';\nimport { checkUnauthorized, checkForbidden } from '../../utils/response';\nimport { createActionSessionExpired } from '../../reducers/auth';\n\nconst EditUser = () => {\n  var _errors$username, _errors$email, _errors$password, _errors$role;\n\n  const navigate = useNavigate();\n\n  const _useAuth = useAuth(),\n        isLoading = _useAuth.state.isLoading,\n        dispatch = _useAuth.dispatch;\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        errorList = _React$useState2[0],\n        setErrorList = _React$useState2[1];\n\n  const _useParams = useParams(),\n        userId = _useParams.userId;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('User name is required').min(minimumUserNameLength, `User name must be at least ${minimumUserNameLength} characters long`),\n    email: Yup.string().required('Email is required').min(minimumEmailLength, `Email must be at least ${minimumEmailLength} characters long`),\n    password: Yup.string().required('Password is required').min(minimumPasswordLength, `Password must be at least ${minimumPasswordLength} characters long`),\n    role: Yup.string().required('Role is required')\n  });\n  const defaultValues = {\n    username: user === null || user === void 0 ? void 0 : user.username,\n    email: user === null || user === void 0 ? void 0 : user.email,\n    password: '',\n    role: user === null || user === void 0 ? void 0 : user.role\n  };\n\n  const _useForm = useForm({\n    resolver: yupResolver(validationSchema),\n    defaultValues: defaultValues\n  }),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        reset = _useForm.reset,\n        setValue = _useForm.setValue,\n        _useForm$formState = _useForm.formState,\n        errors = _useForm$formState.errors,\n        isDirty = _useForm$formState.isDirty;\n\n  useEffect(() => {\n    if (!user) {\n      const fetchData = async () => {\n        dispatch(createActionLoading(true));\n        await UserApiService.getUserById(userId).then(user => {\n          setUser(user);\n          reset(user);\n        }).catch(apiErrors => handleFetchUserError(apiErrors));\n        dispatch(createActionLoading(false));\n      };\n\n      fetchData();\n    } // eslint-disable-next-line\n\n  }, []);\n\n  const onSubmit = async data => {\n    if (user && isDirty) {\n      dispatch(createActionLoading(true));\n      const userData = createUserForUpdate(_objectSpread({}, user, {}, data));\n      await UserApiService.updateUser(user.id, userData).then(() => {\n        handleSubmitFormSucess();\n      }).catch(apiErrors => {\n        handleSubmitFormError(apiErrors);\n      });\n      dispatch(createActionLoading(false));\n    }\n  };\n\n  const handleFetchUserError = apiErrors => {\n    toast.error(`User reading failed, see error list`);\n    setErrorList(apiErrors);\n  };\n\n  const handleSubmitFormSucess = () => {\n    toast.success(`User updated successfully...`);\n    navigate('/user');\n  };\n\n  const handleSubmitFormError = apiErrors => {\n    if (checkForbidden(apiErrors)) {\n      toast.error(`User update failed, session expired`);\n      dispatch(createActionSessionExpired());\n      navigate('/user');\n    } else if (checkUnauthorized(apiErrors)) {\n      toast.error(`Access denied`);\n    } else {\n      toast.error(`User update failed, see error list`);\n      setErrorList(apiErrors);\n    }\n  };\n\n  const cancelEditUserMessage = () => `user edition and loose changes`;\n\n  const handleResetEditUser = () => {\n    reset(defaultValues, {\n      keepDirty: false\n    });\n  };\n\n  const handleCancelEditUser = () => {\n    navigate('/');\n  };\n\n  const handleRoleSelect = e => {\n    setValue('role', e);\n  };\n\n  return React.createElement(\"div\", {\n    className: 'page-wrapper',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, user && React.createElement(\"div\", {\n    className: \"col-md-12 form-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \" Edit User  \"), errorList && React.createElement(ListErrors, {\n    errors: errorList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    id: \"create-user-form\",\n    onSubmit: handleSubmit(onSubmit),\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \" Title \"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter user name\"\n  }, register('username'), {\n    className: `form-control ${errors.username ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \" Email \"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter email\"\n  }, register('email'), {\n    className: `form-control ${errors.email ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \" Enter Password \"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter a value to change current password\"\n  }, register('password'), {\n    className: `form-control`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message)), React.createElement(\"div\", {\n    className: \"form-group \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(DropdownButton, {\n    title: \"Select Role\",\n    onSelect: handleRoleSelect,\n    className: \"col-md-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    eventKey: \"user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"User\"), React.createElement(Dropdown.Item, {\n    eventKey: \"admin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Admin\")), React.createElement(\"input\", Object.assign({\n    style: {\n      float: 'right'\n    },\n    type: \"text\",\n    disabled: true,\n    placeholder: \"no role selected\"\n  }, register('role'), {\n    className: `col-md-1 form-control float-right ${errors.role ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, (_errors$role = errors.role) === null || _errors$role === void 0 ? void 0 : _errors$role.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-4 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    disabled: !isDirty,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Update\"), isLoading && React.createElement(\"span\", {\n    className: \"fa fa-circle-o-notch fa-spin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group col-md-1 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-secondary\",\n    disabled: !isDirty,\n    onClick: () => handleResetEditUser(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"Reset\"), isLoading && React.createElement(\"span\", {\n    className: \"fa fa-circle-o-notch fa-spin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group col-md-1 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(CancelButton, {\n    prompt: isDirty,\n    message: cancelEditUserMessage(),\n    onClick: () => handleCancelEditUser(),\n    className: \"btn btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"Cancel\"))));\n};\n\nexport default EditUser;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/user/EditUser.tsx"],"names":["React","useState","useEffect","useForm","useParams","useNavigate","toast","DropdownButton","Dropdown","Yup","yupResolver","CancelButton","createUserForUpdate","minimumPasswordLength","minimumEmailLength","minimumUserNameLength","UserApiService","createActionLoading","useAuth","ListErrors","checkUnauthorized","checkForbidden","createActionSessionExpired","EditUser","navigate","isLoading","state","dispatch","errorList","setErrorList","userId","user","setUser","validationSchema","object","shape","username","string","required","min","email","password","role","defaultValues","resolver","register","handleSubmit","reset","setValue","formState","errors","isDirty","fetchData","getUserById","then","catch","apiErrors","handleFetchUserError","onSubmit","data","userData","updateUser","id","handleSubmitFormSucess","handleSubmitFormError","error","success","cancelEditUserMessage","handleResetEditUser","keepDirty","handleCancelEditUser","handleRoleSelect","e","message","float"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { toast } from \"react-toastify\";\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport * as Yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport CancelButton from '../common/cancelConfirmation'\r\nimport { IUser, IUpdateUser, createUserForUpdate, minimumPasswordLength, minimumEmailLength, \r\n        minimumUserNameLength } from \"../../types\";\r\nimport { UserApiService } from \"../../services/api/UserApiService\";\r\nimport { createActionLoading } from '../../reducers/auth';\r\nimport useAuth from '../../contexts/auth';\r\nimport ListErrors from '../common/ListErrors';\r\nimport { IErrors } from '../../types';\r\nimport { checkUnauthorized, checkForbidden } from '../../utils/response';\r\nimport { createActionSessionExpired } from '../../reducers/auth';\r\n\r\nconst EditUser = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const { state: { isLoading }, dispatch } = useAuth();\r\n  const [errorList, setErrorList] = React.useState<IErrors | null>();\r\n  const { userId } = useParams<{ userId: string }>();\r\n  const [user, setUser] = useState<IUser>();\r\n \r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string().required('User name is required')\r\n      .min(minimumUserNameLength, `User name must be at least ${minimumUserNameLength} characters long`),\r\n    email: Yup.string().required('Email is required')\r\n      .min(minimumEmailLength, `Email must be at least ${minimumEmailLength} characters long`),\r\n    password: Yup.string().required('Password is required')\r\n      .min(minimumPasswordLength, `Password must be at least ${minimumPasswordLength} characters long`),\r\n    role: Yup.string().required('Role is required'),\r\n  });\r\n\r\n  type UpdateSubmitForm = {\r\n    username: string;\r\n    email: string;\r\n    password: string;\r\n    role: string;\r\n  };\r\n\r\n  const defaultValues = {username: user?.username, email: user?.email, password: '', role: user?.role};\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    formState: { errors, isDirty }\r\n  } = useForm<UpdateSubmitForm>({\r\n    resolver: yupResolver(validationSchema),\r\n    defaultValues: defaultValues\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      const fetchData = async (): Promise<void> => {\r\n        dispatch(createActionLoading(true));\r\n        await UserApiService.getUserById(userId!)\r\n        .then((user) => { setUser(user); reset(user);})\r\n        .catch((apiErrors: IErrors) => handleFetchUserError(apiErrors));\r\n        dispatch(createActionLoading(false));\r\n       }\r\n      fetchData();      \r\n    }\r\n  // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onSubmit = async (data: UpdateSubmitForm) => {\r\n    if (user && isDirty) {\r\n      dispatch(createActionLoading(true));\r\n      const userData: IUpdateUser = createUserForUpdate({...user, ...data});\r\n      await UserApiService.updateUser(user.id!, userData)\r\n      .then(() => { handleSubmitFormSucess(); })\r\n      .catch((apiErrors: IErrors) =>  { handleSubmitFormError(apiErrors); });\r\n      dispatch(createActionLoading(false));\r\n     }\r\n  } \r\n\r\n  const handleFetchUserError = (apiErrors: IErrors) => {\r\n    toast.error(`User reading failed, see error list`);\r\n    setErrorList(apiErrors);\r\n  }\r\n\r\n  const handleSubmitFormSucess = () => {\r\n    toast.success(`User updated successfully...`);\r\n    navigate('/user'); \r\n  }\r\n\r\n  const handleSubmitFormError = (apiErrors: IErrors) => {\r\n    if (checkForbidden(apiErrors)) {\r\n      toast.error(`User update failed, session expired`);\r\n      dispatch(createActionSessionExpired());\r\n      navigate('/user'); \r\n    } else if (checkUnauthorized(apiErrors)) {\r\n      toast.error(`Access denied`);\r\n    } else {\r\n      toast.error(`User update failed, see error list`);\r\n      setErrorList(apiErrors);      \r\n    }\r\n}\r\n\r\nconst cancelEditUserMessage = () => `user edition and loose changes`;\r\n\r\nconst handleResetEditUser = () => {\r\n  reset(defaultValues, { keepDirty: false});\r\n}\r\n\r\nconst handleCancelEditUser = () => {\r\n  navigate('/');   \r\n};\r\n\r\nconst handleRoleSelect=(e: any)=>{\r\n  setValue('role', e);\r\n}\r\n\r\n  return (\r\n    <div className={'page-wrapper'}>\r\n    {user &&\r\n      (\r\n        <div className={\"col-md-12 form-wrapper\"}>\r\n          <h2> Edit User  </h2>\r\n          {errorList && <ListErrors errors={errorList} />}\r\n          <form id={\"create-user-form\"} onSubmit={handleSubmit(onSubmit)} noValidate={true}>\r\n            <div className=\"form-group col-md-12\">\r\n              <label htmlFor=\"username\"> Title </label>\r\n              <input \r\n                type=\"text\"\r\n                placeholder=\"Enter user name\"\r\n                {...register('username')}\r\n                className={`form-control ${errors.username ? 'is-invalid' : ''}`} \r\n              />\r\n              <div className=\"invalid-feedback\">{errors.username?.message}</div>\r\n           </div>\r\n\r\n            <div className=\"form-group col-md-12\">\r\n              <label htmlFor=\"email\"> Email </label>\r\n              <input \r\n                type=\"text\" \r\n                placeholder=\"Enter email\"\r\n                {...register('email')}\r\n                className={`form-control ${errors.email ? 'is-invalid' : ''}`} \r\n              />\r\n              <div className=\"invalid-feedback\">{errors.email?.message}</div>\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-12\">\r\n              <label htmlFor=\"password\"> Enter Password </label>\r\n              <input \r\n                type=\"text\" \r\n                placeholder=\"Enter a value to change current password\" \r\n                {...register('password')}\r\n                className={`form-control`}           \r\n              />\r\n              <div className=\"invalid-feedback\">{errors.password?.message}</div>\r\n            </div>\r\n\r\n            <div className=\"form-group \">\r\n              <div className=\"row\">\r\n                <DropdownButton title=\"Select Role\" onSelect={handleRoleSelect} className=\"col-md-1\">\r\n                    <Dropdown.Item eventKey='user'>User</Dropdown.Item>\r\n                    <Dropdown.Item eventKey='admin'>Admin</Dropdown.Item>\r\n                </DropdownButton>\r\n                <input style={ {float: 'right'} }    \r\n                  type=\"text\" disabled  placeholder=\"no role selected\" \r\n                  {...register('role')}\r\n                  className={`col-md-1 form-control float-right ${errors.role ? 'is-invalid' : ''}`}           \r\n                />\r\n              </div>\r\n              <div className=\"invalid-feedback\">{errors.role?.message}</div>\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-4 pull-right\">\r\n              <button className=\"btn btn-success\"  disabled={!isDirty} type=\"submit\">\r\n                Update\r\n              </button>\r\n              {isLoading &&\r\n                <span className=\"fa fa-circle-o-notch fa-spin\" />\r\n              }\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-1 pull-right\">\r\n              <button className=\"btn btn-secondary\" disabled={!isDirty} onClick={ () => handleResetEditUser() } >\r\n                Reset\r\n              </button>\r\n              {isLoading &&\r\n                <span className=\"fa fa-circle-o-notch fa-spin\" />\r\n              }\r\n            </div>\r\n          </form>\r\n\r\n          <div className=\"form-group col-md-1 pull-right\">\r\n              {\r\n              <CancelButton prompt={isDirty} message={cancelEditUserMessage()} onClick={() => handleCancelEditUser()} className=\"btn btn-danger\">Cancel</CancelButton>\r\n              }\r\n           </div>\r\n\r\n        </div>\r\n      )\r\n    }\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default EditUser;"]},"metadata":{},"sourceType":"module"}
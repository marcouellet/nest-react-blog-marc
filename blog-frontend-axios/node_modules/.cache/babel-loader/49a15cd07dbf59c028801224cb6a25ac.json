{"ast":null,"code":"import _objectSpread from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\user\\\\EditUser.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\nimport * as Yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport CancelButton from '../common/cancelConfirmation';\nimport { createUserForUpdate, minimumPasswordLength, minimumEmailLength, minimumUserNameLength } from \"../../types\";\nimport { UserApiService } from \"../../services/api/UserApiService\";\nimport { createActionLoading, createActionUpdateUser, createActionSessionExpired } from '../../reducers/auth';\nimport useAuth from '../../contexts/auth';\nimport ListErrors from '../common/ListErrors';\nimport { checkUnauthorized, checkSessionExpired, checkTimeout, getTokenFromErrors, checkSessionExtendable, extendSession, checkForbidden } from '../../utils/html.response.utils';\nimport Image from '../common/Image';\nimport ImageUpload from '../common/ImageUpload';\nimport ImageResize from '../common/ImageResize';\nimport { resizeImage } from '../../utils/image.utils';\n\nconst EditUser = () => {\n  var _errors$username, _errors$email, _errors$password, _errors$role;\n\n  const navigate = useNavigate();\n\n  const _useAuth = useAuth(),\n        user = _useAuth.state.user,\n        dispatch = _useAuth.dispatch;\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        errorList = _React$useState2[0],\n        setErrorList = _React$useState2[1];\n\n  const _useParams = useParams(),\n        userId = _useParams.userId;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        userEdited = _useState2[0],\n        setUserEdited = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userImage = _useState4[0],\n        setUserImage = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        userDefaultImage = _useState6[0],\n        setuserDefaultImage = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        submitForm = _useState8[0],\n        setSubmitForm = _useState8[1];\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('User name is required').min(minimumUserNameLength, `User name must be at least ${minimumUserNameLength} characters long`),\n    email: Yup.string().required('Email is required').min(minimumEmailLength, `Email must be at least ${minimumEmailLength} characters long`),\n    password: Yup.lazy(value => {\n      if (value && Object.values(value).some(v => !(v === null || v === undefined || v === \"\"))) {\n        // Return our normal validation\n        return Yup.string().required().min(minimumPasswordLength, `Password must be at least ${minimumPasswordLength} characters long`);\n      } // Otherwise, return a simple validation\n\n\n      return Yup.mixed().notRequired();\n    }),\n    confirmPassword: Yup.lazy(value => {\n      if (value && Object.values(value).some(v => !(v === null || v === undefined || v === \"\"))) {\n        // Return our normal validation\n        return Yup.string().required().min(minimumPasswordLength, `Password must be at least ${minimumPasswordLength} characters long`).when('password', {\n          is: password => password,\n          then: schema => schema.required()\n        }).oneOf([Yup.ref('password'), null], \"Passwords don't match!\");\n      } // Otherwise, return a simple validation\n\n\n      return Yup.string().when('password', {\n        is: password => {\n          return password && password.length > 0;\n        },\n        then: schema => schema.required()\n      });\n    }),\n    role: Yup.string().required('Role is required'),\n    imageChanged: Yup.bool()\n  });\n  const defaultValues = {\n    username: userEdited === null || userEdited === void 0 ? void 0 : userEdited.username,\n    email: userEdited === null || userEdited === void 0 ? void 0 : userEdited.email,\n    password: undefined,\n    role: userEdited === null || userEdited === void 0 ? void 0 : userEdited.role,\n    imageChanged: false\n  };\n\n  const _useForm = useForm({\n    resolver: yupResolver(validationSchema),\n    defaultValues: defaultValues\n  }),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        reset = _useForm.reset,\n        setValue = _useForm.setValue,\n        _useForm$formState = _useForm.formState,\n        errors = _useForm$formState.errors,\n        isDirty = _useForm$formState.isDirty;\n\n  useEffect(() => {\n    if (!userEdited) {\n      const fetchData = async () => {\n        dispatch(createActionLoading(true));\n        await getDefaultUserImage().then(imageData => {\n          setuserDefaultImage(imageData);\n        }).catch(error => {\n          throw new Error(error);\n        }).finally(() => dispatch(createActionLoading(false)));\n        await UserApiService.getUserById(userId).then(userRead => {\n          setUserEdited(userRead);\n          reset(userRead);\n          setUserImage(userRead === null || userRead === void 0 ? void 0 : userRead.image);\n        }).catch(apiErrors => handleFetchUserError(apiErrors)).finally(() => dispatch(createActionLoading(false)));\n      };\n\n      fetchData();\n    } // eslint-disable-next-line\n\n  }, []);\n  useEffect(() => {\n    if ((user === null || user === void 0 ? void 0 : user.email) === (userEdited === null || userEdited === void 0 ? void 0 : userEdited.email)) {\n      setImageData(user === null || user === void 0 ? void 0 : user.image);\n    } // eslint-disable-next-line\n\n  }, [user]);\n  const imageMaxSize = {\n    maxWidth: 200,\n    maxHeight: 200\n  };\n\n  const UserImage = () => {\n    if (userImage) {\n      return React.createElement(ImageResize, {\n        imageData: userImage,\n        resize: imageMaxSize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      });\n    } else {\n      return userDefaultImage && React.createElement(Image, {\n        imageData: userDefaultImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      });\n    }\n  };\n\n  const getDefaultUserImage = () => {\n    return resizeImage('/default-profil-image.jpg', 'image/jpg', imageMaxSize.maxWidth, imageMaxSize.maxHeight);\n  };\n\n  const onSubmit = async data => {\n    if (userEdited && isDirty && submitForm) {\n      dispatch(createActionLoading(true));\n      const image = userImage;\n      const userData = createUserForUpdate(_objectSpread({}, userEdited, {}, data, {\n        image\n      }));\n      await UserApiService.updateUser(userEdited.id, userData).then(userUpdated => {\n        handleSubmitFormSuccess(userUpdated);\n      }).catch(apiErrors => {\n        handleSubmitFormError(apiErrors);\n      });\n      dispatch(createActionLoading(false));\n    }\n  };\n\n  const handleSubmitForm = () => {\n    setSubmitForm(true);\n  };\n\n  const handleSubmitFormSuccess = userUpdated => {\n    setSubmitForm(false);\n    setUserEdited(userUpdated);\n\n    if ((user === null || user === void 0 ? void 0 : user.email) === (userUpdated === null || userUpdated === void 0 ? void 0 : userUpdated.email)) {\n      // Update state user to refresh user info in NavBar\n      dispatch(createActionUpdateUser(userUpdated));\n    }\n\n    toast.success(`User updated successfully...`);\n    navigate(`/user/${userEdited.id}`);\n  };\n\n  const handleSessionExpired = apiErrors => {\n    const token = getTokenFromErrors(apiErrors);\n\n    if (checkSessionExtendable(token)) {\n      toast.error(`${process} failed, session renewed, please try again`);\n      extendSession(token);\n    } else {\n      toast.error(`${process} failed, session expired`);\n      dispatch(createActionSessionExpired());\n    }\n  };\n\n  const handleApiErrors = (apiErrors, process) => {\n    if (checkForbidden(apiErrors)) {\n      const message = apiErrors['message'];\n      toast.error(`Profile update failed: ${message}`);\n    } else if (checkSessionExpired(apiErrors)) {\n      toast.error(`${process} failed, session expired`);\n      dispatch(createActionSessionExpired());\n    } else if (checkUnauthorized(apiErrors)) {\n      toast.error(`Access denied`);\n    } else if (checkTimeout(apiErrors)) {\n      toast.error(`Request timeout`);\n    } else {\n      toast.error(`${process} failed, see error list`);\n      setErrorList(apiErrors);\n    }\n  };\n\n  const handleFetchUserError = apiErrors => {\n    handleApiErrors(apiErrors, 'User reading');\n  };\n\n  const handleSubmitFormError = apiErrors => {\n    setSubmitForm(false);\n    handleApiErrors(apiErrors, 'User update');\n  };\n\n  const cancelEditUserMessage = () => `user edition and loose changes`;\n\n  const handleResetEditUser = () => {\n    setImageData(userEdited === null || userEdited === void 0 ? void 0 : userEdited.image);\n    reset(defaultValues, {\n      keepDirty: false\n    });\n  };\n\n  const handleCancelEditUser = () => {\n    navigate(`/user/${userEdited.id}`);\n  };\n\n  const handleRoleSelect = e => {\n    setValue('role', e, {\n      shouldDirty: true\n    });\n  };\n\n  const handleImageUpload = image => {\n    setImageData(image);\n  };\n\n  const handleImageUploadError = error => {\n    toast.error(`User image upload failed`);\n  };\n\n  const handleDeleteImage = () => {\n    setImageData(undefined);\n  };\n\n  const setImageData = image => {\n    var _user$image;\n\n    const isImageDefined = image !== undefined;\n    const isInitialImageDefined = (userEdited === null || userEdited === void 0 ? void 0 : userEdited.image) !== undefined;\n    const imageChanged = isImageDefined !== isInitialImageDefined || isImageDefined && (image === null || image === void 0 ? void 0 : image.base64) !== (user === null || user === void 0 ? void 0 : (_user$image = user.image) === null || _user$image === void 0 ? void 0 : _user$image.base64);\n    setValue('imageChanged', imageChanged, {\n      shouldDirty: true\n    });\n    setUserImage(image);\n  };\n\n  return React.createElement(\"div\", {\n    className: 'page-wrapper',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, userEdited && React.createElement(\"div\", {\n    className: \"col-md-12 form-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, \" Edit User  \"), errorList && React.createElement(ListErrors, {\n    errors: errorList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    id: \"edit-user-form\",\n    onSubmit: handleSubmit(onSubmit),\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"col-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, \" Image: \"), userImage && React.createElement(\"button\", {\n    className: \"btn btn-secondary col-md-3\",\n    onClick: () => handleDeleteImage(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, \"Delete Image\"), React.createElement(ImageUpload, {\n    onImageUpload: handleImageUpload,\n    onImageUploadError: handleImageUploadError,\n    resize: imageMaxSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, UserImage()), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, \" Name \"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter user name\"\n  }, register('username'), {\n    className: `form-control ${errors.username ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, \" Email \"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Enter email\"\n  }, register('email'), {\n    className: `form-control ${errors.email ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message)), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, \" Enter Password \"), React.createElement(\"input\", Object.assign({\n    type: \"password\",\n    placeholder: \"Enter a value to change current password\"\n  }, register('password'), {\n    className: `form-control ${errors.password ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message)), React.createElement(\"div\", {\n    className: \"form-group \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, React.createElement(DropdownButton, {\n    title: \"Select Role\",\n    onSelect: handleRoleSelect,\n    className: \"col-md-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    eventKey: \"user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, \"User\"), React.createElement(Dropdown.Item, {\n    eventKey: \"admin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, \"Admin\")), React.createElement(\"input\", Object.assign({\n    style: {\n      float: 'right'\n    },\n    type: \"text\",\n    disabled: true,\n    placeholder: \"no role selected\"\n  }, register('role'), {\n    className: `col-md-1 form-control float-right ${errors.role ? 'is-invalid' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }, (_errors$role = errors.role) === null || _errors$role === void 0 ? void 0 : _errors$role.message)), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-lg-10 col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group row-md-5 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, React.createElement(CancelButton, {\n    prompt: isDirty,\n    message: cancelEditUserMessage(),\n    onClick: () => handleCancelEditUser(),\n    className: \"btn ml-2 btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(\"button\", {\n    className: \"btn ml-2 btn-secondary\",\n    disabled: !isDirty,\n    onClick: () => handleResetEditUser(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, \"Reset\"), React.createElement(\"button\", {\n    className: \"btn ml-2 btn-success\",\n    disabled: !isDirty,\n    onClick: () => handleSubmitForm(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, \"Update\")))))));\n};\n\nexport default EditUser;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/user/EditUser.tsx"],"names":["React","useState","useEffect","useForm","useParams","useNavigate","toast","DropdownButton","Dropdown","Yup","yupResolver","CancelButton","createUserForUpdate","minimumPasswordLength","minimumEmailLength","minimumUserNameLength","UserApiService","createActionLoading","createActionUpdateUser","createActionSessionExpired","useAuth","ListErrors","checkUnauthorized","checkSessionExpired","checkTimeout","getTokenFromErrors","checkSessionExtendable","extendSession","checkForbidden","Image","ImageUpload","ImageResize","resizeImage","EditUser","navigate","user","state","dispatch","errorList","setErrorList","userId","userEdited","setUserEdited","userImage","setUserImage","userDefaultImage","setuserDefaultImage","submitForm","setSubmitForm","validationSchema","object","shape","username","string","required","min","email","password","lazy","value","Object","values","some","v","undefined","mixed","notRequired","confirmPassword","when","is","then","schema","oneOf","ref","length","role","imageChanged","bool","defaultValues","resolver","register","handleSubmit","reset","setValue","formState","errors","isDirty","fetchData","getDefaultUserImage","imageData","catch","error","Error","finally","getUserById","userRead","image","apiErrors","handleFetchUserError","setImageData","imageMaxSize","maxWidth","maxHeight","UserImage","onSubmit","data","userData","updateUser","id","userUpdated","handleSubmitFormSuccess","handleSubmitFormError","handleSubmitForm","success","handleSessionExpired","token","process","handleApiErrors","message","cancelEditUserMessage","handleResetEditUser","keepDirty","handleCancelEditUser","handleRoleSelect","e","shouldDirty","handleImageUpload","handleImageUploadError","handleDeleteImage","isImageDefined","isInitialImageDefined","base64","float"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { toast } from \"react-toastify\";\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport * as Yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport CancelButton from '../common/cancelConfirmation';\r\nimport { User, IUpdateUser, createUserForUpdate, minimumPasswordLength, minimumEmailLength, \r\n        minimumUserNameLength, ImageData, ImageSizeProps } from \"../../types\";\r\nimport { UserApiService } from \"../../services/api/UserApiService\";\r\nimport { createActionLoading, createActionUpdateUser, createActionSessionExpired } from '../../reducers/auth';\r\nimport useAuth from '../../contexts/auth';\r\nimport ListErrors from '../common/ListErrors';\r\nimport { IErrors } from '../../types';\r\nimport { checkUnauthorized, checkSessionExpired, checkTimeout, getTokenFromErrors, checkSessionExtendable,\r\n  extendSession, checkForbidden } from '../../utils/html.response.utils';\r\nimport Image from '../common/Image';\r\nimport ImageUpload from '../common/ImageUpload';\r\nimport ImageResize from '../common/ImageResize';\r\nimport { resizeImage } from '../../utils/image.utils';\r\n\r\nconst EditUser = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const { state: { user }, dispatch } = useAuth();\r\n  const [errorList, setErrorList] = React.useState<IErrors | null>();\r\n  const { userId } = useParams<{ userId: string }>();\r\n  const [userEdited, setUserEdited] = useState<User>();\r\n  const [userImage, setUserImage] = useState<ImageData>();\r\n  const [userDefaultImage, setuserDefaultImage] = useState<ImageData>();\r\n  const [submitForm, setSubmitForm] = useState<boolean>(false);\r\n \r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string().required('User name is required')\r\n      .min(minimumUserNameLength, `User name must be at least ${minimumUserNameLength} characters long`),\r\n    email: Yup.string().required('Email is required')\r\n      .min(minimumEmailLength, `Email must be at least ${minimumEmailLength} characters long`),\r\n    password: Yup.lazy(value => {\r\n      if (\r\n        value &&\r\n        Object.values(value).some(v => !(v === null || v === undefined || v === \"\"))\r\n      ) {\r\n        // Return our normal validation\r\n        return Yup.string().required()\r\n          .min(minimumPasswordLength, `Password must be at least ${minimumPasswordLength} characters long`);\r\n        }\r\n      // Otherwise, return a simple validation\r\n      return Yup.mixed().notRequired();\r\n    }),\r\n    confirmPassword: Yup.lazy(value => {\r\n      if (\r\n          value &&\r\n          Object.values(value).some(v => !(v === null || v === undefined || v === \"\"))\r\n      ) {\r\n          // Return our normal validation\r\n          return Yup.string().required()\r\n          .min(minimumPasswordLength, `Password must be at least ${minimumPasswordLength} characters long`)\r\n          .when('password', {is: (password: string) => password, then: (schema) => schema.required()})\r\n          .oneOf([Yup.ref('password'), null], \"Passwords don't match!\");\r\n          }\r\n      // Otherwise, return a simple validation\r\n      return Yup.string().when('password', {\r\n        is: (password: string) => {\r\n          return password && password.length > 0\r\n        },\r\n        then: (schema) => schema.required()\r\n      });\r\n      }),\r\n    role: Yup.string().required('Role is required'),\r\n    imageChanged: Yup.bool(),\r\n  });\r\n\r\n  type UpdateSubmitForm = {\r\n    username: string;\r\n    email: string;\r\n    password?: string;\r\n    role: string;\r\n    imageChanged: boolean;\r\n  };\r\n\r\n  const defaultValues = {username: userEdited?.username, email: userEdited?.email, password: undefined, role: userEdited?.role,\r\n                           imageChanged: false};\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    formState: { errors, isDirty }\r\n  } = useForm<UpdateSubmitForm>({\r\n    resolver: yupResolver(validationSchema),\r\n    defaultValues: defaultValues\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!userEdited) {\r\n      const fetchData = async (): Promise<void> => {\r\n        dispatch(createActionLoading(true));\r\n        await getDefaultUserImage()\r\n        .then(imageData => { \r\n          setuserDefaultImage(imageData);\r\n        }) \r\n        .catch(error => {\r\n          throw new Error(error);\r\n        })\r\n        .finally(() => dispatch(createActionLoading(false)));\r\n        await UserApiService.getUserById(userId!)\r\n        .then((userRead) => { setUserEdited(userRead); reset(userRead); setUserImage(userRead?.image);})\r\n        .catch((apiErrors: IErrors) => handleFetchUserError(apiErrors))\r\n        .finally(() => dispatch(createActionLoading(false)));\r\n       }\r\n      fetchData();      \r\n    }\r\n  // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user?.email === userEdited?.email) {\r\n      setImageData(user?.image);\r\n    }\r\n  // eslint-disable-next-line\r\n  }, [user]);\r\n\r\n  const imageMaxSize: ImageSizeProps = {maxWidth:200, maxHeight:200}\r\n\r\n  const UserImage = () => {\r\n    if(userImage) {\r\n      return <ImageResize imageData={userImage} resize={imageMaxSize}/>;\r\n    }  else {\r\n      return  userDefaultImage && <Image imageData={userDefaultImage}/> \r\n    }\r\n  }\r\n\r\n  const getDefaultUserImage = (): Promise<ImageData> => {\r\n    return resizeImage('/default-profil-image.jpg', 'image/jpg', imageMaxSize.maxWidth, imageMaxSize.maxHeight);\r\n  }\r\n\r\n  const onSubmit = async (data: UpdateSubmitForm) => {\r\n    if (userEdited && isDirty && submitForm) {\r\n      dispatch(createActionLoading(true));\r\n      const image: ImageData | undefined = userImage;\r\n      const userData: IUpdateUser = createUserForUpdate({...userEdited, ...data, image});\r\n      await UserApiService.updateUser(userEdited.id!, userData)\r\n      .then((userUpdated) => { handleSubmitFormSuccess(userUpdated); })\r\n      .catch((apiErrors: IErrors) =>  { handleSubmitFormError(apiErrors); });\r\n      dispatch(createActionLoading(false));\r\n     }\r\n  } \r\n\r\n  const handleSubmitForm = () => {\r\n    setSubmitForm(true);\r\n  }\r\n\r\n  const handleSubmitFormSuccess = (userUpdated: User) => {\r\n    setSubmitForm(false);\r\n    setUserEdited(userUpdated);\r\n    if (user?.email === userUpdated?.email) {\r\n      // Update state user to refresh user info in NavBar\r\n          dispatch(createActionUpdateUser(userUpdated!));\r\n    }\r\n    toast.success(`User updated successfully...`);\r\n    navigate(`/user/${userEdited!.id}`); \r\n  }\r\n  \r\n  const handleSessionExpired = (apiErrors: IErrors) => {\r\n    const token = getTokenFromErrors(apiErrors);\r\n    if (checkSessionExtendable(token)) {\r\n      toast.error(`${process} failed, session renewed, please try again`);\r\n      extendSession(token);\r\n    }\r\n    else {\r\n      toast.error(`${process} failed, session expired`);\r\n      dispatch(createActionSessionExpired());      \r\n    }\r\n  }\r\n\r\n  const handleApiErrors = (apiErrors: IErrors, process: string) => {\r\n    if (checkForbidden(apiErrors)) {\r\n      const message = apiErrors['message'];\r\n      toast.error(`Profile update failed: ${message}`);\r\n    } else if (checkSessionExpired(apiErrors)) {\r\n      toast.error(`${process} failed, session expired`);\r\n      dispatch(createActionSessionExpired());\r\n    } else if (checkUnauthorized(apiErrors)) {\r\n      toast.error(`Access denied`);\r\n    } else if (checkTimeout(apiErrors)) {\r\n      toast.error(`Request timeout`);\r\n    } else {\r\n      toast.error(`${process} failed, see error list`);\r\n      setErrorList(apiErrors);      \r\n    }\r\n  }\r\n\r\n  const handleFetchUserError = (apiErrors: IErrors) => {\r\n    handleApiErrors(apiErrors, 'User reading');\r\n  }\r\n\r\n  const handleSubmitFormError = (apiErrors: IErrors) => {\r\n    setSubmitForm(false);\r\n    handleApiErrors(apiErrors, 'User update');\r\n  }\r\n\r\n  const cancelEditUserMessage = () => `user edition and loose changes`;\r\n\r\n  const handleResetEditUser = () => {\r\n    setImageData(userEdited?.image);\r\n    reset(defaultValues, { keepDirty: false});\r\n  }\r\n\r\n  const handleCancelEditUser = () => {\r\n    navigate(`/user/${userEdited!.id}`);   \r\n  };\r\n\r\n  const handleRoleSelect=(e: any)=>{\r\n    setValue('role', e, {shouldDirty: true});\r\n  }\r\n\r\n  const handleImageUpload = (image: ImageData) => {\r\n    setImageData(image);\r\n  }\r\n\r\n  const handleImageUploadError = (error: any) => {\r\n    toast.error(`User image upload failed`);\r\n  }\r\n\r\n  const handleDeleteImage = () => {\r\n    setImageData(undefined);\r\n  }\r\n\r\n  const setImageData = (image: ImageData | undefined) => {\r\n    const isImageDefined = image !== undefined;\r\n    const isInitialImageDefined = userEdited?.image !== undefined;\r\n    const imageChanged = (isImageDefined !== isInitialImageDefined) ||\r\n                          (isImageDefined && image?.base64 !== user?.image?.base64);\r\n    setValue('imageChanged', imageChanged, {shouldDirty: true});\r\n    setUserImage(image);\r\n  }\r\n\r\n  return (\r\n    <div className={'page-wrapper'}>\r\n    {userEdited &&\r\n      (\r\n        <div className={\"col-md-12 form-wrapper\"}>\r\n          <h2> Edit User  </h2>\r\n          {errorList && <ListErrors errors={errorList} />}\r\n          <form id={\"edit-user-form\"} onSubmit={handleSubmit(onSubmit)} noValidate={true}>\r\n            <div className=\"form-group col-md-4\">\r\n              <div className=\"row\">\r\n                <label className=\"col-md-2\"> Image: </label>\r\n                { userImage && \r\n                  <button className=\"btn btn-secondary col-md-3\"  onClick={ () => handleDeleteImage() } >\r\n                    Delete Image\r\n                  </button>  \r\n                }   \r\n                <ImageUpload onImageUpload={handleImageUpload} onImageUploadError={handleImageUploadError} resize={imageMaxSize}/>                     \r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-12\">\r\n              {UserImage()}  \r\n            </div>\r\n\r\n            <div className=\"form-group col-md-12\">\r\n              <label htmlFor=\"username\"> Name </label>\r\n              <input \r\n                type=\"text\"\r\n                placeholder=\"Enter user name\"\r\n                {...register('username')}\r\n                className={`form-control ${errors.username ? 'is-invalid' : ''}`} \r\n              />\r\n              <div className=\"invalid-feedback\">{errors.username?.message}</div>\r\n           </div>\r\n\r\n            <div className=\"form-group col-md-12\">\r\n              <label htmlFor=\"email\"> Email </label>\r\n              <input \r\n                type=\"text\" \r\n                placeholder=\"Enter email\"\r\n                {...register('email')}\r\n                className={`form-control ${errors.email ? 'is-invalid' : ''}`} \r\n              />\r\n              <div className=\"invalid-feedback\">{errors.email?.message}</div>\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-12\">\r\n              <label htmlFor=\"password\"> Enter Password </label>\r\n              <input \r\n                type=\"password\" \r\n                placeholder=\"Enter a value to change current password\" \r\n                {...register('password')}\r\n                className={`form-control ${errors.password ? 'is-invalid' : ''}`}           \r\n              />\r\n              <div className=\"invalid-feedback\">{errors.password?.message}</div>\r\n            </div>\r\n\r\n            <div className=\"form-group \">\r\n              <div className=\"row\">\r\n                <DropdownButton title=\"Select Role\" onSelect={handleRoleSelect} className=\"col-md-1\">\r\n                    <Dropdown.Item eventKey='user'>User</Dropdown.Item>\r\n                    <Dropdown.Item eventKey='admin'>Admin</Dropdown.Item>\r\n                </DropdownButton>\r\n                <input style={ {float: 'right'} }    \r\n                  type=\"text\" disabled  placeholder=\"no role selected\" \r\n                  {...register('role')}\r\n                  className={`col-md-1 form-control float-right ${errors.role ? 'is-invalid' : ''}`}           \r\n                />\r\n              </div>\r\n              <div className=\"invalid-feedback\">{errors.role?.message}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-10 col-md-12\">\r\n                <div className=\"form-group row-md-5 pull-right\">\r\n                    <CancelButton prompt={isDirty} message={cancelEditUserMessage()} onClick={() => handleCancelEditUser()} className=\"btn ml-2 btn-danger\">Cancel</CancelButton>\r\n                    <button className=\"btn ml-2 btn-secondary\" disabled={!isDirty} onClick={ () => handleResetEditUser() } >\r\n                      Reset\r\n                    </button>\r\n                    <button className=\"btn ml-2 btn-success\" disabled={!isDirty} onClick={ () => handleSubmitForm()}>\r\n                      Update\r\n                    </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )\r\n    }\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default EditUser;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Documents\\\\Documents\\\\_Nest\\\\nest-react-blog-marc\\\\blog-frontend-axios\\\\src\\\\components\\\\blog\\\\ViewBlog.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport { PostApiService } from \"../../services/api/PostApiService\";\nimport { createActionLoading } from '../../reducers/auth';\nimport useAuth from '../../contexts/auth';\nimport ListErrors from '../common/ListErrors';\n\nconst ViewBlog = () => {\n  const _useParams = useParams(),\n        postId = _useParams.postId;\n\n  const _useAuth = useAuth(),\n        isLoading = _useAuth.state.isLoading,\n        dispatch = _useAuth.dispatch;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        post = _useState2[0],\n        setPost = _useState2[1];\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        errors = _React$useState2[0],\n        setErrors = _React$useState2[1];\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!post) {\n      const fetchData = async () => {\n        dispatch(createActionLoading(true));\n        await PostApiService.getPostById(postId).then(post => setPost(post)).catch(apiErrors => handleFetchPostError(apiErrors));\n        dispatch(createActionLoading(false));\n      };\n\n      fetchData();\n    } // eslint-disable-next-line\n\n  }, []);\n\n  const handleFetchPostError = apiErrors => {\n    toast.error(`Post reading failed, see error list`);\n    setErrors(apiErrors);\n  };\n\n  const handleReturn = () => {\n    navigate('/blog');\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, post && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: post.body\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-lg-10 col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group row-md-6 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn ml-2 btn-secondary\",\n    onClick: () => handleReturn(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Return\"), isLoading && React.createElement(\"span\", {\n    className: \"fa fa-circle-o-notch fa-spin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, errors && React.createElement(ListErrors, {\n    errors: errors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))));\n};\n\nexport default ViewBlog;","map":{"version":3,"sources":["F:/Documents/Documents/_Nest/nest-react-blog-marc/blog-frontend-axios/src/components/blog/ViewBlog.tsx"],"names":["React","useState","useEffect","useParams","useNavigate","toast","PostApiService","createActionLoading","useAuth","ListErrors","ViewBlog","postId","isLoading","state","dispatch","post","setPost","errors","setErrors","navigate","fetchData","getPostById","then","catch","apiErrors","handleFetchPostError","error","handleReturn","__html","body"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { IPost } from \"../../types\";\r\nimport { toast } from \"react-toastify\";\r\nimport { PostApiService } from \"../../services/api/PostApiService\";\r\nimport { createActionLoading } from '../../reducers/auth';\r\nimport useAuth from '../../contexts/auth';\r\nimport ListErrors from '../common/ListErrors';\r\nimport { IErrors } from '../../types';\r\n\r\nconst ViewBlog = () => {\r\n\r\n  const { postId } = useParams<{ postId: string }>();\r\n  const { state: { isLoading }, dispatch } = useAuth();\r\n  const [post, setPost] = useState<IPost>();\r\n  const [errors, setErrors] = React.useState<IErrors | null>();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!post) {\r\n      const fetchData = async (): Promise<void> => {\r\n        dispatch(createActionLoading(true));\r\n        await PostApiService.getPostById(postId!)\r\n        .then((post) => setPost(post))\r\n        .catch((apiErrors: IErrors) => handleFetchPostError(apiErrors))\r\n        dispatch(createActionLoading(false));\r\n      }\r\n      fetchData();  \r\n    }\r\n  // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleFetchPostError = (apiErrors: IErrors) => {\r\n    toast.error(`Post reading failed, see error list`);\r\n    setErrors(apiErrors);\r\n  }\r\n\r\n  const handleReturn = () => {\r\n    navigate('/blog');\r\n  }\r\n\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {post && \r\n        (\r\n          <div>\r\n            <div className=\"row\">\r\n              <div dangerouslySetInnerHTML={{__html: post.body}} />           \r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-10 col-md-12\">\r\n                <div className=\"form-group row-md-6 pull-right\">\r\n                  <button className=\"btn ml-2 btn-secondary\"  onClick={ () => handleReturn() } >\r\n                    Return\r\n                  </button>\r\n                  {isLoading &&\r\n                    <span className=\"fa fa-circle-o-notch fa-spin\" />\r\n                  }\r\n                 </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {errors && <ListErrors errors={errors} />}\r\n            </div>\r\n          </div>\r\n        )\r\n        }\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ViewBlog;"]},"metadata":{},"sourceType":"module"}